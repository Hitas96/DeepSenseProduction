(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-636d0d18"],{"011b":function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n("76c2"),a=n("a3f7"),s=n("c77c"),i=n("b9b9"),o=n("54ef"),u=n("6791"),c=n("a09b");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function l(t,e){let n=Object(a["a"])(t,"a","div"),o=Object(a["a"])(e,"b","div");[n,o]=Object(r["makeTypesMatch"])(n,o);const l=Object(s["a"])(n,o),d=Object(c["a"])(l),h=Object(i["a"])(o,d);return Object(u["a"])(h,d,l)}const d=Object(o["b"])({divNoNan_:l})},"015f":function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("6ad5"),a=n("5959");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(t,e){if((Object(r["A"])(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&Object(r["A"])(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");const n=[],s=[];return Object(a["a"])(t,n,s,e)}},"0280":function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var r=n("043e");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(t,e){const n=[];for(let r=0;r<e.length;r++)e[r]&&n.push(r);const a=Object(r["a"])(t,"int32"),s=Object(r["a"])([n.length,t.length],"int32");for(let r=0;r<n.length;r++){const e=a.indexToLoc(n[r]),i=r*t.length;s.values.set(e,i)}return s.toTensor()}},"043e":function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("34d7"),a=n("6ad5");
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(t,e="float32",n){return e=e||"float32",a["c"](t),new r["b"](t,e,n)}},"04b8":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]},"04c4":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("6ad5"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e,n){const o=Object(s["a"])(t,"x","bincount"),u=Object(s["a"])(e,"weights","bincount");i["b"]("int32"===o.dtype,()=>"Error in bincount: input dtype must be int32, but got "+o.dtype),i["b"](n>=0,()=>`size must be non-negative, but got ${n}.`),i["b"](u.size===o.size||0===u.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${o.shape}, weights shape: `+u.shape+".");const c={x:o,weights:u},l={size:n};return r["a"].runKernel(a["u"],c,l)}const c=Object(o["b"])({bincount_:u})},"05bb":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("a3f7"),a=n("6ad5"),s=n("5959");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(t,e,n){if(Object(a["d"])(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const i=Object(r["c"])(t,n);if(3!==i.length&&1!==i.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===i.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Object(s["a"])(t,e,i,n)}},"0777":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("6ad5"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e){const n=Object(s["a"])(t,"real","complex"),o=Object(s["a"])(e,"imag","complex");i["e"](n.shape,o.shape,`real and imag shapes, ${n.shape} and ${o.shape}, must match in call to tf.complex().`);const u={real:n,imag:o};return r["a"].runKernel(a["z"],u)}const c=Object(o["b"])({complex_:u})},"07d6":function(t,e){t.exports=function(){throw new Error("define cannot be used indirect")}},"08a9":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","round"),n={x:e};return r["a"].runKernel(a["vc"],n)}const u=Object(i["b"])({round_:o})},"09f4":function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),i=n("a3f7"),o=n("526f"),u=n("deb3"),c=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function l(t,e){let n=Object(i["a"])(t,"a","maximum"),c=Object(i["a"])(e,"b","maximum");[n,c]=Object(s["makeTypesMatch"])(n,c),"bool"===n.dtype&&(n=Object(u["a"])(n,"int32"),c=Object(u["a"])(c,"int32")),Object(o["a"])(n.shape,c.shape);const l={a:n,b:c};return r["a"].runKernel(a["Nb"],l)}const d=Object(c["b"])({maximum_:l})},"0db5":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","onesLike"),n={x:e};return r["a"].runKernel(a["bc"],n)}const u=Object(i["b"])({onesLike_:o})},"0eb5":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t,e,n=0){const i=Object(s["a"])(t,"x","pad");if(0===i.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:e,constantValue:n},u={x:i};return r["a"].runKernel(a["dc"],u,o)}const u=Object(i["b"])({pad_:o})},"0f6f":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("6ad5"),i=n("54ef"),o=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e,n,i,u,c="NHWC",l){let d=t;3===t.rank&&(d=Object(o["a"])(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let h=e;3===h.rank&&(h=Object(o["a"])(e,[1,e.shape[0],e.shape[1],e.shape[2]])),s["b"](4===d.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+d.shape+"."),s["b"](4===h.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+h.shape+"."),s["b"](4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+".");const p="NHWC"===c?d.shape[3]:d.shape[1],f="NHWC"===c?h.shape[3]:h.shape[1];s["b"](p===n[2],()=>`Error in conv2dDerFilter: depth of input ${p}) must match input depth in filter (${n[2]}.`),s["b"](f===n[3],()=>`Error in conv2dDerFilter: depth of dy (${f}) must match output depth for filter (${n[3]}).`),null!=l&&s["b"](s["v"](u),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`);const m={x:d,dy:h},b={strides:i,pad:u,dataFormat:c,dimRoundingMode:l,filterShape:n};return r["a"].runKernel(a["D"],m,b)}const c=Object(i["b"])({conv2DBackpropFilter_:u})},"0f86":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("6ad5"),o=n("54ef"),u=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(t,e,n=!1,o=!1){const c=Object(s["a"])(t,"images","resizeNearestNeighbor");i["b"](3===c.rank||4===c.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${c.rank}.`),i["b"](2===e.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+e+"."),i["b"]("float32"===c.dtype||"int32"===c.dtype,()=>"`images` must have `int32` or `float32` as dtype"),i["b"](!1===o||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let l=c,d=!1;3===c.rank&&(d=!0,l=Object(u["a"])(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const[]=e,h={images:l},p={alignCorners:n,halfPixelCenters:o,size:e},f=r["a"].runKernel(a["rc"],h,p);return d?Object(u["a"])(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const l=Object(o["b"])({resizeNearestNeighbor_:c})},1:function(t,e){},"113e":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]},"116b":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("a3f7"),a=n("6ad5"),s=n("dd7e"),i=n("838f"),o=n("54ef"),u=n("35c9");function c(t,e,n,o,c,l=[1,1],d="NHWC"){const h=Object(r["a"])(t,"x","separableConv2d"),p=Object(r["a"])(e,"depthwiseFilter","separableConv2d"),f=Object(r["a"])(n,"pointwiseFilter","separableConv2d");let m=h,b=!1;if(3===h.rank&&(b=!0,m=Object(u["a"])(h,[1,h.shape[0],h.shape[1],h.shape[2]])),"NCHW"===d)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");a["b"](4===m.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`),a["b"](4===p.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${p.rank}.`),a["b"](4===f.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${p.rank}.`),a["b"](1===f.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`),a["b"](1===f.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`);const g=p.shape[2],y=p.shape[3];a["b"](f.shape[2]===g*y,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${g*y}, but got ${f.shape[2]}.`);const x=Object(i["a"])(m,p,o,c,d,l),v=1,w=Object(s["a"])(x,f,v,"valid",d);return b?Object(u["a"])(w,[w.shape[1],w.shape[2],w.shape[3]]):w}const l=Object(o["b"])({separableConv2d_:c})},1212:function(t,e,n){(function(t){var r;(function(t,a,s){function i(t){var e=this,n=c();e.next=function(){var t=2091639*e.s0+2.3283064365386963e-10*e.c;return e.s0=e.s1,e.s1=e.s2,e.s2=t-(e.c=0|t)},e.c=1,e.s0=n(" "),e.s1=n(" "),e.s2=n(" "),e.s0-=n(t),e.s0<0&&(e.s0+=1),e.s1-=n(t),e.s1<0&&(e.s1+=1),e.s2-=n(t),e.s2<0&&(e.s2+=1),n=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function u(t,e){var n=new i(t),r=e&&e.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}function c(){var t=4022871197,e=function(e){e=e.toString();for(var n=0;n<e.length;n++){t+=e.charCodeAt(n);var r=.02519603282416938*t;t=r>>>0,r-=t,r*=t,t=r>>>0,r-=t,t+=4294967296*r}return 2.3283064365386963e-10*(t>>>0)};return e}a&&a.exports?a.exports=u:n("07d6")&&n("3c35")?(r=function(){return u}.call(e,n,e,a),void 0===r||(a.exports=r)):this.alea=u})(0,t,n("07d6"))}).call(this,n("62e4")(t))},"122e":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t,e=null,n=!1){const i=Object(s["a"])(t,"x","mean"),o={x:i},u={axis:e,keepDims:n};return r["a"].runKernel(a["Ob"],o,u)}const u=Object(i["b"])({mean_:o})},"132b":function(t,e,n){"use strict";n.d(e,"b",(function(){return a["a"]})),n.d(e,"c",(function(){return s["a"]})),n.d(e,"d",(function(){return i["a"]})),n.d(e,"e",(function(){return o["a"]})),n.d(e,"f",(function(){return u["a"]})),n.d(e,"h",(function(){return c["a"]})),n.d(e,"i",(function(){return l["a"]})),n.d(e,"j",(function(){return d["a"]})),n.d(e,"k",(function(){return h["a"]})),n.d(e,"l",(function(){return p["a"]})),n.d(e,"m",(function(){return f["a"]})),n.d(e,"n",(function(){return m["a"]})),n.d(e,"o",(function(){return b["a"]})),n.d(e,"p",(function(){return g["a"]})),n.d(e,"q",(function(){return y["a"]})),n.d(e,"r",(function(){return x["a"]})),n.d(e,"s",(function(){return T})),n.d(e,"x",(function(){return E["a"]})),n.d(e,"t",(function(){return A["a"]})),n.d(e,"u",(function(){return D})),n.d(e,"v",(function(){return _})),n.d(e,"w",(function(){return z})),n.d(e,"y",(function(){return L["a"]})),n.d(e,"A",(function(){return P["a"]})),n.d(e,"B",(function(){return B["a"]})),n.d(e,"C",(function(){return W["a"]})),n.d(e,"D",(function(){return V["a"]})),n.d(e,"E",(function(){return U["a"]})),n.d(e,"F",(function(){return G["a"]})),n.d(e,"G",(function(){return H["a"]})),n.d(e,"H",(function(){return w["a"]})),n.d(e,"I",(function(){return K})),n.d(e,"J",(function(){return Y})),n.d(e,"K",(function(){return J})),n.d(e,"L",(function(){return tt})),n.d(e,"M",(function(){return et["a"]})),n.d(e,"N",(function(){return nt["a"]})),n.d(e,"O",(function(){return rt["a"]})),n.d(e,"P",(function(){return at["a"]})),n.d(e,"Q",(function(){return ot})),n.d(e,"R",(function(){return ut["a"]})),n.d(e,"S",(function(){return ct["a"]})),n.d(e,"U",(function(){return lt["a"]})),n.d(e,"V",(function(){return dt["a"]})),n.d(e,"W",(function(){return ht["a"]})),n.d(e,"X",(function(){return pt["a"]})),n.d(e,"Y",(function(){return gt})),n.d(e,"Z",(function(){return yt["a"]})),n.d(e,"ab",(function(){return xt["a"]})),n.d(e,"bb",(function(){return vt["a"]})),n.d(e,"db",(function(){return wt["a"]})),n.d(e,"fb",(function(){return kt["a"]})),n.d(e,"hb",(function(){return Ot["a"]})),n.d(e,"jb",(function(){return It["a"]})),n.d(e,"kb",(function(){return Nt["a"]})),n.d(e,"lb",(function(){return St["a"]})),n.d(e,"mb",(function(){return Ct["a"]})),n.d(e,"nb",(function(){return At})),n.d(e,"pb",(function(){return $t["a"]})),n.d(e,"qb",(function(){return Rt["a"]})),n.d(e,"rb",(function(){return Dt["a"]})),n.d(e,"tb",(function(){return Ft["a"]})),n.d(e,"vb",(function(){return _t["a"]})),n.d(e,"wb",(function(){return Mt["a"]})),n.d(e,"Ab",(function(){return zt["a"]})),n.d(e,"Eb",(function(){return Lt["a"]})),n.d(e,"Fb",(function(){return Pt["a"]})),n.d(e,"Gb",(function(){return Bt["a"]})),n.d(e,"Hb",(function(){return Wt["a"]})),n.d(e,"Ib",(function(){return Vt["a"]})),n.d(e,"Jb",(function(){return Ut["a"]})),n.d(e,"Nb",(function(){return Gt["a"]})),n.d(e,"Ob",(function(){return Ht["a"]})),n.d(e,"Pb",(function(){return qt["a"]})),n.d(e,"Qb",(function(){return Kt["a"]})),n.d(e,"Rb",(function(){return Xt["a"]})),n.d(e,"Sb",(function(){return Yt["a"]})),n.d(e,"Tb",(function(){return Zt["a"]})),n.d(e,"Ub",(function(){return Jt["a"]})),n.d(e,"Vb",(function(){return Qt["a"]})),n.d(e,"Wb",(function(){return te["a"]})),n.d(e,"Xb",(function(){return ee["a"]})),n.d(e,"Zb",(function(){return k["a"]})),n.d(e,"ac",(function(){return ne["a"]})),n.d(e,"bc",(function(){return re["a"]})),n.d(e,"cc",(function(){return ae["a"]})),n.d(e,"dc",(function(){return se["a"]})),n.d(e,"ec",(function(){return ie["a"]})),n.d(e,"gc",(function(){return oe["a"]})),n.d(e,"hc",(function(){return ue["a"]})),n.d(e,"ic",(function(){return ce["a"]})),n.d(e,"kc",(function(){return le["a"]})),n.d(e,"lc",(function(){return de["a"]})),n.d(e,"nc",(function(){return be})),n.d(e,"pc",(function(){return O["a"]})),n.d(e,"rc",(function(){return ye})),n.d(e,"sc",(function(){return xe["a"]})),n.d(e,"tc",(function(){return ve["a"]})),n.d(e,"vc",(function(){return we["a"]})),n.d(e,"xc",(function(){return ke["a"]})),n.d(e,"yc",(function(){return Oe["a"]})),n.d(e,"zc",(function(){return Ie["a"]})),n.d(e,"Bc",(function(){return Se})),n.d(e,"Cc",(function(){return Ce["a"]})),n.d(e,"Dc",(function(){return Te})),n.d(e,"Ec",(function(){return Ae})),n.d(e,"Fc",(function(){return Re})),n.d(e,"Gc",(function(){return Fe})),n.d(e,"Hc",(function(){return _e["a"]})),n.d(e,"Ic",(function(){return Me["a"]})),n.d(e,"Kc",(function(){return ze["a"]})),n.d(e,"Lc",(function(){return Le["a"]})),n.d(e,"Mc",(function(){return Pe["a"]})),n.d(e,"Nc",(function(){return We})),n.d(e,"Oc",(function(){return Ge})),n.d(e,"Pc",(function(){return qe})),n.d(e,"Qc",(function(){return Ke["a"]})),n.d(e,"Rc",(function(){return Xe["a"]})),n.d(e,"Sc",(function(){return Ye["a"]})),n.d(e,"Tc",(function(){return Ze["a"]})),n.d(e,"Uc",(function(){return Je["a"]})),n.d(e,"Vc",(function(){return Qe["a"]})),n.d(e,"Wc",(function(){return jt["a"]})),n.d(e,"Xc",(function(){return tn["a"]})),n.d(e,"Yc",(function(){return nn})),n.d(e,"Zc",(function(){return an})),n.d(e,"ad",(function(){return on})),n.d(e,"bd",(function(){return cn})),n.d(e,"dd",(function(){return ln["a"]})),n.d(e,"ed",(function(){return dn["a"]})),n.d(e,"fd",(function(){return hn["a"]})),n.d(e,"hd",(function(){return pn["a"]})),n.d(e,"id",(function(){return fn["a"]})),n.d(e,"jd",(function(){return mn["a"]})),n.d(e,"kd",(function(){return N["a"]})),n.d(e,"ld",(function(){return bn["a"]})),n.d(e,"nd",(function(){return gn["a"]})),n.d(e,"od",(function(){return yn["a"]})),n.d(e,"pd",(function(){return S["a"]})),n.d(e,"qd",(function(){return vn})),n.d(e,"rd",(function(){return kn})),n.d(e,"sd",(function(){return In})),n.d(e,"td",(function(){return Sn})),n.d(e,"ud",(function(){return Cn["a"]})),n.d(e,"vd",(function(){return jn["a"]})),n.d(e,"wd",(function(){return Tn["a"]})),n.d(e,"ob",(function(){return En["a"]})),n.d(e,"zb",(function(){return An["a"]})),n.d(e,"Db",(function(){return $n["a"]})),n.d(e,"cd",(function(){return Rn["a"]})),n.d(e,"zd",(function(){return Dn["a"]})),n.d(e,"Ad",(function(){return Fn["a"]})),n.d(e,"Bd",(function(){return pe["a"]})),n.d(e,"Cd",(function(){return _n["a"]})),n.d(e,"Ed",(function(){return Mn["a"]})),n.d(e,"Fd",(function(){return zn["a"]})),n.d(e,"Gd",(function(){return Ln["a"]})),n.d(e,"Hd",(function(){return Pn["a"]})),n.d(e,"Id",(function(){return fe["a"]})),n.d(e,"Kd",(function(){return Bn["a"]})),n.d(e,"Ld",(function(){return Wn["a"]})),n.d(e,"Md",(function(){return C["a"]})),n.d(e,"Nd",(function(){return Vn["a"]})),n.d(e,"Od",(function(){return Un["a"]})),n.d(e,"Pd",(function(){return Hn})),n.d(e,"Qd",(function(){return qn["a"]})),n.d(e,"Rd",(function(){return Kn})),n.d(e,"Sd",(function(){return Xn})),n.d(e,"Td",(function(){return Yn})),n.d(e,"Ud",(function(){return Tt["a"]})),n.d(e,"Vd",(function(){return Zn["a"]})),n.d(e,"Xd",(function(){return Jn["a"]})),n.d(e,"Yd",(function(){return Qn["a"]})),n.d(e,"Zd",(function(){return tr["a"]})),n.d(e,"ae",(function(){return er["a"]})),n.d(e,"be",(function(){return nr})),n.d(e,"ce",(function(){return rr["a"]})),n.d(e,"de",(function(){return ar["a"]})),n.d(e,"ee",(function(){return sr["a"]})),n.d(e,"fe",(function(){return ir["a"]})),n.d(e,"z",(function(){return ur})),n.d(e,"ib",(function(){return cr["a"]})),n.d(e,"xb",(function(){return cr["b"]})),n.d(e,"yb",(function(){return cr["c"]})),n.d(e,"Kb",(function(){return cr["d"]})),n.d(e,"Lb",(function(){return cr["e"]})),n.d(e,"wc",(function(){return cr["f"]})),n.d(e,"g",(function(){return lr["a"]})),n.d(e,"cb",(function(){return lr["b"]})),n.d(e,"fc",(function(){return lr["c"]})),n.d(e,"jc",(function(){return lr["d"]})),n.d(e,"mc",(function(){return lr["e"]})),n.d(e,"qc",(function(){return lr["f"]})),n.d(e,"Jc",(function(){return lr["g"]})),n.d(e,"Dd",(function(){return lr["h"]})),n.d(e,"Jd",(function(){return lr["i"]})),n.d(e,"Wd",(function(){return dr["a"]})),n.d(e,"uc",(function(){return hr["a"]})),n.d(e,"oc",(function(){return mr})),n.d(e,"gd",(function(){return br["a"]})),n.d(e,"xd",(function(){return gr["a"]})),n.d(e,"ub",(function(){return yr["a"]})),n.d(e,"eb",(function(){return kr})),n.d(e,"gb",(function(){return Or})),n.d(e,"T",(function(){return Ir})),n.d(e,"Cb",(function(){return Sr})),n.d(e,"Ac",(function(){return I["b"]})),n.d(e,"a",(function(){return I["a"]})),n.d(e,"Bb",(function(){return Ka})),n.d(e,"Mb",(function(){return Xa})),n.d(e,"Yb",(function(){return Ya})),n.d(e,"yd",(function(){return Ha})),n.d(e,"sb",(function(){return r})),n.d(e,"md",(function(){return qa}));var r={};n.r(r),n.d(r,"conv2d",(function(){return Dr})),n.d(r,"depthwiseConv2d",(function(){return zr})),n.d(r,"matMul",(function(){return Pr}));var a=n("8ae0"),s=n("a374"),i=n("4615"),o=n("9117"),u=n("4850"),c=n("df81"),l=n("4516"),d=n("e89f"),h=n("db49"),p=n("220f"),f=n("dc59"),m=n("7e36"),b=n("6002"),g=n("d1a8"),y=n("9748"),x=n("ba53"),v=n("a3f7"),w=n("649e"),k=n("487b"),O=n("a5aa"),I=n("54ef"),N=n("ffb3"),S=n("6d3c"),C=n("8888");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function j(t,e,n,r,a,s){const i=Object(v["a"])(t,"forgetBias","basicLSTMCell"),u=Object(v["a"])(e,"lstmKernel","basicLSTMCell"),c=Object(v["a"])(n,"lstmBias","basicLSTMCell"),l=Object(v["a"])(r,"data","basicLSTMCell"),d=Object(v["a"])(a,"c","basicLSTMCell"),h=Object(v["a"])(s,"h","basicLSTMCell"),p=Object(w["a"])([l,h],1),f=Object(k["a"])(p,u),m=Object(o["a"])(f,c),b=m.shape[0],g=m.shape[1]/4,y=[b,g],x=Object(S["a"])(m,[0,0],y),I=Object(S["a"])(m,[0,g],y),j=Object(S["a"])(m,[0,2*g],y),T=Object(S["a"])(m,[0,3*g],y),E=Object(o["a"])(Object(O["a"])(Object(N["a"])(x),Object(C["a"])(I)),Object(O["a"])(d,Object(N["a"])(Object(o["a"])(i,j)))),A=Object(O["a"])(Object(C["a"])(E),Object(N["a"])(T));return[E,A]}const T=Object(I["b"])({basicLSTMCell_:j});var E=n("3b28"),A=n("71db"),$=n("6ad5");function R(t,e,n,r,a,s){const i=Object(v["a"])(t,"x","batchNorm"),o=Object(v["a"])(e,"mean","batchNorm"),u=Object(v["a"])(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(v["a"])(a,"scale","batchNorm")),null!=r&&(l=Object(v["a"])(r,"offset","batchNorm")),$["b"](2===i.rank,()=>"Error in batchNorm2D: x must be rank 2 but got rank "+i.rank+"."),$["b"](2===o.rank||1===o.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),$["b"](2===u.rank||1===u.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=c&&$["b"](2===c.rank||1===c.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),null!=l&&$["b"](2===l.rank||1===l.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),Object(A["a"])(i,o,u,l,c,s)}const D=Object(I["b"])({batchNorm2d_:R});function F(t,e,n,r,a,s){const i=Object(v["a"])(t,"x","batchNorm"),o=Object(v["a"])(e,"mean","batchNorm"),u=Object(v["a"])(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(v["a"])(a,"scale","batchNorm")),null!=r&&(l=Object(v["a"])(r,"offset","batchNorm")),$["b"](3===i.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+i.rank+"."),$["b"](3===o.rank||1===o.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),$["b"](3===u.rank||1===u.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=c&&$["b"](3===c.rank||1===c.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),null!=l&&$["b"](3===l.rank||1===l.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),Object(A["a"])(i,o,u,l,c,s)}const _=Object(I["b"])({batchNorm3d_:F});function M(t,e,n,r,a,s){const i=Object(v["a"])(t,"x","batchNorm"),o=Object(v["a"])(e,"mean","batchNorm"),u=Object(v["a"])(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(v["a"])(a,"scale","batchNorm")),null!=r&&(l=Object(v["a"])(r,"offset","batchNorm")),$["b"](4===i.rank,()=>"Error in batchNorm4D: x must be rank 4 but got rank "+i.rank+"."),$["b"](4===o.rank||1===o.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),$["b"](4===u.rank||1===u.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=c&&$["b"](4===c.rank||1===c.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),null!=l&&$["b"](4===l.rank||1===l.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),Object(A["a"])(i,o,u,l,c,s)}const z=Object(I["b"])({batchNorm4d_:M});var L=n("04c4"),P=n("48db"),B=n("043e"),W=n("deb3"),V=n("5960"),U=n("c08f"),G=n("f0a9"),H=n("0777");function q(t){return Object(w["a"])(t,0)}const K=Object(I["b"])({concat1d_:q});function X(t,e){return Object(w["a"])(t,e)}const Y=Object(I["b"])({concat2d_:X});function Z(t,e){return Object(w["a"])(t,e)}const J=Object(I["b"])({concat3d_:Z});function Q(t,e){return Object(w["a"])(t,e)}const tt=Object(I["b"])({concat4d_:Q});var et=n("7675"),nt=n("dd7e"),rt=n("cd1f"),at=n("1590"),st=n("99d0");function it(t,e,n,r,a){const s=Object(v["a"])(t,"x","conv3dTranspose"),i=Object(v["a"])(e,"filter","conv3dTranspose");return Object(st["a"])(n,s,i,r,a)}const ot=Object(I["b"])({conv3dTranspose_:it});var ut=n("eff7"),ct=n("c1a2"),lt=n("1e68"),dt=n("2f2c"),ht=n("364e"),pt=n("838f"),ft=n("6ae2"),mt=n("c05b");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bt(t){const e=Object(v["a"])(t,"x","diag"),n={x:e};return ft["a"].runKernel(mt["R"],n)}const gt=Object(I["b"])({diag_:bt});var yt=n("c170"),xt=n("c77c"),vt=n("011b"),wt=n("29fc"),kt=n("9e38"),Ot=n("b9b9"),It=n("8e05"),Nt=n("4f20"),St=n("dae8"),Ct=n("1ba2"),jt=n("35c9"),Tt=n("8d71");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Et(t,e,n,r="float32"){null==e&&(e=t);const a=Object(B["a"])([t,e],r),s=t<=e?t:e;for(let o=0;o<s;++o)a.set(1,o,o);const i=Object(jt["a"])(a.toTensor(),[t,e]);if(null==n)return i;if(1===n.length)return Object(Tt["a"])(Object(St["a"])(i,0),[n[0],1,1]);if(2===n.length)return Object(Tt["a"])(Object(St["a"])(Object(St["a"])(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Object(Tt["a"])(Object(St["a"])(Object(St["a"])(Object(St["a"])(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}const At=Object(I["b"])({eye_:Et});var $t=n("46b8"),Rt=n("d369"),Dt=n("508f"),Ft=n("91a3"),_t=n("cef0"),Mt=n("bb2d"),zt=n("24b0"),Lt=n("fc0b"),Pt=n("5980"),Bt=n("6fef"),Wt=n("6f37"),Vt=n("e1fd"),Ut=n("b21c"),Gt=n("5894"),Ht=n("e101"),qt=n("1359"),Kt=n("46b1"),Xt=n("c314"),Yt=n("804a"),Zt=n("afda"),Jt=n("e333"),Qt=n("ef00"),te=n("f183"),ee=n("d25f"),ne=n("c021"),re=n("9fe6"),ae=n("53fd"),se=n("8bc9"),ie=n("09f4"),oe=n("122e"),ue=n("ae6d"),ce=n("f0e5"),le=n("93db"),de=n("4611"),he=n("36e5"),pe=n("93b2"),fe=n("a009");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function me(t,e=null,n=!1){t=Object(v["a"])(t,"x","moments");const r=Object($["I"])(e,t.shape),a=Object(oe["a"])(t,r,n);let s=a.shape;n||(s=Object(he["e"])(a.shape,r));const i=Object(pe["a"])(Object(fe["a"])(Object(W["a"])(t,"float32"),Object(jt["a"])(a,s))),o=Object(oe["a"])(i,r,n);return{mean:a,variance:o}}const be=Object(I["b"])({moments_:me});function ge(t,e,n,r){const a=Object(v["a"])(e,"data","multiRNNCell"),s=Object(v["b"])(n,"c","multiRNNCell"),i=Object(v["b"])(r,"h","multiRNNCell");let o=a;const u=[];for(let d=0;d<t.length;d++){const e=t[d](o,s[d],i[d]);u.push(e[0]),u.push(e[1]),o=e[1]}const c=[],l=[];for(let d=0;d<u.length;d+=2)c.push(u[d]),l.push(u[d+1]);return[c,l]}const ye=Object(I["b"])({multiRNNCell_:ge});var xe=n("3efc"),ve=n("3bb7"),we=n("d4de"),ke=n("e22c"),Oe=n("c22a"),Ie=n("0db5");function Ne(t,e){const n=Object(v["a"])(t,"v1","outerProduct"),r=Object(v["a"])(e,"v2","outerProduct");$["b"](1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const a=Object(jt["a"])(n,[-1,1]),s=Object(jt["a"])(r,[1,-1]);return Object(k["a"])(a,s)}const Se=Object(I["b"])({outerProduct_:Ne});var Ce=n("0eb5");function je(t,e,n=0){return Object($["b"])(2===e.length,()=>"Invalid number of paddings. Must be length of 2."),Object(Ce["a"])(t,[e],n)}const Te=Object(I["b"])({pad1d_:je});function Ee(t,e,n=0){return Object($["b"])(2===e.length&&2===e[0].length&&2===e[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(Ce["a"])(t,e,n)}const Ae=Object(I["b"])({pad2d_:Ee});function $e(t,e,n=0){return Object($["b"])(3===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(Ce["a"])(t,e,n)}const Re=Object(I["b"])({pad3d_:$e});function De(t,e,n=0){return Object($["b"])(4===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length&&2===e[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(Ce["a"])(t,e,n)}const Fe=Object(I["b"])({pad4d_:De});var _e=n("eaf4"),Me=n("c9f1"),ze=n("520f"),Le=n("7568"),Pe=n("f3ae");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Be(t,e,n){const r=Object($["N"])(t);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type "+n);a=new Uint8Array(r)}for(let s=0;s<r;s++)a[s]=e();return ft["a"].makeTensor(a,t,n)}const We=Object(I["b"])({rand_:Be});var Ve=n("d4e4");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ue(t,e,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type "+r);const s=new Ve["b"](e,n,r,a),i=Object(B["a"])(t,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}const Ge=Object(I["b"])({randomGamma_:Ue});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function He(t,e=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);const s=new Ve["a"](e,n,r,!1,a),i=Object(B["a"])(t,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}const qe=Object(I["b"])({randomNormal_:He});var Ke=n("8629"),Xe=n("84d6"),Ye=n("d7b0"),Ze=n("b500"),Je=n("917a"),Qe=n("46a8"),tn=n("d08e");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function en(t){const e=Object(v["a"])(t,"x","reverse");return $["b"](1===e.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),Object(tn["a"])(e,0)}const nn=Object(I["b"])({reverse1d_:en});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rn(t,e){const n=Object(v["a"])(t,"x","reverse");return $["b"](2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Object(tn["a"])(n,e)}const an=Object(I["b"])({reverse2d_:rn});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sn(t,e){const n=Object(v["a"])(t,"x","reverse");return $["b"](3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Object(tn["a"])(n,e)}const on=Object(I["b"])({reverse3d_:sn});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function un(t,e){const n=Object(v["a"])(t,"x","reverse");return $["b"](4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Object(tn["a"])(n,e)}const cn=Object(I["b"])({reverse4d_:un});var ln=n("08a9"),dn=n("5f2a"),hn=n("015f"),pn=n("b39e"),fn=n("116b"),mn=n("f74c"),bn=n("1df6"),gn=n("6932"),yn=n("5dc4");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xn(t,e,n){const r=Object(v["a"])(t,"x","slice1d");return $["b"](1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Object(S["a"])(r,[e],[n])}const vn=Object(I["b"])({slice1d_:xn});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wn(t,e,n){const r=Object(v["a"])(t,"x","slice2d");return $["b"](2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Object(S["a"])(r,e,n)}const kn=Object(I["b"])({slice2d_:wn});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function On(t,e,n){const r=Object(v["a"])(t,"x","slice3d");return $["b"](3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Object(S["a"])(r,e,n)}const In=Object(I["b"])({slice3d_:On});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nn(t,e,n){const r=Object(v["a"])(t,"x","slice4d");return $["b"](4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Object(S["a"])(r,e,n)}const Sn=Object(I["b"])({slice4d_:Nn});var Cn=n("5f87"),jn=n("9ffd"),Tn=n("7580"),En=n("1ab7"),An=n("4c7a"),$n=n("69dc"),Rn=n("b61d"),Dn=n("45bb"),Fn=n("163a"),_n=n("4184"),Mn=n("d1f4"),zn=n("d54d"),Ln=n("2fb1"),Pn=n("de1a"),Bn=n("e053"),Wn=n("d30a"),Vn=n("357d"),Un=n("960f"),Gn=n("5959");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Hn(t,e,n){if(Object($["d"])(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Object(v["c"])(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Object(Gn["a"])(t,e,r,n)}var qn=n("05bb");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kn(t,e,n){if(Object($["d"])(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Object(v["c"])(t,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Object(Gn["a"])(t,e,r,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xn(t,e,n){if(Object($["d"])(t),null!=e&&5!==e.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Object(v["c"])(t,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Object(Gn["a"])(t,e,r,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yn(t,e,n){if(Object($["d"])(t),null!=e&&6!==e.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Object(v["c"])(t,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||r,Object(Gn["a"])(t,e,r,n)}var Zn=n("5616"),Jn=n("7e6a"),Qn=n("853e"),tr=n("53f2"),er=n("3a44");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nr(t,e=!0,n,r){return ft["a"].makeVariable(t,e,n,r)}var rr=n("6791"),ar=n("a780"),sr=n("5a2c"),ir=n("a09b");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function or(t,e,n){const r=Object(v["a"])(t,"tensor","boolMask"),a=Object(v["a"])(e,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;$["b"](i>0,()=>"mask cannot be scalar"),$["e"](o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let m=s;m<s+i;m++)u*=o[m];const c=o.slice(0,s).concat([u],o.slice(s+i)),l=Object(jt["a"])(r,c),d=Object(jt["a"])(a,[-1]),h=await Object(ar["a"])(d),p=Object(Mn["a"])(h,[1]),f=Object(Ft["a"])(l,p,s);return t!==r&&r.dispose(),e!==a&&a.dispose(),p.dispose(),l.dispose(),d.dispose(),h.dispose(),f}const ur=or;var cr=n("f1b5"),lr=n("ccb1"),dr=n("c912"),hr=n("f757"),pr=n("76c2");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fr(t,e,n,r,a=!0){const s=Object(v["a"])(t,"v","movingAverage"),i=Object(v["a"])(e,"x","movingAverage"),u=Object(v["a"])(n,"decay","movingAverage");Object(pr["assertTypesMatch"])(s,i),$["b"]($["a"](s.shape,i.shape),()=>"Shape mismatch in v and x");const c=Object(hn["a"])(1),l=Object(fe["a"])(c,u);let d=Object(O["a"])(Object(fe["a"])(i,s),l);if(a){$["b"](null!=r,()=>"When using zeroDebias: true, step is required.");const t=Object(v["a"])(r,"step","movingAverage");d=Object(xt["a"])(d,Object(fe["a"])(c,Object(Me["a"])(u,t)))}return Object(o["a"])(s,d)}const mr=Object(I["b"])({movingAverage_:fr});var br=n("8bfa"),gr=n("bc62"),yr=n("ba40"),xr=n("34d7");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vr(t,e){if(null==e)return t.shape.slice();if($["a"](t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wr(t,e,n,r){const a=Object(v["a"])(t,"x","dropout");if($["b"]("float32"===a.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),$["b"](e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),0===e)return t instanceof xr["a"]?a.clone():a;const s=vr(a,n),i=1-e,u=Object(xt["a"])(Object(Rt["a"])(Object(o["a"])(Object(Ke["a"])(s,0,1,"float32",r),i)),i);return Object(O["a"])(a,u)}const kr=Object(I["b"])({dropout_:wr});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Or(t){return Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2))))}function Ir(t,e,n){const r=1-t%2,a=new Float32Array(t);for(let s=0;s<t;++s){const i=2*Math.PI*s/(t+r-1);a[s]=e-n*Math.cos(i)}return Object(Un["a"])(a,"float32")}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Nr(t,e,n=1){const r=Object(v["a"])(t,"predictions","inTopK"),a=Object(v["a"])(e,"targets","inTopK");Object($["b"])(r.rank>1,()=>"inTopK() expects the predictions to be of rank 2 or higher, but got "+r.rank),Object($["b"])(r.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`),Object($["e"])(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];Object($["b"])(n>0&&n<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`);const i=await r.data(),o=await a.data(),[u,c]=[i.length/s,s],l=Object($["o"])("bool",u);for(let d=0;d<u;d++){const t=d*c,e=i.subarray(t,t+c),r=[];for(let n=0;n<e.length;n++)r.push({value:e[n],index:n});r.sort((t,e)=>e.value-t.value),l[d]=0;for(let a=0;a<n;a++)if(r[a].index===o[d]){l[d]=1;break}}return t!==r&&r.dispose(),e!==a&&a.dispose(),Object(Vn["a"])(l,a.shape,"bool")}const Sr=Nr;var Cr=n("538e"),jr=n("526f"),Tr=n("0f6f"),Er=n("73d3"),Ar=n("b818"),$r=n("4749");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Rr({x:t,filter:e,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:u,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:d}){if(c=c||"linear",!1===Object($r["d"])(ft["a"].state.gradientDepth,c)){let h=Object(nt["a"])(t,e,n,r,a,s,i);return null!=u&&(h=Object(o["a"])(h,u)),Object($r["a"])(h,c,l,d)}const h=Object(v["a"])(t,"x","conv2d"),p=Object(v["a"])(e,"filter","conv2d");let f=h,m=!1;3===h.rank&&(m=!0,f=Object(jt["a"])(h,[1,h.shape[0],h.shape[1],h.shape[2]])),$["b"](4===f.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+f.rank+"."),$["b"](4===p.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+p.rank+"."),null!=i&&$["b"]($["v"](r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),$["b"](f.shape[3]===p.shape[2],()=>`Error in conv2d: depth of input (${f.shape[3]}) must match input depth for filter ${p.shape[2]}.`),$["b"](Ar["h"](n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),$["b"]("NHWC"===a,()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`);const b=Ar["a"](f.shape,p.shape,n,s,r,i);let g,y;null!=u&&(g=Object(v["a"])(u,"bias","fused conv2d"),[g]=Object(pr["makeTypesMatch"])(g,h),jr["a"](b.outShape,g.shape)),null!=l&&(y=Object(v["a"])(l,"prelu weights","fused conv2d"));const x=(t,e)=>{const[a,i,o,u]=e,l=Object($r["c"])(t,o,c);$["b"](Ar["i"](s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const d=Object(Er["a"])(i.shape,l,a,n,r),h=Object(Tr["a"])(i,l,a.shape,n,r),p=[d,h];if(null!=u){const t=Object($r["b"])(u,l);p.push(t)}return p},w={x:f,filter:p,bias:g,preluActivationWeights:y},k={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:c,leakyreluAlpha:d};if(null==u){const t=Object(Cr["a"])((t,e,n)=>{let r=ft["a"].runKernel(mt["jb"],w,k);return n([e,t,r]),m&&(r=Object(jt["a"])(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}});return t(f,p)}{const t=Object(Cr["a"])((t,e,n,r)=>{let a=ft["a"].runKernel(mt["jb"],w,k);return r([e,t,a,n]),m&&(a=Object(jt["a"])(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}});return t(f,p,g)}}const Dr=Object(I["b"])({fusedConv2d_:Rr});var Fr=n("6926"),_r=n("8cb0");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Mr({x:t,filter:e,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:u,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:d}){if(!1===Object($r["d"])(ft["a"].state.gradientDepth,c)){let h=Object(pt["a"])(t,e,n,r,a,s,i);return null!=u&&(h=Object(o["a"])(h,u)),Object($r["a"])(h,c,l,d)}const h=Object(v["a"])(t,"x","depthwiseConv2d"),p=Object(v["a"])(e,"filter","depthwiseConv2d");let f=h,m=!1;3===h.rank&&(m=!0,f=Object(jt["a"])(h,[1,h.shape[0],h.shape[1],h.shape[2]])),$["b"](4===f.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),$["b"](4===p.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),$["b"](f.shape[3]===p.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),null==s&&(s=[1,1]),$["b"](Ar["h"](n,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),null!=i&&$["b"]($["v"](r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`);const b=Ar["a"](f.shape,p.shape,n,s,r,i,!0);let g,y;null!=u&&(g=Object(v["a"])(u,"bias","fused conv2d"),[g]=Object(pr["makeTypesMatch"])(g,h),jr["a"](b.outShape,g.shape)),null!=l&&(y=Object(v["a"])(l,"prelu weights","fused depthwiseConv2d"));const x=(t,e)=>{$["b"](Ar["i"](s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);const[a,o,u,l]=e,d=Object($r["c"])(t,u,c),h=Object(_r["a"])(o.shape,d,a,n,r,s,i),p=Object(Fr["a"])(o,d,a.shape,n,r,s,i);if(null!=l){const t=Object($r["b"])(g,d);return[h,p,t]}return[h,p]},w={x:f,filter:p,bias:g,preluActivationWeights:y},k={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:c,leakyreluAlpha:d};if(null==u){const t=Object(Cr["a"])((t,e,n)=>{let r=ft["a"].runKernel(mt["kb"],w,k);return n([e,t,r]),m&&(r=Object(jt["a"])(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}});return t(f,p)}{const t=Object(Cr["a"])((t,e,n,r)=>{let a=ft["a"].runKernel(mt["kb"],w,k);return r([e,t,a,n]),m&&(a=Object(jt["a"])(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}});return t(f,p,g)}}const zr=Object(I["b"])({fusedDepthwiseConv2d_:Mr});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lr({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:u}){if(!1===Object($r["d"])(ft["a"].state.gradientDepth,s)){let c=Object(k["a"])(t,e,n,r);return null!=a&&(c=Object(o["a"])(c,a)),Object($r["a"])(c,s,i,u)}let c=Object(v["a"])(t,"a","fused matMul"),l=Object(v["a"])(e,"b","fused matMul");[c,l]=Object(pr["makeTypesMatch"])(c,l);const d=n?c.shape[c.rank-2]:c.shape[c.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],p=n?c.shape[c.rank-1]:c.shape[c.rank-2],f=r?l.shape[l.rank-2]:l.shape[l.rank-1],m=c.shape.slice(0,-2),b=l.shape.slice(0,-2),g=$["N"](m),y=$["N"](b);$["b"](c.rank>=2&&l.rank>=2&&c.rank===l.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${c.rank} and ${l.rank}.`),$["b"]($["a"](m,b),()=>`Error in fused matMul: outer dimensions (${m}) and (${b}) of Tensors with shapes ${c.shape} and `+l.shape+" must match."),$["b"](d===h,()=>`Error in fused matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${c.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`);const x=c.shape.slice(0,-2).concat([p,f]),w=n?Object(jt["a"])(c,[g,d,p]):Object(jt["a"])(c,[g,p,d]),O=r?Object(jt["a"])(l,[y,f,h]):Object(jt["a"])(l,[y,h,f]);let I,N;null!=a&&(I=Object(v["a"])(a,"bias","fused matMul"),[I]=Object(pr["makeTypesMatch"])(I,c),jr["a"](x,I.shape)),null!=i&&(N=Object(v["a"])(i,"prelu weights","fused matMul"));const S=(t,e)=>{const[i,o,u,c]=e,l=Object($r["c"])(Object(jt["a"])(t,u.shape),u,s);let d,h;if(n||r?!n&&r?(d=Object(k["a"])(l,o,!1,!1),h=Object(k["a"])(l,i,!0,!1)):n&&!r?(d=Object(k["a"])(o,l,!1,!0),h=Object(k["a"])(i,l,!1,!1)):(d=Object(k["a"])(o,l,!0,!0),h=Object(k["a"])(l,i,!0,!0)):(d=Object(k["a"])(l,o,!1,!0),h=Object(k["a"])(i,l,!0,!1)),null!=a){const t=Object($r["b"])(c,l);return[d,h,t]}return[d,h]},C={a:w,b:O,bias:I,preluActivationWeights:N},j={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:u};if(null==a){const t=Object(Cr["a"])((t,e,n)=>{const r=ft["a"].runKernel(mt["ad"],C,j);return n([t,e,r]),{value:Object(jt["a"])(r,x),gradFunc:S}});return t(w,O)}{const t=Object(Cr["a"])((t,e,n,r)=>{const a=ft["a"].runKernel(mt["ad"],C,j);return r([t,e,a,n]),{value:Object(jt["a"])(a,x),gradFunc:S}});return t(w,O,I)}}const Pr=Object(I["b"])({fusedMatMul_:Lr});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Br(t){return Ir(t,.54,.46)}const Wr=Object(I["b"])({hammingWindow_:Br});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vr(t){return Ir(t,.5,.5)}const Ur=Object(I["b"])({hannWindow_:Vr});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gr(t,e,n,r=!1,a=0){let s=0;const i=[];while(s+e<=t.size)i.push(Object(S["a"])(t,s,e)),s+=n;if(r)while(s<t.size){const r=s+e-t.size,o=Object(w["a"])([Object(S["a"])(t,s,e-r),Object($t["a"])([r],a)]);i.push(o),s+=n}return 0===i.length?Hn([],[0,e]):Object(jt["a"])(Object(w["a"])(i),[i.length,e])}const Hr=Object(I["b"])({frame_:Gr});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qr(t,e,n,r,a=Ur){null==r&&(r=Or(e));const s=Hr(t,e,n),i=Object(O["a"])(s,a(e)),o=[];for(let u=0;u<s.shape[0];u++)o.push(Object(Rn["a"])(Object(S["a"])(i,[u,0],[1,e]),r));return Object(w["a"])(o)}const Kr=Object(I["b"])({stft_:qr});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xr(t,e,n,r,a="bilinear",s=0){const i=Object(v["a"])(t,"image","cropAndResize"),o=Object(v["a"])(e,"boxes","cropAndResize","float32"),u=Object(v["a"])(n,"boxInd","cropAndResize","int32"),c=o.shape[0];$["b"](4===i.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),$["b"](2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${o.shape}.`),$["b"](1===u.rank&&u.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${o.shape}.`),$["b"](2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),$["b"](r[0]>=1&&r[1]>=1,()=>"cropSize must be atleast [1,1], but was "+r),$["b"]("bilinear"===a||"nearest"===a,()=>"method must be bilinear or nearest, but was "+a);const l={image:i,boxes:o,boxInd:u},d={method:a,extrapolationValue:s,cropSize:r},h=ft["a"].runKernel(mt["K"],l,d);return h}const Yr=Object(I["b"])({cropAndResize_:Xr});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zr(t){const e=Object(v["a"])(t,"image","flipLeftRight","float32");$["b"](4===e.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const n={image:e},r=ft["a"].runKernel(mt["eb"],n,{});return r}const Jr=Object(I["b"])({flipLeftRight_:Zr});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qr(t,e,n=0,r=.5){const a=Object(v["a"])(t,"image","rotateWithOffset","float32");$["b"](4===a.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`);const s={image:a},i={radians:e,fillValue:n,center:r},o=ft["a"].runKernel(mt["uc"],s,i);return o}const ta=Object(I["b"])({rotateWithOffset_:Qr});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ea(t,e,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=t.shape[0];return n=Math.min(n,i),$["b"](0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),$["b"](2===t.rank,()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`),$["b"](4===t.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was "+t.shape[1]),$["b"](1===e.rank,()=>"scores must be a 1D tensor"),$["b"](e.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was `+e.shape[0]),$["b"](0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function na(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Object(v["a"])(t,"boxes","nonMaxSuppression"),i=Object(v["a"])(e,"scores","nonMaxSuppression"),o=ea(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return ft["a"].runKernel(mt["Wb"],{boxes:s,scores:i},u)}const ra=Object(I["b"])({nonMaxSuppression_:na});var aa=n("8389");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function sa(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Object(v["a"])(t,"boxes","nonMaxSuppressionAsync"),i=Object(v["a"])(e,"scores","nonMaxSuppressionAsync"),o=ea(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u=await Promise.all([s.data(),i.data()]),c=u[0],l=u[1],{selectedIndices:d}=Object(aa["a"])(c,l,n,r,a);return s!==t&&s.dispose(),i!==e&&i.dispose(),Object(Un["a"])(d,"int32")}const ia=sa;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oa(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Object(v["a"])(t,"boxes","nonMaxSuppression"),o=Object(v["a"])(e,"scores","nonMaxSuppression"),u=ea(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const c={boxes:i,scores:o},l={maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s},d=ft["a"].runKernel(mt["Yb"],c,l);return{selectedIndices:d[0],selectedScores:d[1]}}const ua=Object(I["b"])({nonMaxSuppressionWithScore_:oa});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function ca(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Object(v["a"])(t,"boxes","nonMaxSuppressionAsync"),o=Object(v["a"])(e,"scores","nonMaxSuppressionAsync"),u=ea(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const c=await Promise.all([i.data(),o.data()]),l=c[0],d=c[1],{selectedIndices:h,selectedScores:p}=Object(aa["c"])(l,d,n,r,a,s);return i!==t&&i.dispose(),o!==e&&o.dispose(),{selectedIndices:Object(Un["a"])(h,"int32"),selectedScores:Object(Un["a"])(p)}}const la=ca;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function da(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Object(v["a"])(t,"boxes","nonMaxSuppression"),o=Object(v["a"])(e,"scores","nonMaxSuppression"),u=ea(i,o,n,r,a,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,h={boxes:i,scores:o},p={maxOutputSize:c,iouThreshold:l,scoreThreshold:d,padToMaxOutputSize:s},f=ft["a"].runKernel(mt["Xb"],h,p);return{selectedIndices:f[0],validOutputs:f[1]}}const ha=Object(I["b"])({nonMaxSuppressionPadded_:da});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function pa(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Object(v["a"])(t,"boxes","nonMaxSuppressionAsync"),o=Object(v["a"])(e,"scores","nonMaxSuppressionAsync"),u=ea(i,o,n,r,a,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,[h,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Object(aa["b"])(h,p,c,l,d,s);return i!==t&&i.dispose(),o!==e&&o.dispose(),{selectedIndices:Object(Un["a"])(f,"int32"),validOutputs:Object(hn["a"])(m,"int32")}}const fa=pa;var ma=n("73f8"),ba=n("0f86");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ga(t,e,n){Object($["b"])(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),Object($["b"])(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=Object(v["a"])(t,"a","bandPart");Object($["b"])(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const a=r.shape,[s,i]=r.shape.slice(-2);if(!(e<=s))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);e<0&&(e=s),n<0&&(n=i);const o=Object(jt["a"])(Object(Xe["a"])(0,s,1,"int32"),[-1,1]),u=Object(Xe["a"])(0,i,1,"int32"),c=Object(fe["a"])(o,u),l=Object(Jt["a"])(Object(Ut["a"])(c,Object(hn["a"])(+e,"int32")),Object(Mt["a"])(c,Object(hn["a"])(-n,"int32"))),d=Object(sr["a"])([s,i],r.dtype);return Object(jt["a"])(Object(zn["a"])(Object(er["a"])(Object(jt["a"])(r,[-1,s,i])).map(t=>Object(rr["a"])(l,t,d))),a)}const ya=Object(I["b"])({bandPart_:ga});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xa(t){let e;if(Array.isArray(t)){e=!1,Object($["b"])(null!=t&&t.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=t[0].shape[0];for(let e=1;e<t.length;++e)Object($["b"])(t[e].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`)}else e=!0,t=Object(Dn["a"])(t,t.shape[0],0).map(t=>Object(Mn["a"])(t,[0]));Object($["b"])(t.length<=t[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`);const n=[],r=t;for(let a=0;a<t.length;++a)n.push(ft["a"].tidy(()=>{let t=r[a];if(a>0)for(let e=0;e<a;++e){const r=Object(O["a"])(Object(Bn["a"])(Object(O["a"])(n[e],t)),n[e]);t=Object(fe["a"])(t,r)}return Object(xt["a"])(t,Object(hr["a"])(t,"euclidean"))}));return e?Object(zn["a"])(n,0):n}const va=Object(I["b"])({gramSchmidt_:xa});var wa=n("c04e4");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ka(t,e=!1){if(Object($["b"])(t.rank>=2,()=>"qr() requires input tensor to have a rank >= 2, but got rank "+t.rank),2===t.rank)return Oa(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce((t,e)=>t*e),r=Object(er["a"])(Object(jt["a"])(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),a=[],s=[];r.forEach(t=>{const[n,r]=Oa(t,e);a.push(n),s.push(r)});const i=Object(jt["a"])(Object(zn["a"])(a,0),t.shape),o=Object(jt["a"])(Object(zn["a"])(s,0),t.shape);return[i,o]}}function Oa(t,e=!1){return ft["a"].tidy(()=>{Object($["b"])(2===t.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`);const n=t.shape[0],r=t.shape[1];let a=At(n),s=Object(G["a"])(t);const i=Hn([[1]],[1,1]);let o=Object(G["a"])(i);const u=n>=r?r:n;for(let t=0;t<u;++t){const e=s,u=o,c=a;[o,s,a]=ft["a"].tidy(()=>{const e=Object(S["a"])(s,[t,t],[n-t,1]),u=Object(hr["a"])(e),c=Object(S["a"])(s,[t,t],[1,1]),l=Object(rr["a"])(Object(_t["a"])(c,0),Hn([[-1]]),Hn([[1]])),d=Object(fe["a"])(c,Object(O["a"])(l,u)),h=Object(xt["a"])(e,d);o=1===h.shape[0]?Object(G["a"])(i):Object(w["a"])([i,Object(S["a"])(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=Object(ve["a"])(Object(xt["a"])(Object(k["a"])(l,d),u)),f=Object(S["a"])(s,[t,0],[n-t,r]),m=Object(O["a"])(p,o),b=Object(dr["a"])(o);if(0===t)s=Object(fe["a"])(f,Object(k["a"])(m,Object(k["a"])(b,f)));else{const e=Object(fe["a"])(f,Object(k["a"])(m,Object(k["a"])(b,f)));s=Object(w["a"])([Object(S["a"])(s,[0,0],[t,r]),e],0)}const g=Object(dr["a"])(m),y=Object(S["a"])(a,[0,t],[n,a.shape[1]-t]);if(0===t)a=Object(fe["a"])(y,Object(k["a"])(Object(k["a"])(y,o),g));else{const e=Object(fe["a"])(y,Object(k["a"])(Object(k["a"])(y,o),g));a=Object(w["a"])([Object(S["a"])(a,[0,0],[n,t]),e],1)}return[o,s,a]}),Object(wa["d"])([e,u,c])}return!e&&n>r&&(a=Object(S["a"])(a,[0,0],[n,r]),s=Object(S["a"])(s,[0,0],[r,r])),[a,s]})}const Ia=Object(I["b"])({qr_:ka});var Na=n("57e0");function Sa(t,e,n=Na["a"].SUM_BY_NONZERO_WEIGHTS){const r=Object(v["a"])(t,"losses","computeWeightedLoss");let a=null;null!=e&&(a=Object(v["a"])(e,"weights","computeWeightedLoss"));const s=null==a?r:Object(O["a"])(r,a);if(n===Na["a"].NONE)return s;if(n===Na["a"].SUM)return Object(Bn["a"])(s);if(n===Na["a"].MEAN){if(null==a)return Object(oe["a"])(s);{const t=r.size/a.size,e=Object(xt["a"])(Object(Bn["a"])(s),Object(Bn["a"])(a));return t>1?Object(xt["a"])(e,Object(hn["a"])(t)):e}}if(n===Na["a"].SUM_BY_NONZERO_WEIGHTS){if(null==a)return Object(xt["a"])(Object(Bn["a"])(s),Object(hn["a"])(r.size));{const t=Object(O["a"])(a,Object(Oe["a"])(r.shape)),e=Object(W["a"])(Object(Bn["a"])(Object(we["a"])(t,Object(hn["a"])(0))),"float32");return Object(xt["a"])(Object(Bn["a"])(s),e)}}throw Error("Unknown reduction: "+n)}const Ca=Object(I["b"])({computeWeightedLoss_:Sa});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ja(t,e,n,r=Na["a"].SUM_BY_NONZERO_WEIGHTS){const s=Object(v["a"])(t,"labels","absoluteDifference"),i=Object(v["a"])(e,"predictions","absoluteDifference");let o=null;null!=n&&(o=Object(v["a"])(n,"weights","absoluteDifference")),Object($["e"])(s.shape,i.shape,"Error in absoluteDifference: ");const u=Object(a["a"])(Object(fe["a"])(s,i));return Ca(u,o,r)}const Ta=Object(I["b"])({absoluteDifference_:ja});function Ea(t,e,n,r,a=Na["a"].SUM_BY_NONZERO_WEIGHTS){const s=Object(v["a"])(t,"labels","cosineDistance"),i=Object(v["a"])(e,"predictions","cosineDistance");let o=null;null!=r&&(o=Object(v["a"])(r,"weights","cosineDistance")),Object($["e"])(s.shape,i.shape,"Error in cosineDistance: ");const u=Object(hn["a"])(1),c=Object(fe["a"])(u,Object(Bn["a"])(Object(O["a"])(s,i),n,!0));return Ca(c,o,a)}const Aa=Object(I["b"])({cosineDistance_:Ea});function $a(t,e,n,r=Na["a"].SUM_BY_NONZERO_WEIGHTS){let a=Object(v["a"])(t,"labels","hingeLoss");const s=Object(v["a"])(e,"predictions","hingeLoss");let i=null;null!=n&&(i=Object(v["a"])(n,"weights","hingeLoss")),Object($["e"])(a.shape,s.shape,"Error in hingeLoss: ");const o=Object(hn["a"])(1);a=Object(fe["a"])(Object(O["a"])(Object(hn["a"])(2),a),o);const u=Object(Je["a"])(Object(fe["a"])(o,Object(O["a"])(a,s)));return Ca(u,i,r)}const Ra=Object(I["b"])({hingeLoss_:$a});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Da(t,e,n,r=1,s=Na["a"].SUM_BY_NONZERO_WEIGHTS){const i=Object(v["a"])(t,"labels","huberLoss"),u=Object(v["a"])(e,"predictions","huberLoss");let c=null;null!=n&&(c=Object(v["a"])(n,"weights","huberLoss")),Object($["e"])(i.shape,u.shape,"Error in huberLoss: ");const l=Object(hn["a"])(r),d=Object(a["a"])(Object(fe["a"])(u,i)),h=Object(ce["a"])(d,l),p=Object(fe["a"])(d,h),f=Object(o["a"])(Object(O["a"])(Object(hn["a"])(.5),Object(pe["a"])(h)),Object(O["a"])(l,p));return Ca(f,c,s)}const Fa=Object(I["b"])({huberLoss_:Da});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _a(t,e,n,r=1e-7,a=Na["a"].SUM_BY_NONZERO_WEIGHTS){const s=Object(v["a"])(t,"labels","logLoss"),i=Object(v["a"])(e,"predictions","logLoss");let u=null;null!=n&&(u=Object(v["a"])(n,"weights","logLoss")),Object($["e"])(s.shape,i.shape,"Error in logLoss: ");const c=Object(hn["a"])(1),l=Object(hn["a"])(r),d=Object(ve["a"])(Object(O["a"])(s,Object(qt["a"])(Object(o["a"])(i,l)))),h=Object(O["a"])(Object(fe["a"])(c,s),Object(qt["a"])(Object(o["a"])(Object(fe["a"])(c,i),l))),p=Object(fe["a"])(d,h);return Ca(p,u,a)}const Ma=Object(I["b"])({logLoss_:_a});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function za(t,e,n,r=Na["a"].SUM_BY_NONZERO_WEIGHTS){const a=Object(v["a"])(t,"labels","meanSquaredError"),s=Object(v["a"])(e,"predictions","meanSquaredError");let i=null;null!=n&&(i=Object(v["a"])(n,"weights","meanSquaredError")),Object($["e"])(a.shape,s.shape,"Error in meanSquaredError: ");const o=Object(_n["a"])(a,s);return Ca(o,i,r)}const La=Object(I["b"])({meanSquaredError_:za});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pa(t,e){const n=Object(v["a"])(t,"labels","sigmoidCrossEntropyWithLogits"),r=Object(v["a"])(e,"logits","sigmoidCrossEntropyWithLogits");Object($["e"])(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Object(Je["a"])(r),i=Object(O["a"])(r,n),u=Object(Kt["a"])(Object(Nt["a"])(Object(ve["a"])(Object(a["a"])(r))));return Object(o["a"])(Object(fe["a"])(s,i),u)}function Ba(t,e,n,r=0,a=Na["a"].SUM_BY_NONZERO_WEIGHTS){let s=Object(v["a"])(t,"multiClassLabels","sigmoidCrossEntropy");const i=Object(v["a"])(e,"logits","sigmoidCrossEntropy");let u=null;if(null!=n&&(u=Object(v["a"])(n,"weights","sigmoidCrossEntropy")),Object($["e"])(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=Object(hn["a"])(r),e=Object(hn["a"])(1),n=Object(hn["a"])(.5);s=Object(o["a"])(Object(O["a"])(s,Object(fe["a"])(e,t)),Object(O["a"])(n,t))}const c=Pa(s,i);return Ca(c,u,a)}const Wa=Object(I["b"])({sigmoidCrossEntropy_:Ba});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Va(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was `+n);const r=Object(Cr["a"])((t,e,r)=>{const a=!0,s=Object(Zt["a"])(e,[n],a),i=Object(fe["a"])(Object(W["a"])(e,"float32"),s);r([t,i]);const o=Object(ve["a"])(Object(O["a"])(i,t)),u=Object(Bn["a"])(o,[n]),c=(t,e)=>{const[r,a]=e,s=Object(he["e"])(t.shape,[n]);return[Object(O["a"])(Object(jt["a"])(t,s),Object(fe["a"])(Object(W["a"])(r,"float32"),Object(Nt["a"])(a))),Object(O["a"])(Object(jt["a"])(t,s),Object(fe["a"])(Object(Nt["a"])(a),Object(W["a"])(r,"float32")))]};return{value:u,gradFunc:c}});return r(t,e)}function Ua(t,e,n,r=0,a=Na["a"].SUM_BY_NONZERO_WEIGHTS){let s=Object(v["a"])(t,"onehotLabels","softmaxCrossEntropy");const i=Object(v["a"])(e,"logits","softmaxCrossEntropy");let u=null;if(null!=n&&(u=Object(v["a"])(n,"weights","softmaxCrossEntropy")),Object($["e"])(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const t=Object(hn["a"])(r),e=Object(hn["a"])(1),n=Object(hn["a"])(s.shape[1]);s=Object(o["a"])(Object(O["a"])(s,Object(fe["a"])(e,t)),Object(xt["a"])(t,n))}const c=Va(s,i);return Ca(c,u,a)}const Ga=Object(I["b"])({softmaxCrossEntropy_:Ua}),Ha={fft:En["a"],ifft:An["a"],rfft:Rn["a"],irfft:$n["a"]},qa={hammingWindow:Wr,hannWindow:Ur,frame:Hr,stft:Kr},Ka={flipLeftRight:Jr,resizeNearestNeighbor:ba["a"],resizeBilinear:ma["a"],rotateWithOffset:ta,cropAndResize:Yr,nonMaxSuppression:ra,nonMaxSuppressionAsync:ia,nonMaxSuppressionWithScore:ua,nonMaxSuppressionWithScoreAsync:la,nonMaxSuppressionPadded:ha,nonMaxSuppressionPaddedAsync:fa},Xa={bandPart:ya,gramSchmidt:va,qr:Ia},Ya={absoluteDifference:Ta,computeWeightedLoss:Ca,cosineDistance:Aa,hingeLoss:Ra,huberLoss:Fa,logLoss:Ma,meanSquaredError:La,sigmoidCrossEntropy:Wa,softmaxCrossEntropy:Ga};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},1359:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","log"),n={x:e};return r["a"].runKernel(a["Bb"],n)}const u=Object(i["b"])({log_:o})},1590:function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("6ad5"),o=n("b818"),u=n("54ef"),c=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function l(t,e,n,u,l="NDHWC",d=[1,1,1]){const h=Object(s["a"])(t,"x","conv3d"),p=Object(s["a"])(e,"filter","conv3d");let f=h,m=!1;4===h.rank&&(m=!0,f=Object(c["a"])(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),i["b"](5===f.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${f.rank}.`),i["b"](5===p.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+p.rank+"."),i["b"](f.shape[4]===p.shape[3],()=>`Error in conv3d: depth of input (${f.shape[4]}) must match input depth for filter ${p.shape[3]}.`),i["b"](Object(o["h"])(n,d),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`),i["b"]("NDHWC"===l,()=>`Error in conv3d: got dataFormat of ${l} but only NDHWC is currently supported.`);const b={x:f,filter:p},g={strides:n,pad:u,dataFormat:l,dilations:d},y=r["a"].runKernel(a["F"],b,g);return m?Object(c["a"])(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}const d=Object(u["b"])({conv3d_:l})},"163a":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","sqrt"),n={x:e};return r["a"].runKernel(a["Kc"],n)}const u=Object(i["b"])({sqrt_:o})},"1ab7":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){Object(s["b"])("complex64"===t.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`);const e={input:t};return r["a"].runKernel(a["cb"],e)}const u=Object(i["b"])({fft_:o})},"1ba2":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","expm1"),n={x:e};return r["a"].runKernel(a["bb"],n)}const u=Object(i["b"])({expm1_:o})},"1df6":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","sign"),n={x:e};return r["a"].runKernel(a["Bc"],n)}const u=Object(i["b"])({sign_:o})},"1e68":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t,e=0,n=!1,i=!1){const o=Object(s["a"])(t,"x","cumsum"),u={x:o},c={axis:e,exclusive:n,reverse:i};return r["a"].runKernel(a["L"],u,c)}const u=Object(i["b"])({cumsum_:o})},"1fb5":function(t,e,n){"use strict";e.byteLength=l,e.toByteArray=h,e.fromByteArray=m;for(var r=[],a=[],s="undefined"!==typeof Uint8Array?Uint8Array:Array,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",o=0,u=i.length;o<u;++o)r[o]=i[o],a[i.charCodeAt(o)]=o;function c(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=t.indexOf("=");-1===n&&(n=e);var r=n===e?0:4-n%4;return[n,r]}function l(t){var e=c(t),n=e[0],r=e[1];return 3*(n+r)/4-r}function d(t,e,n){return 3*(e+n)/4-n}function h(t){var e,n,r=c(t),i=r[0],o=r[1],u=new s(d(t,i,o)),l=0,h=o>0?i-4:i;for(n=0;n<h;n+=4)e=a[t.charCodeAt(n)]<<18|a[t.charCodeAt(n+1)]<<12|a[t.charCodeAt(n+2)]<<6|a[t.charCodeAt(n+3)],u[l++]=e>>16&255,u[l++]=e>>8&255,u[l++]=255&e;return 2===o&&(e=a[t.charCodeAt(n)]<<2|a[t.charCodeAt(n+1)]>>4,u[l++]=255&e),1===o&&(e=a[t.charCodeAt(n)]<<10|a[t.charCodeAt(n+1)]<<4|a[t.charCodeAt(n+2)]>>2,u[l++]=e>>8&255,u[l++]=255&e),u}function p(t){return r[t>>18&63]+r[t>>12&63]+r[t>>6&63]+r[63&t]}function f(t,e,n){for(var r,a=[],s=e;s<n;s+=3)r=(t[s]<<16&16711680)+(t[s+1]<<8&65280)+(255&t[s+2]),a.push(p(r));return a.join("")}function m(t){for(var e,n=t.length,a=n%3,s=[],i=16383,o=0,u=n-a;o<u;o+=i)s.push(f(t,o,o+i>u?u:o+i));return 1===a?(e=t[n-1],s.push(r[e>>2]+r[e<<4&63]+"==")):2===a&&(e=(t[n-2]<<8)+t[n-1],s.push(r[e>>10]+r[e>>4&63]+r[e<<2&63]+"=")),s.join("")}a["-".charCodeAt(0)]=62,a["_".charCodeAt(0)]=63},2:function(t,e){},"220f":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","asin"),n={x:e};return r["a"].runKernel(a["j"],n)}const u=Object(i["b"])({asin_:o})},"23bf":function(t,e,n){"use strict";
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var r,a,s,i,o;n.d(e,"a",(function(){return r})),n.d(e,"c",(function(){return c})),n.d(e,"b",(function(){return l})),function(t){t["R0"]="R0",t["R1"]="R1",t["R2"]="R2",t["R3"]="R3",t["R4"]="R4",t["R5"]="R5",t["R6"]="R6"}(r||(r={})),function(t){t["float32"]="float32",t["int32"]="int32",t["bool"]="int32",t["complex64"]="complex64"}(a||(a={})),function(t){t["float32"]="float32",t["int32"]="int32",t["bool"]="bool",t["complex64"]="complex64"}(s||(s={})),function(t){t["float32"]="float32",t["int32"]="float32",t["bool"]="float32",t["complex64"]="complex64"}(i||(i={})),function(t){t["float32"]="complex64",t["int32"]="complex64",t["bool"]="complex64",t["complex64"]="complex64"}(o||(o={}));const u={float32:i,int32:a,bool:s,complex64:o};function c(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return u[t][e]}function l(t){return c(t,"int32")}},"24b0":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"input","imag"),n={input:e};return r["a"].runKernel(a["rb"],n)}const u=Object(i["b"])({imag_:o})},"29a8":function(t,e,n){"use strict";(function(t){n("6ae2");var e=n("7ed6"),r=n("b333");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const a=Object(r["c"])();a.registerFlag("DEBUG",()=>!1,t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),a.registerFlag("IS_BROWSER",()=>e["isBrowser"]()),a.registerFlag("IS_NODE",()=>"undefined"!==typeof t&&"undefined"!==typeof t.versions&&"undefined"!==typeof t.versions.node),a.registerFlag("IS_CHROME",()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),a.registerFlag("PROD",()=>!1),a.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>a.getBool("DEBUG")),a.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),a.registerFlag("IS_TEST",()=>!1),a.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0)}).call(this,n("4362"))},"29d8":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}]},"29fc":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("a3f7"),a=n("6ad5"),s=n("487b"),i=n("54ef"),o=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e){const n=Object(r["a"])(t,"t1","dot"),i=Object(r["a"])(e,"t2","dot");a["b"]((1===n.rank||2===n.rank)&&(1===i.rank||2===i.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${i.rank}.`);const u=1===n.rank?n.size:n.shape[1],c=1===i.rank?i.size:i.shape[0];if(a["b"](u===c,()=>`Error in dot: inner dimensions of inputs must match, but got ${u} and ${c}.`),1===n.rank&&1===i.rank){const t=Object(o["a"])(n,[1,-1]),e=Object(o["a"])(i,[-1,1]),r=Object(s["a"])(t,e);return Object(o["a"])(r,[])}if(1===n.rank&&2===i.rank){const t=Object(o["a"])(n,[1,-1]),e=Object(o["a"])(i,[i.shape[0],i.shape[1]]),r=Object(s["a"])(t,e);return Object(o["a"])(r,[r.size])}if(2===n.rank&&1===i.rank){const t=Object(o["a"])(i,[-1,1]),e=Object(s["a"])(n,t);return Object(o["a"])(e,[e.size])}{const t=Object(o["a"])(i,[i.shape[0],i.shape[1]]),e=Object(s["a"])(n,t);return e}}const c=Object(i["b"])({dot_:u})},"2f2c":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("6ad5"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e,n,o=!1){const u=Object(s["a"])(t,"x","denseBincount"),c=Object(s["a"])(e,"weights","denseBincount");i["b"]("int32"===u.dtype,()=>"Error in denseBincount: input dtype must be int32, but got "+u.dtype),i["b"](u.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${u.rank}.`),i["b"](n>=0,()=>`size must be non-negative, but got ${n}.`),i["b"](c.size===u.size||0===c.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${u.shape}, weights shape: `+c.shape+".");const l={x:u,weights:c},d={size:n,binaryOutput:o};return r["a"].runKernel(a["M"],l,d)}const c=Object(o["b"])({denseBincount_:u})},"2fb1":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t,e=0){const n=Object(s["a"])(t,"x","step"),i={x:n},o={alpha:e};return r["a"].runKernel(a["Nc"],i,o)}const u=Object(i["b"])({step_:o})},3:function(t,e){},"31bb":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]},"34d7":function(t,e,n){"use strict";n.d(e,"b",(function(){return f})),n.d(e,"f",(function(){return y})),n.d(e,"e",(function(){return x})),n.d(e,"d",(function(){return v})),n.d(e,"a",(function(){return w})),n.d(e,"c",(function(){return k}));var r=n("6ad5");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a=20,s=3,i=7;function o(t,e,n,a){const s=Object(r["j"])(e),i=u(t,e,n,s),o=e.length,c=d(t,e,n,s,i),l=["Tensor"];return a&&(l.push("  dtype: "+n),l.push("  rank: "+o),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(c.map(t=>"    "+t).join("\n")),l.join("\n")}function u(t,e,n,a){const s=Object(r["N"])(e),i=a[a.length-1],o=new Array(i).fill(0),u=e.length,l="complex64"===n?h(t):t;if(u>1)for(let r=0;r<s/i;r++){const t=r*i;for(let e=0;e<i;e++)o[e]=Math.max(o[e],c(l[t+e],0,n).length)}return o}function c(t,e,n){let a;return a=Array.isArray(t)?parseFloat(t[0].toFixed(i))+" + "+parseFloat(t[1].toFixed(i))+"j":Object(r["z"])(t)?`'${t}'`:"bool"===n?l(t):parseFloat(t.toFixed(i)).toString(),Object(r["L"])(a,e)}function l(t){return 0===t?"false":"true"}function d(t,e,n,r,i,o=!0){const u="complex64"===n?2:1,p=e[0],f=e.length;if(0===f){if("complex64"===n){const e=h(t);return[c(e[0],0,n)]}return"bool"===n?[l(t[0])]:[t[0].toString()]}if(1===f){if(p>a){const e=s*u;let r=Array.from(t.slice(0,e)),a=Array.from(t.slice((p-s)*u,p*u));return"complex64"===n&&(r=h(r),a=h(a)),["["+r.map((t,e)=>c(t,i[e],n)).join(", ")+", ..., "+a.map((t,e)=>c(t,i[p-s+e],n)).join(", ")+"]"]}const e="complex64"===n?h(t):Array.from(t);return["["+e.map((t,e)=>c(t,i[e],n)).join(", ")+"]"]}const m=e.slice(1),b=r.slice(1),g=r[0]*u,y=[];if(p>a){for(let e=0;e<s;e++){const r=e*g,a=r+g;y.push(...d(t.slice(r,a),m,n,b,i,!1))}y.push("...");for(let e=p-s;e<p;e++){const r=e*g,a=r+g;y.push(...d(t.slice(r,a),m,n,b,i,e===p-1))}}else for(let a=0;a<p;a++){const e=a*g,r=e+g;y.push(...d(t.slice(e,r),m,n,b,i,a===p-1))}const x=2===f?",":"";y[0]="["+y[0]+x;for(let a=1;a<y.length-1;a++)y[a]=" "+y[a]+x;let v=",\n";for(let a=2;a<f;a++)v+="\n";return y[y.length-1]=" "+y[y.length-1]+"]"+(o?"":v),y}function h(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}var p=n("eb7e");
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class f{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=r["N"](t),null!=n){const t=n.length;r["b"](t===this.size,()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||r["n"](e,this.size),this.strides=Object(r["j"])(t)}set(t,...e){0===e.length&&(e=[0]),r["b"](e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const r of t){if(r<0||r>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=`+this.shape;throw new Error(e)}e++}let n=t[t.length-1];for(let r=0;r<t.length-1;++r)n+=this.strides[r]*t[r];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return m().makeTensor(this.values,this.shape,this.dtype)}}let m=null,b=null,g=null;function y(t){m=t}function x(t){b=t}function v(t){g=t}class w{constructor(t,e,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=r["N"](t),this.strides=Object(r["j"])(t),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return b.buffer(this.shape,this.dtype,t)}bufferSync(){return b.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Object(r["S"])(this.shape,t)}arraySync(){return Object(r["S"])(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const t=m().read(this.dataId);if("string"===this.dtype){const n=await t;try{return n.map(t=>p["decodeString"](t))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=m().readSync(this.dataId);if("string"===this.dtype)try{return t.map(t=>p["decodeString"](t))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await m().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(m().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return b.print(this,t)}clone(){return this.throwIfDisposed(),b.clone(this)}toString(t=!1){const e=this.dataSync();return o(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),b.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),m().makeVariable(this,t,e,n)}}Object.defineProperty(w,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed});class k extends w{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!r["a"](t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);m().disposeTensor(this),this.dataId=t.dataId,m().incRef(this,null)}dispose(){m().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(k,Symbol.hasInstance,{value:t=>t instanceof w&&null!=t.assign&&t.assign instanceof Function})},"350f":function(t,e,n){"use strict";(function(t){n.d(e,"f",(function(){return u})),n.d(e,"e",(function(){return c})),n.d(e,"a",(function(){return p})),n.d(e,"b",(function(){return f})),n.d(e,"d",(function(){return m})),n.d(e,"c",(function(){return b})),n.d(e,"g",(function(){return g}));var r=n("0777"),a=n("357d"),s=n("6ad5"),i=n("9847");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=4;async function u(t,e){const n=[],r=[],a=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);for(let i=0;i<a.length;++i){const s=a[i],u=Array.isArray(t)?t[i].tensor:t[s];if("float32"!==u.dtype&&"int32"!==u.dtype&&"bool"!==u.dtype&&"string"!==u.dtype&&"complex64"!==u.dtype)throw new Error(`Unsupported dtype in weight '${s}': ${u.dtype}`);const c={name:s,shape:u.shape,dtype:u.dtype};if("string"===u.dtype){const t=new Promise(async t=>{const e=await u.bytes(),n=e.reduce((t,e)=>t+e.length,0)+o*e.length,r=new Uint8Array(n);let a=0;for(let s=0;s<e.length;s++){const t=e[s],n=new Uint8Array(new Uint32Array([t.length]).buffer);r.set(n,a),a+=o,r.set(t,a),a+=t.length}t(r)});r.push(t)}else r.push(u.data());null!=e&&(c.group=e),n.push(c)}const s=await Promise.all(r);return{data:l(s),specs:n}}function c(t,e){const n={};let u,c=0;for(const l of e){const e=l.name,d=l.dtype,h=l.shape,p=Object(s["N"])(h);let f;if("quantization"in l){const n=l.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${l.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${l.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==d)throw new Error(`Weight ${l.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${d}.`)}const r=i["a"][n.dtype],a=t.slice(c,c+p*r),s="uint8"===n.dtype?new Uint8Array(a):new Uint16Array(a);if("float32"===d)if("uint8"===n.dtype||"uint16"===n.dtype){f=new Float32Array(s.length);for(let t=0;t<s.length;t++){const e=s[t];f[t]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===u&&(u=w()),f=u(s)}else{if("int32"!==d)throw new Error(`Unsupported dtype in weight '${e}': ${d}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);f=new Int32Array(s.length);for(let t=0;t<s.length;t++){const e=s[t];f[t]=Math.round(e*n.scale+n.min)}}c+=p*r}else if("string"===d){const e=Object(s["N"])(l.shape);f=[];for(let n=0;n<e;n++){const e=new Uint32Array(t.slice(c,c+o))[0];c+=o;const n=new Uint8Array(t.slice(c,c+e));f.push(n),c+=e}}else{const s=i["a"][d],o=t.slice(c,c+p*s);if("float32"===d)f=new Float32Array(o);else if("int32"===d)f=new Int32Array(o);else if("bool"===d)f=new Uint8Array(o);else{if("complex64"!==d)throw new Error(`Unsupported dtype in weight '${e}': ${d}`);{f=new Float32Array(o);const t=new Float32Array(f.length/2),s=new Float32Array(f.length/2);for(let e=0;e<t.length;e++)t[e]=f[2*e],s[e]=f[2*e+1];const i=Object(a["a"])(t,h,"float32"),u=Object(a["a"])(s,h,"float32");n[e]=Object(r["a"])(i,u),i.dispose(),u.dispose()}}c+=p*s}"complex64"!==d&&(n[e]=Object(a["a"])(f,h,d))}return n}function l(t){if(null===t)throw new Error("Invalid input value: "+JSON.stringify(t));let e=0;const n=[];t.forEach(t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+t.constructor.name)});const r=new Uint8Array(e);let a=0;return n.forEach(t=>{r.set(new Uint8Array(t.buffer),a),a+=t.byteLength}),r.buffer}const d="undefined"!==typeof t&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function h(e){return d?t.byteLength(e):new Blob([e]).size}function p(e){if(d)return t.from(e).toString("base64");const n=new Uint8Array(e);let r="";for(let t=0,a=n.length;t<a;t++)r+=String.fromCharCode(n[t]);return btoa(r)}function f(e){if(d){const n=t.from(e,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const n=atob(e),r=new Uint8Array(n.length);for(let t=0;t<n.length;++t)r.set([n.charCodeAt(t)],t);return r.buffer}function m(t){if(1===t.length)return t[0];let e=0;t.forEach(t=>{e+=t.byteLength});const n=new Uint8Array(e);let r=0;return t.forEach(t=>{n.set(new Uint8Array(t),r),r+=t.byteLength}),n.buffer}function b(t){const e="/";t=t.trim();while(t.endsWith(e))t=t.slice(0,t.length-1);const n=t.split(e);return n[n.length-1]}function g(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:h(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:h(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function y(){const t=t=>{let e=t<<13,n=0;while(0===(8388608&e))n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let n=1024;n<2048;n++)e[n]=939524096+(n-1024<<13);return e}function x(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}function v(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}function w(){const t=y(),e=x(),n=v();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let i=0;i<r.length;i++){const a=r[i],o=t[n[a>>10]+(1023&a)]+e[a>>10];s[i]=o}return new Float32Array(a)}}}).call(this,n("b639").Buffer)},"357d":function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("a3f7"),a=n("5959");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(t,e,n){const s=Object(r["c"])(t,n);return Object(a["a"])(t,e,s,n)}},"35c9":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t,e){const n=Object(s["a"])(t,"x","reshape","string_or_numeric"),i={x:n},o={shape:e};return r["a"].runKernel(a["oc"],i,o)}const u=Object(i["b"])({reshape_:o})},"364e":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("6ad5"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e,n="NHWC"){const o=Object(s["a"])(t,"x","depthToSpace"),u="NHWC"===n?o.shape[1]:o.shape[2],c="NHWC"===n?o.shape[2]:o.shape[3],l="NHWC"===n?o.shape[3]:o.shape[1];i["b"](u*e>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${e}  for depthToSpace with input shape\n    ${o.shape}`),i["b"](c*e>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${c} and ${e} for depthToSpace with input shape\n        ${o.shape}`),i["b"](l%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${l} for depthToSpace with input shape ${o.shape}`);const d={x:o},h={blockSize:e,dataFormat:n};return r["a"].runKernel(a["N"],d,h)}const c=Object(o["b"])({depthToSpace_:u})},"36e5":function(t,e,n){"use strict";n.d(e,"b",(function(){return a})),n.d(e,"c",(function(){return s})),n.d(e,"d",(function(){return i})),n.d(e,"e",(function(){return o})),n.d(e,"a",(function(){return u})),n.d(e,"f",(function(){return c})),n.d(e,"h",(function(){return l})),n.d(e,"g",(function(){return d}));var r=n("6ad5");
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function s(t,e,n){const r=t.length+e.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(t[s++]):a.push(e[i++]);return a}function i(t,e){const n=[],r=t.length;for(let s=0;s<r;s++)-1===e.indexOf(s)&&n.push(t[s]);const a=e.map(e=>t[e]);return[n,a]}function o(t,e){const n=e.map(t=>1);return s(t,n,e)}function u(t,e,n){r["b"](a(e,n),()=>t+" supports only inner-most axes for now. "+`Got axes ${e} and rank-${n} input.`)}function c(t,e){if(a(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach(t=>n.push(t)),n}function l(t){return t.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function d(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}},"38bc":function(t,e,n){"use strict";var r=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[n("Header",{attrs:{innerPage:!0,nav:t.headerNav}}),n("main",{attrs:{id:"main"}},[n("BreadCrumbs",{attrs:{"parent-section-name":"PlayGround","section-name":t.templateName}}),n("section",{staticClass:"blog",attrs:{id:"blog"}},[n("div",{staticClass:"container"},[n("div",{staticClass:"portfolio-description"},[n("h2",[t._v(t._s(t.templateTitle))]),n("p",{domProps:{innerHTML:t._s(t.templateDescriptionHtml)}},[t._v(" "+t._s(t.templateDescription)+" "),t.templateReference?n("a",{attrs:{href:t.templateReference.href,target:"_blank"}},[t._v(t._s(t.templateReference.title))]):t._e()])])])])],1)],1)},a=[],s=n("0418"),i=n("f423"),o={name:"TemplatePlayGround",components:{Header:s["a"],BreadCrumbs:i["a"]},props:{headerNav:{type:String,required:!0},templateName:{type:String,required:!0},templateTitle:{type:String,required:!0},templateDescription:{type:String},templateDescriptionHtml:{type:String},templateReference:{type:Object,default:null}}},u=o,c=n("2877"),l=Object(c["a"])(u,r,a,!1,null,"56a07bf1",null);e["a"]=l.exports},"3a44":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("6ad5"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e=0){const n=Object(s["a"])(t,"x","unstack","string_or_numeric");i["b"](e>=-n.shape.length&&e<n.shape.length,()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`);const o={value:n},u={axis:e};return r["a"].runKernel(a["Xc"],o,u)}const c=Object(o["b"])({unstack_:u})},"3b28":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("6ad5"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e,n){const o=Object(s["a"])(t,"x","batchToSpaceND"),u=e.reduce((t,e)=>t*e);i["b"](o.rank>=1+e.length,()=>`input rank is ${o.rank} but should be > than blockShape.length ${e.length}`),i["b"](n.length===e.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`),i["b"](o.shape[0]%u===0,()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${u}`);const c={x:o},l={blockShape:e,crops:n};return r["a"].runKernel(a["t"],c,l)}const c=Object(o["b"])({batchToSpaceND_:u})},"3bb7":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","neg"),n={x:e};return r["a"].runKernel(a["Vb"],n)}const u=Object(i["b"])({neg_:o})},"3bfc":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]},"3c35":function(t,e){(function(e){t.exports=e}).call(this,{})},"3d50":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]},"3efc":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef"),o=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e,n,i=!1){const u=Object(s["a"])(t,"logits","multinomial"),c=u.size,l=u.rank;if(c<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+c+".");if(l>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+l);n=n||Math.random();const d=1===l?Object(o["a"])(u,[1,-1]):u,h={logits:d},p={numSamples:e,seed:n,normalized:i},f=r["a"].runKernel(a["Tb"],h,p);return 1===l?Object(o["a"])(f,[f.size]):f}const c=Object(i["b"])({multinomial_:u})},4:function(t,e){},4184:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),i=n("a3f7"),o=n("526f"),u=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(t,e){let n=Object(i["a"])(t,"a","squaredDifference"),u=Object(i["a"])(e,"b","squaredDifference");[n,u]=Object(s["makeTypesMatch"])(n,u),Object(o["a"])(n.shape,u.shape);const c={a:n,b:u},l={};return r["a"].runKernel(a["Mc"],c,l)}const l=Object(u["b"])({squaredDifference_:c})},4516:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t,e=null,n=!1){const i=Object(s["a"])(t,"x","any","bool"),o={x:i},u={axis:e,keepDims:n};return r["a"].runKernel(a["g"],o,u)}const u=Object(i["b"])({any_:o})},"45bb":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t,e,n=0){const i=Object(s["a"])(t,"x","split"),o={x:i},u={numOrSizeSplits:e,axis:n};return r["a"].runKernel(a["Jc"],o,u)}const u=Object(i["b"])({split_:o})},4611:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),i=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e){let n=Object(i["a"])(t,"a","mod"),o=Object(i["a"])(e,"b","mod");[n,o]=Object(s["makeTypesMatch"])(n,o);const u={a:n,b:o};return r["a"].runKernel(a["Sb"],u)}const c=Object(o["b"])({mod_:u})},4615:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","acosh"),n={x:e};return r["a"].runKernel(a["c"],n)}const u=Object(i["b"])({acosh_:o})},"46a8":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","relu6"),n={x:e};return r["a"].runKernel(a["nc"],n)}const u=Object(i["b"])({relu6_:o})},"46b1":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","log1p"),n={x:e};return r["a"].runKernel(a["Cb"],n)}const u=Object(i["b"])({log1p_:o})},"46b8":function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("6ae2"),a=n("c05b");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(t,e,n){const s={shape:t,value:e,dtype:n};return r["a"].runKernel(a["db"],{},s)}},"46cc":function(t,e,n){"use strict";
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
var r,a;n.d(e,"a",(function(){return r})),function(t){t[t["DT_INVALID"]=0]="DT_INVALID",t[t["DT_FLOAT"]=1]="DT_FLOAT",t[t["DT_DOUBLE"]=2]="DT_DOUBLE",t[t["DT_INT32"]=3]="DT_INT32",t[t["DT_UINT8"]=4]="DT_UINT8",t[t["DT_INT16"]=5]="DT_INT16",t[t["DT_INT8"]=6]="DT_INT8",t[t["DT_STRING"]=7]="DT_STRING",t[t["DT_COMPLEX64"]=8]="DT_COMPLEX64",t[t["DT_INT64"]=9]="DT_INT64",t[t["DT_BOOL"]=10]="DT_BOOL",t[t["DT_QINT8"]=11]="DT_QINT8",t[t["DT_QUINT8"]=12]="DT_QUINT8",t[t["DT_QINT32"]=13]="DT_QINT32",t[t["DT_BFLOAT16"]=14]="DT_BFLOAT16",t[t["DT_FLOAT_REF"]=101]="DT_FLOAT_REF",t[t["DT_DOUBLE_REF"]=102]="DT_DOUBLE_REF",t[t["DT_INT32_REF"]=103]="DT_INT32_REF",t[t["DT_UINT8_REF"]=104]="DT_UINT8_REF",t[t["DT_INT16_REF"]=105]="DT_INT16_REF",t[t["DT_INT8_REF"]=106]="DT_INT8_REF",t[t["DT_STRING_REF"]=107]="DT_STRING_REF",t[t["DT_COMPLEX64_REF"]=108]="DT_COMPLEX64_REF",t[t["DT_INT64_REF"]=109]="DT_INT64_REF",t[t["DT_BOOL_REF"]=110]="DT_BOOL_REF",t[t["DT_QINT8_REF"]=111]="DT_QINT8_REF",t[t["DT_QUINT8_REF"]=112]="DT_QUINT8_REF",t[t["DT_QINT32_REF"]=113]="DT_QINT32_REF",t[t["DT_BFLOAT16_REF"]=114]="DT_BFLOAT16_REF"}(r||(r={})),function(t){let e;(function(t){t[t["LEGACY"]=0]="LEGACY",t[t["V1"]=1]="V1",t[t["V2"]=2]="V2"})(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(a||(a={}))},4749:function(t,e,n){"use strict";n.d(e,"c",(function(){return p})),n.d(e,"b",(function(){return f})),n.d(e,"a",(function(){return m})),n.d(e,"d",(function(){return b}));var r=n("526f"),a=n("9e38"),s=n("6f37"),i=n("a5aa"),o=n("520f"),u=n("917a"),c=n("46a8"),l=n("35c9"),d=n("2fb1"),h=n("e053");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function p(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return Object(i["a"])(t,Object(d["a"])(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function f(t,e){let n=e;const a=r["c"](t.shape,e.shape);return a.length>0&&(n=Object(h["a"])(n,a)),Object(l["a"])(n,t.shape)}function m(t,e,n,r){if("linear"===e)return t;if("relu"===e)return Object(u["a"])(t);if("elu"===e)return Object(a["a"])(t);if("relu6"===e)return Object(c["a"])(t);if("prelu"===e)return Object(o["a"])(t,n);if("leakyrelu"===e)return Object(s["a"])(t,r);throw new Error(`Unknown fused activation ${e}.`)}const b=(t,e)=>{const n=t>0;return!n||"linear"===e}},4850:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("6ad5"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t){i["b"](Array.isArray(t),()=>"The argument passed to tf.addN() must be a list of tensors"),i["b"](t.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+t.length);const e=t.map((t,e)=>Object(s["a"])(t,"tensors"+e,"addN")),n=e[0];e.forEach(t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(t=>{if(!i["a"](t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const o=e;return r["a"].runKernel(a["e"],o)}const c=Object(o["b"])({addN_:u})},"487b":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),i=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e,n=!1,o=!1){let u=Object(i["a"])(t,"a","matMul"),c=Object(i["a"])(e,"b","matMul");[u,c]=Object(s["makeTypesMatch"])(u,c);const l={a:u,b:c},d={transposeA:n,transposeB:o};return r["a"].runKernel(a["s"],l,d)}const c=Object(o["b"])({matMul_:u})},"48db":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("f0a9"),o=n("54ef"),u=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(t,e){let n=Object(s["a"])(t,"broadcastTo","x");const o=n.shape;if(e.some(t=>!(t>0)||t%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();while(t.length<e.length)t.unshift(1);n=Object(u["a"])(n,t)}const c=n.shape,l=Array.from(e);for(let r=e.length-1;r>=0;r--)if(c[r]===e[r])l[r]=1;else if(1!==n.shape[r])throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${e}].`);const d=l.map((t,e)=>t>1?e:-1).filter(t=>t>=0);if(0===d.length)return Object(i["a"])(n);const h={x:n},p={reps:l};return r["a"].runKernel(a["Tc"],h,p)}const l=Object(o["b"])({broadcastTo_:c})},"4b05":function(t,e,n){"use strict";(function(t){var e=n("b333");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r={importFetch:()=>n(1)};let a;class s{constructor(){this.util=n(2),this.textEncoder=new this.util.TextEncoder}fetch(t,n){return null!=Object(e["c"])().global.fetch?Object(e["c"])().global.fetch(t,n):(null==a&&(a=r.importFetch()),a(t,n))}now(){const e=t.hrtime();return 1e3*e[0]+e[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Node built-in encoder only supports utf-8, but got "+e);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}}Object(e["c"])().get("IS_NODE")&&Object(e["c"])().setPlatform("node",new s)}).call(this,n("4362"))},"4c7a":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("6ad5"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){Object(s["b"])("complex64"===t.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`);const e={input:t};return r["a"].runKernel(a["pb"],e)}const u=Object(i["b"])({ifft_:o})},"4cd0":function(t,e,n){"use strict";n("8705")},"4cfc":function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var r=n("c388");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class a extends r["a"]{split(t){return new s(this,t)}}class s extends a{constructor(t,e){super(),this.upstream=t,this.impl=new i(t,e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class i extends r["b"]{constructor(t,e){super(),this.upstream=t,this.separator=e,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const t=await this.upstream.next();if(t.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const e=t.value.split(this.separator);e[0]=this.carryover+e[0];for(const n of e.slice(0,-1))this.outputQueue.push(n);return this.carryover=e[e.length-1],!0}}},"4f20":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","exp"),n={x:e};return r["a"].runKernel(a["Z"],n)}const u=Object(i["b"])({exp_:o})},5:function(t,e){},"508f":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),i=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e){let n=Object(i["a"])(t,"a","floorDiv"),o=Object(i["a"])(e,"b","floorDiv");[n,o]=Object(s["makeTypesMatch"])(n,o);const u={a:n,b:o};return r["a"].runKernel(a["gb"],u)}const c=Object(o["b"])({floorDiv_:u})},"520f":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t,e){const n=Object(s["a"])(t,"x","prelu"),i=Object(s["a"])(e,"alpha","prelu"),o={x:n,alpha:i};return r["a"].runKernel(a["gc"],o)}const u=Object(i["b"])({prelu_:o})},"526c":function(t,e,n){"use strict";n.d(e,"d",(function(){return a})),n.d(e,"e",(function(){return s})),n.d(e,"f",(function(){return i})),n.d(e,"b",(function(){return o})),n.d(e,"g",(function(){return c})),n.d(e,"c",(function(){return l})),n.d(e,"a",(function(){return d}));var r=n("fa11");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(t,e,n,a,i){const o=e.inputParams[t];if(o&&void 0!==o.inputIndexStart){const t=o.inputIndexStart,u=0===o.inputIndexEnd?void 0:void 0===o.inputIndexEnd?t+1:o.inputIndexEnd;if("tensor"===o.type)return s(e.inputNames[o.inputIndexStart],n,a,i);if("tensors"===o.type){const r=e.inputNames.slice(t,u);return r.map(t=>s(t,n,a,i))}const c=s(e.inputNames.slice(t)[0],n,a,i),l=c.dataSync();return"number"===o.type?l[0]:r["util"].toNestedArray(c.shape,l)}const u=e.attrParams[t];return u&&u.value}function s(t,e,n,r){const[a,s]=c(t);if(null!=r){const t=r.getHashTableHandleByName(a);if(null!=t)return t}const i=n.currentContextIds.find(t=>!!e[u(a,t)]);return void 0!==i?e[u(a,i)][s]:void 0}function i(t,e,n){return e[u(t,n.currentContextId)]}function o(t,e){const[n,r]=c(t);return[u(n,e&&e.currentContextId),r]}function u(t,e){return e?`${t}-${e}`:t}function c(t){const e=t.split(":");if(1===e.length)return[t,0];const n=e[0];return[n,Number(e[e.length-1])]}function l(t,e,n){let r=a("pad",t,e,n);if("explicit"===r){r=a("explicitPaddings",t,e,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let t=0;t<4;t++)s[t][0]=r[2*t],s[t][1]=r[2*t+1];return s}return r}function d(t){return t.kept?t:Object(r["clone"])(t)}},"526f":function(t,e,n){"use strict";
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(t,e){const n=t.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=t[s]||1,o=e[e.length-1-a]||1;o>1&&1===i&&r.unshift(s)}return r}function a(t,e){const n=[];for(let r=0;r<e.length;r++){const a=t[t.length-r-1],s=e.length-r-1,i=e[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function s(t,e){const n=[],r=Math.max(t.length,e.length);for(let a=0;a<r;a++){let r=t[t.length-a-1];null==r&&(r=1);let s=e[e.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s){const n=`Operands could not be broadcast together with shapes ${t} and ${e}.`;throw Error(n)}n.unshift(r)}}return n}n.d(e,"b",(function(){return r})),n.d(e,"c",(function(){return a})),n.d(e,"a",(function(){return s}))},"538e":function(t,e,n){"use strict";n.d(e,"a",(function(){return h})),n.d(e,"f",(function(){return d})),n.d(e,"d",(function(){return c})),n.d(e,"e",(function(){return l})),n.d(e,"b",(function(){return o})),n.d(e,"c",(function(){return u}));var r=n("6ae2"),a=n("34d7"),s=n("a3f7"),i=n("6ad5");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){return i["b"](i["u"](t),()=>"The f passed in grad(f) must be a function"),(e,n)=>{const a=Object(s["a"])(e,"x","tf.grad","string_or_numeric"),o=null!=n?Object(s["a"])(n,"dy","tf.grad"):null;return r["a"].tidy(()=>{const{value:e,grads:n}=r["a"].gradients(()=>t(a),[a],o);return null!=o&&i["e"](e.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),p(n),n[0]})}}function u(t){return i["b"](i["u"](t),()=>"The f passed in grads(f) must be a function"),(e,n)=>{i["b"](Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const a=Object(s["b"])(e,"args","tf.grads","string_or_numeric"),o=null!=n?Object(s["a"])(n,"dy","tf.grads"):null;return r["a"].tidy(()=>{const{value:e,grads:n}=r["a"].gradients(()=>t(...a),a,o);return null!=o&&i["e"](e.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(n),n})}}function c(t){return i["b"](i["u"](t),()=>"The f passed in valueAndGrad(f) must be a function"),(e,n)=>{i["b"](e instanceof a["a"],()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),i["b"](null==n||n instanceof a["a"],()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:s,value:o}=r["a"].gradients(()=>t(e),[e],n);return p(s),{grad:s[0],value:o}}}function l(t){return i["b"](i["u"](t),()=>"The f passed in valueAndGrads(f) must be a function"),(e,n)=>{i["b"](Array.isArray(e)&&e.every(t=>t instanceof a["a"]),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),i["b"](null==n||n instanceof a["a"],()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const s=r["a"].gradients(()=>t(...e),e,n);return null!=n&&i["e"](s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(s.grads),s}}function d(t,e){i["b"](i["u"](t),()=>"The f passed in variableGrads(f) must be a function"),i["b"](null==e||Array.isArray(e)&&e.every(t=>t instanceof a["c"]),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=e;if(!n){e=[];for(const t in r["a"].registeredVariables)e.push(r["a"].registeredVariables[t])}const s=n?e.filter(t=>!t.trainable):null,o=e.length;e=e.filter(t=>t.trainable),i["b"](e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);const u=!0,{value:c,grads:l}=r["a"].gradients(t,e,null,u);i["b"](l.some(t=>null!=t),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),i["b"](0===c.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${c.rank} tensor`);const d={};return e.forEach((t,e)=>{null!=l[e]&&(d[t.name]=l[e])}),null!=s&&s.forEach(t=>d[t.name]=null),{value:c,grads:d}}function h(t){return r["a"].customGrad(t)}function p(t){const e=t.filter(t=>null==t).length;if(e>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},"53f2":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("6ad5"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e,n){const o=Object(s["a"])(t,"x","unsortedSegmentSum"),u=Object(s["a"])(e,"segmentIds","unsortedSegmentSum","int32");Object(i["b"])(Object(i["v"])(n),()=>"numSegments must be of dtype int");const c={x:o,segmentIds:u},l={numSegments:n};return r["a"].runKernel(a["Yc"],c,l)}const c=Object(o["b"])({unsortedSegmentSum_:u})},"53fd":function(t,e,n){"use strict";n.d(e,"a",(function(){return h}));var r=n("6ae2"),a=n("c04e4"),s=n("c05b"),i=n("a3f7"),o=n("6ad5"),u=n("b818"),c=n("54ef"),l=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function d(t,e=[1,1,1],n,c,d,h="NDHWC",p){null==p?p=[1,1,1]:Object(a["b"])("dilations is deprecated, this field will be gone in v3.0.0.");const f=Object(i["a"])(t,"x","maxPool3d");let m=f,b=!1;4===f.rank&&(b=!0,m=Object(l["a"])(f,[1,f.shape[0],f.shape[1],f.shape[2],f.shape[3]])),o["b"](5===m.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${m.rank}.`),o["b"]("NDHWC"===h,()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+h),o["b"](u["h"](n,p),()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${p}'`),null!=d&&o["b"](o["v"](c),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${d} but got pad ${c}.`);const g={x:m},y={filterSize:e,strides:n,pad:c,dimRoundingMode:d,dataFormat:h,dilations:p},x=r["a"].runKernel(s["Jb"],g,y);return b?Object(l["a"])(x,[x.shape[1],x.shape[2],x.shape[3],x.shape[4]]):x}const h=Object(c["b"])({maxPool3d_:d})},"54ef":function(t,e,n){"use strict";n.d(e,"a",(function(){return s})),n.d(e,"b",(function(){return i}));var r=n("6ae2"),a=n("6ad5");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const s="__op";function i(t){const e=Object.keys(t);if(1!==e.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+e.length+" keys.");let n=e[0];const i=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=s;const o=(...t)=>{r["a"].startScope(n);try{const e=i(...t);return Object(a["x"])(e)&&console.error("Cannot return a Promise inside of tidy."),r["a"].endScope(e),e}catch(e){throw r["a"].endScope(null),e}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}},5616:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t,e=1,n=!0){const i=Object(s["a"])(t,"x","topk");if(0===i.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const o=i.shape[i.shape.length-1];if(e>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got `+e);const u={x:i},c={k:e,sorted:n},[l,d]=r["a"].runKernel(a["Uc"],u,c);return{values:l,indices:d}}const u=Object(i["b"])({topk_:o})},"57e0":function(t,e,n){"use strict";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var r;n.d(e,"a",(function(){return r})),function(t){t[t["NONE"]=0]="NONE",t[t["MEAN"]=1]="MEAN",t[t["SUM"]=2]="SUM",t[t["SUM_BY_NONZERO_WEIGHTS"]=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},5874:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}]},5894:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("6ae2"),a=n("c05b");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const s={start:t,stop:e,num:n};return r["a"].runKernel(a["Ab"],{},s)}},5959:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("6ae2"),a=n("6ad5"),s=n("eb7e");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(t,e,n,i){if(null==i&&(i=Object(a["r"])(t)),"complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Object(a["A"])(t)&&!Array.isArray(t)&&"number"!==typeof t&&"boolean"!==typeof t&&"string"!==typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){Object(a["c"])(e);const t=Object(a["N"])(e),r=Object(a["N"])(n);Object(a["b"])(t===r,()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`);for(let s=0;s<n.length;++s){const t=n[s],r=s!==n.length-1||t!==Object(a["N"])(e.slice(s));Object(a["b"])(n[s]===e[s]||!r,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `)}}return Object(a["A"])(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==i?Object(s["toTypedArray"])(t,i):Object(a["m"])(t,[],!0),r["a"].makeTensor(t,e,i)}},5960:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","ceil"),n={x:e};return r["a"].runKernel(a["x"],n)}const u=Object(i["b"])({ceil_:o})},5980:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","isInf"),n={x:e};return r["a"].runKernel(a["tb"],n)}const u=Object(i["b"])({isInf_:o})},"5a2c":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("6ae2"),a=n("6ad5"),s=n("0777");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(t,e="float32"){if("complex64"===e){const e=i(t,"float32"),n=i(t,"float32");return Object(s["a"])(e,n)}const n=Object(a["F"])(Object(a["N"])(t),e);return r["a"].makeTensor(n,t,e)}},"5dc4":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","sinh"),n={x:e};return r["a"].runKernel(a["Dc"],n)}const u=Object(i["b"])({sinh_:o})},"5f2a":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","rsqrt"),n={x:e};return r["a"].runKernel(a["wc"],n)}const u=Object(i["b"])({rsqrt_:o})},"5f87":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t,e=-1){const n=Object(s["a"])(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const i={logits:n},o={dim:e};return r["a"].runKernel(a["Fc"],i,o)}const u=Object(i["b"])({softmax_:o})},6002:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),i=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e){let n=Object(i["a"])(t,"a","atan2"),o=Object(i["a"])(e,"b","atan2");[n,o]=Object(s["makeTypesMatch"])(n,o);const u={a:n,b:o};return r["a"].runKernel(a["m"],u)}const c=Object(o["b"])({atan2_:u})},6125:function(t,e,n){var r=n("1212"),a=n("b838"),s=n("a49e"),i=n("cae0"),o=n("7aec"),u=n("89ed"),c=n("a49d");c.alea=r,c.xor128=a,c.xorwow=s,c.xorshift7=i,c.xor4096=o,c.tychei=u,t.exports=c},"62e4":function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}},"649e":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("6ad5"),o=n("f0a9"),u=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(t,e=0){Object(i["b"])(t.length>=1,()=>"Pass at least one tensor to concat");const n=Object(s["b"])(t,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach(t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)}),1===n.length)return Object(o["a"])(n[0]);const u=n,c={axis:e};return r["a"].runKernel(a["B"],u,c)}const l=Object(u["b"])({concat_:c})},"673d":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},6791:function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("6ad5"),o=n("48db"),u=n("526f"),c=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function l(t,e,n){const c=Object(s["a"])(e,"a","where"),l=Object(s["a"])(n,"b","where"),d=Object(s["a"])(t,"condition","where","bool"),h=Object(u["a"])(c.shape,l.shape),p=Object(o["a"])(c,h),f=Object(o["a"])(l,h);1===d.rank&&Object(i["b"])(d.shape[0]===c.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),1!==d.rank&&Object(i["e"])(d.shape,f.shape,"Error in where: ");const m={condition:d,t:p,e:f};return r["a"].runKernel(a["yc"],m)}const d=Object(c["b"])({where_:l})},6926:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("54ef"),i=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t,e,n,s,o,u=[1,1],c){let l=t;3===t.rank&&(l=Object(i["a"])(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let d=e;3===d.rank&&(d=Object(i["a"])(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const h={x:l,dy:d},p={strides:s,pad:o,dimRoundingMode:c,dilations:u,filterShape:n};return r["a"].runKernel(a["P"],h,p)}const u=Object(s["b"])({depthwiseConv2dNativeBackpropFilter_:o})},6932:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","sin"),n={x:e};return r["a"].runKernel(a["Cc"],n)}const u=Object(i["b"])({sin_:o})},"69dc":function(t,e,n){"use strict";n.d(e,"a",(function(){return m}));var r=n("0777"),a=n("649e"),s=n("24b0"),i=n("a5aa"),o=n("54ef"),u=n("d7b0"),c=n("35c9"),l=n("d08e"),d=n("015f"),h=n("6d3c"),p=n("4c7a");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function f(t){const e=t.shape[t.shape.length-1],n=t.size/e;let o;if(e<=2){const r=Object(c["a"])(t,[n,e]);o=Object(p["a"])(r)}else{const f=[n,2*(e-1)],m=Object(c["a"])(Object(u["a"])(t),[n,e]),b=Object(c["a"])(Object(s["a"])(t),[n,e]),g=Object(l["a"])(Object(h["a"])(m,[0,1],[n,e-2]),1),y=Object(i["a"])(Object(l["a"])(Object(h["a"])(b,[0,1],[n,e-2]),1),Object(d["a"])(-1)),x=Object(a["a"])([m,g],1),v=Object(a["a"])([b,y],1),w=Object(c["a"])(Object(r["a"])(x,v),[f[0],f[1]]);o=Object(p["a"])(w)}if(o=Object(u["a"])(o),3===t.rank&&0!==t.shape[0]){const e=o,n=t.shape[0];o=Object(c["a"])(o,[n,o.shape[0]/n,o.shape[1]]),e.dispose()}return o}const m=Object(o["b"])({irfft_:f})},"6ad5":function(t,e,n){"use strict";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(t){let e=t.length,n=0,r=0;while(e>0)r=Math.random()*e|0,e--,n=t[e],t[e]=t[r],t[r]=n}function a(t,e,n){return Math.max(t,Math.min(e,n))}function s(t){return t%2===0?t:t+1}function i(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function o(t,e){const n=Math.random();return e*n+(1-n)*t}function u(t,e){let n=0;for(let r=0;r<t.length;r++){const a=Number(t[r])-Number(e[r]);n+=a*a}return n}function c(t,e){if(!t)throw new Error("string"===typeof e?e:e())}function l(t,e,n=""){c(m(t,e),()=>n+` Shapes ${t} and ${e} must match`)}function d(t){c(null!=t,()=>"The input to the tensor constructor must be a non-null value.")}function h(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||E(t)&&!n)for(let r=0;r<t.length;++r)h(t[r],e,n);else e.push(t);return e}function p(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function f(t){return 0===t.length}function m(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function b(t){return t%1===0}function g(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;{const e=Math.exp(2*t);return(e-1)/(e+1)}}function y(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function x(t){const e=new Uint32Array(t);for(let n=0;n<t;++n)e[n]=n;return r(e),e}function v(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function w(t,e=(t=>0),n){return new Promise((r,a)=>{let s=0;const i=()=>{if(t())return void r();s++;const o=e(s);null!=n&&s>=n?a():setTimeout(i,o)};i()})}function k(t,e){let n=1,r=-1;for(let s=0;s<t.length;++s)if(t[s]>=0)n*=t[s];else if(-1===t[s]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${s}`);r=s}else if(t[s]<0)throw Error(`Shapes can not be < 0. Found ${t[s]} at dim ${s}`);if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const a=t.slice();return a[r]=e/n,a}function O(t,e){const n=e.length;return t=null==t?e.map((t,e)=>e):[].concat(t),c(t.every(t=>t>=-n&&t<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis `+t),c(t.every(t=>b(t)),()=>"All values in axis param must be integers but got axis "+t),t.map(t=>t<0?n+t:t)}function I(t,e){const n=[],r=[],a=null!=e&&Array.isArray(e)&&0===e.length,s=null==e||a?null:O(e,t).sort();let i=0;for(let o=0;o<t.length;++o){if(null!=s){if(s[i]===o&&1!==t[o])throw new Error(`Can't squeeze axis ${o} since its dim '${t[o]}' is not 1`);(null==s[i]||s[i]>o)&&1===t[o]&&(n.push(t[o]),r.push(o)),s[i]<=o&&i++}1!==t[o]&&(n.push(t[o]),r.push(o))}return{newShape:n,keptDims:r}}function N(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error("Unknown data type "+t);n=new Uint8Array(e)}return n}function S(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error("Unknown data type "+t);n=new Array(e)}return n}function C(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function j(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}function T(t,e){return"complex64"!==e&&(("float32"!==e||"complex64"===t)&&(("int32"!==e||"float32"===t||"complex64"===t)&&("bool"!==e||"bool"!==t)))}function E(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function A(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error("Unknown dtype "+t)}function $(t){if(null==t)return 0;let e=0;return t.forEach(t=>e+=t.length),e}function R(t){return"string"===typeof t||t instanceof String}function D(t){return"boolean"===typeof t}function F(t){return"number"===typeof t}function _(t){return Array.isArray(t)?_(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":F(t)?"float32":R(t)?"string":D(t)?"bool":"float32"}function M(t){return!!(t&&t.constructor&&t.call&&t.apply)}function z(t,e){for(let n=e;n<t;++n)if(t%n===0)return n;return t}function L(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function P(t,e,n){const r=new Array;if(1===e.length){const a=e[0];for(let e=0;e<a;e++)r[e]=n[t+e]}else{const a=e[0],s=e.slice(1),i=s.reduce((t,e)=>t*e);for(let e=0;e<a;e++)r[e]=P(t+e*i,s,n)}return r}function B(t,e){if(0===t.length)return e[0];const n=t.reduce((t,e)=>t*e);if(0===n)return[];if(n!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}.`);return P(0,t,e)}function W(t,e){const n=V(t,e);for(let r=0;r<n.length;r++)n[r]=1;return n}function V(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error("Unknown data type "+e)}function U(t,e){const n=t.reduce((t,e)=>t*e,1);if(null==e||"float32"===e)return B(t,new Float32Array(n));if("int32"===e)return B(t,new Int32Array(n));if("bool"===e)return B(t,new Uint8Array(n));throw new Error("Unknown data type "+e)}function G(t){t.forEach(e=>{c(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`)})}function H(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let a=0;a<t.length-1;++a)r+=n[a]*t[a];return r}function q(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let a=0;a<r.length-1;++a)r[a]=Math.floor(t/n[a]),t-=r[a]*n[a];return r[r.length-1]=t,r}function K(t){return t&&t.then&&"function"===typeof t.then}n.d(e,"M",(function(){return r})),n.d(e,"i",(function(){return a})),n.d(e,"H",(function(){return s})),n.d(e,"Q",(function(){return i})),n.d(e,"J",(function(){return o})),n.d(e,"l",(function(){return u})),n.d(e,"b",(function(){return c})),n.d(e,"e",(function(){return l})),n.d(e,"d",(function(){return d})),n.d(e,"m",(function(){return h})),n.d(e,"N",(function(){return p})),n.d(e,"y",(function(){return f})),n.d(e,"a",(function(){return m})),n.d(e,"v",(function(){return b})),n.d(e,"R",(function(){return g})),n.d(e,"O",(function(){return y})),n.d(e,"k",(function(){return x})),n.d(e,"L",(function(){return v})),n.d(e,"K",(function(){return w})),n.d(e,"s",(function(){return k})),n.d(e,"I",(function(){return O})),n.d(e,"P",(function(){return I})),n.d(e,"o",(function(){return N})),n.d(e,"n",(function(){return S})),n.d(e,"h",(function(){return C})),n.d(e,"B",(function(){return j})),n.d(e,"p",(function(){return T})),n.d(e,"A",(function(){return E})),n.d(e,"g",(function(){return A})),n.d(e,"f",(function(){return $})),n.d(e,"z",(function(){return R})),n.d(e,"t",(function(){return D})),n.d(e,"w",(function(){return F})),n.d(e,"r",(function(){return _})),n.d(e,"u",(function(){return M})),n.d(e,"G",(function(){return z})),n.d(e,"j",(function(){return L})),n.d(e,"S",(function(){return B})),n.d(e,"D",(function(){return W})),n.d(e,"F",(function(){return V})),n.d(e,"E",(function(){return U})),n.d(e,"c",(function(){return G})),n.d(e,"C",(function(){return H})),n.d(e,"q",(function(){return q})),n.d(e,"x",(function(){return K}))},"6ae2":function(t,e,n){"use strict";n.d(e,"b",(function(){return v})),n.d(e,"a",(function(){return w}));var r=n("8b87"),a=n("b333"),s=n("f490"),i=n("c05b"),o=n("73b8"),u=n("6ad5");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class c{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new d)}profileKernel(t,e,n){let r;const s=()=>{r=n()},i=this.backendTimer.time(s);if(Object(a["c"])().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let a=0;a<r.length;a++){const e=r[a];e.data().then(n=>{l(n,e.dtype,t)})}const o={kernelName:t,outputs:r,inputs:e,timeMs:i.then(t=>t.kernelMs),extraInfo:i.then(t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():"")};return o}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:a,extraInfo:s}=t;n.forEach(t=>{Promise.all([t.data(),r,s]).then(n=>{this.logger.logKernelProfile(e,t,n[0],n[1],a,n[2])})})}}function l(t,e,n){if("float32"!==e)return!1;for(let r=0;r<t.length;r++){const e=t[r];if(isNaN(e)||!isFinite(e))return console.warn(`Found ${e} in the result of '${n}'`),!0}return!1}class d{logKernelProfile(t,e,n,r,a,s){const i="number"===typeof r?u["L"](r+"ms",9):r["error"],o=u["L"](t,25),c=e.rank,l=e.size,d=u["L"](e.shape.toString(),14);let h="";for(const u in a){const t=a[u];if(null!=t){const n=t.shape||e.shape,r=n.length;h+=`${u}: ${r}D ${r>0?n:""} `}}console.log(`%c${o}\t%c${i}\t%c${c}D ${d}\t%c${l}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h(t,e,n){const r={},a={};for(let u=0;u<e.length;u++)r[e[u].id]=!0;for(let u=0;u<t.length;u++){const n=t[u],s=n.inputs;for(const t in s){const i=s[t];let o=!1;for(let t=0;t<e.length;t++)if(r[i.id]){n.outputs.forEach(t=>r[t.id]=!0),o=!0,a[n.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let u=t.length-1;u>=0;u--){const e=t[u],n=e.inputs;for(let t=0;t<e.outputs.length;t++)if(s[e.outputs[t].id]){for(const t in n)s[n[t].id]=!0,i[e.id]=!0;break}}const o=[];for(let u=0;u<t.length;u++){const e=t[u];if(a[e.id]&&i[e.id]){const t={};for(const a in e.inputs){const n=e.inputs[a];r[n.id]&&(t[a]=n)}const n=Object.assign({},e);n.inputs=t,n.outputs=e.outputs,o.push(n)}}return o}function p(t,e,n,r){for(let a=e.length-1;a>=0;a--){const s=e[a],i=[];if(s.outputs.forEach(e=>{const n=t[e.id];null!=n?i.push(n):i.push(null)}),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const e in s.inputs){if(!(e in o))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(o)}.`);const a=n(()=>o[e]());if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[e];if(!u["a"](a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${e}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==t[i.id])t[i.id]=a;else{const e=t[i.id];t[i.id]=r(e,a),e.dispose()}}}}var f=n("34d7"),m=n("76c2"),b=n("eb7e");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class g{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class y{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new g}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],r=await this.initializeBackend(n).success;if(r)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(console.warn(t+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t),r=n?await e:e;if(!r)return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new c(this.backendInstance),!0}setupRegisteredKernels(){const t=Object(o["d"])(this.backendName);t.forEach(t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){const e=Object(o["d"])(t);e.forEach(e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(!n||n instanceof r["b"]||"function"!==typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,r=n.then(n=>!(e<this.pendingBackendInitId)&&(this.registry[t]=n,this.pendingBackendInit=null,!0)).catch(n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(t+" backend not found in registry");this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,a=this.readSync(e);r.disposeData(e),n.backend=t,t.move(e,a,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!==typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!==typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(r){throw e(),r}}nextTensorId(){return y.nextTensorId++}nextVariableId(){return y.nextVariableId++}clone(t){const e=this.makeTensorFromDataId(t.dataId,t.shape,t.dtype),n={x:t},r=t=>({x:()=>{const e="float32",n={x:t},r={dtype:e};return w.runKernelFunc(n=>n.cast(t,e),n,null,i["w"],r)}}),a=[];return this.addTapeNode(this.state.activeScope.name,n,[e],r,a,{}),e}runKernel(t,e,n,r,a){const s=null,i=null;return this.runKernelFunc(s,e,i,t,n,r,a)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let a=0;n.forEach(t=>{a+="complex64"===t.dtype?3:1});const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-e-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${t}'`)}runKernelFunc(t,e,n,r,a,s,i){let u,c=[];const l=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const d=this.state.numBytes,h=this.state.numTensors;let p;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const f=Object(o["c"])(r,this.backendName);let m,b;if(null!=f)p=()=>{const t=this.backend.numDataIds();m=f.kernelFunc({inputs:e,attrs:a,backend:this.backend});const n=Array.isArray(m)?m:[m];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,t,n);const o=n.map(t=>{if(null!=t.rank)return t;const{dataId:e,shape:n,dtype:r}=t;return this.makeTensorFromDataId(e,n,r)});if(l){let t=this.getTensorsForGradient(r,e,o);if(null==t){null==i&&(i=[]);const e=o.filter((t,e)=>i[e]);t=(s||[]).slice().concat(e)}c=this.saveTensorsForBackwardMode(t)}return o};else{if(null==t)throw new Error(`Error running ${r}: Neither modular kernel nor forward func passed`);const e=t=>{l&&(c=t.map(t=>this.keep(this.clone(t))))};p=()=>{const n=this.backend.numDataIds();m=this.tidy(()=>t(this.backend,e));const a=Array.isArray(m)?m:[m];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,a),a}}return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(b=this.profiler.profileKernel(r,e,()=>p()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(b),u=b.outputs):u=p()}),l&&this.addTapeNode(r,e,u,n,c,a),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-d,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-h,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(e).map(t=>null!=e[t]?e[t].shape:null),outputShapes:u.map(t=>t.shape),kernelTimeMs:b.timeMs,extraInfo:b.extraInfo}),Array.isArray(m)?u:u[0]}saveTensorsForBackwardMode(t){const e=t.map(t=>this.keep(this.clone(t)));return e}getTensorsForGradient(t,e,n){const r=Object(o["b"])(t);if(null!=r){const t=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(u["b"](Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),s=Object.keys(e).map(t=>e[t])):s=t.map(t=>e[t]);const i=n.filter((t,e)=>a[e]);return s.concat(i)}return null}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=t;"string"===n&&u["z"](t[0])&&(a=t.map(t=>b["encodeString"](t)));const s=r.write(a,e,n),i=new f["a"](e,n,s,this.nextTensorId());if(this.incRef(i,r),"string"===n){const t=this.state.tensorInfo.get(s),e=Object(u["f"])(a);this.state.numBytes+=e-t.bytes,t.bytes=e}return i}makeTensorFromDataId(t,e,n,r){n=n||"float32";const a=new f["a"](e,n,t,this.nextTensorId());return this.incRef(a,r),a}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const a=new f["c"](t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}incRef(t,e){const n=this.state.tensorInfo.has(t.dataId)?this.state.tensorInfo.get(t.dataId).refCount:0;if(this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*u["g"](t.dtype)),this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(t.dataId).refCount++,t instanceof f["c"]||this.track(t)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;this.state.numTensors--,"string"===t.dtype&&this.state.numStringTensors--;const e=this.state.tensorInfo.get(t.dataId),n=e.refCount;n<=1?("complex64"!==t.dtype&&(this.state.numBytes-=e.bytes),this.state.numDataBuffers--,e.backend.disposeData(t.dataId),this.state.tensorInfo.delete(t.dataId)):(e.backend.decComplexRef(t.dataId),this.state.tensorInfo.get(t.dataId).refCount--)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(t=>t.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:a},c=Object(o["b"])(t);null!=c&&(r=c.gradFunc),null!=r&&(i.gradient=t=>(t=t.map((t,e)=>{if(null==t){const t=n[e],r=u["F"](t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t}),r(t.length>1?t:t[0],a,s))),this.state.activeTape.push(i)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=Object(m["getTensorsInContainer"])(t),n=new Set(e.map(t=>t.id));for(let a=0;a<this.state.activeScope.track.length;a++){const t=this.state.activeScope.track[a];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(t=>{t.kept||t.scopeId!==r.id||this.track(t)})}gradients(t,e,n,r=!1){if(u["b"](e.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));u["b"](a instanceof f["a"],()=>"The result y returned by f() must be a tensor.");const s=h(this.state.activeTape,e,a);if(!r&&0===s.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const t={};t[a.id]=null==n?x(a.shape):n,p(t,s,t=>this.tidy(t),k);const r=e.map(e=>t[e.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(t=>{for(const e of t.saved)e.dispose()}),this.state.activeTape=null),{value:a,grads:r}})}customGrad(t){return u["b"](u["u"](t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{let n;u["b"](e.every(t=>t instanceof f["a"]),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};return e.forEach((t,e)=>{r[e]=t}),this.runKernelFunc((r,a)=>(n=t(...e,a),u["b"](n.value instanceof f["a"],()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),u["b"](u["u"](n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),r,(t,r)=>{const a=n.gradFunc(t,r),s=Array.isArray(a)?a:[a];u["b"](s.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),u["b"](s.every(t=>t instanceof f["a"]),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const i={};return s.forEach((t,e)=>{i[e]=()=>t}),i})}}readSync(t){const e=this.state.tensorInfo.get(t);return e.backend.readSync(t)}read(t){const e=this.state.tensorInfo.get(t);return e.backend.read(t)}async time(t){const e=Object(b["now"])(),n=await this.backend.time(t);return n.wallMs=Object(b["now"])()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new g;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function x(t){const e=Object(u["D"])(Object(u["N"])(t),"float32");return w.makeTensor(e,t,"float32")}function v(){const t=Object(s["b"])();if(null==t._tfengine){const e=new a["b"](t);t._tfengine=new y(e)}return Object(a["d"])(t._tfengine.ENV),Object(f["f"])(()=>t._tfengine),t._tfengine}y.nextTensorId=0,y.nextVariableId=0;const w=v();function k(t,e){const n={a:t,b:e};return w.runKernel(i["d"],n)}},"6d3c":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t,e,n){const i=Object(s["a"])(t,"x","slice","string_or_numeric");if(0===i.rank)throw new Error("Slicing scalar is not possible");const o={x:i},u={begin:e,size:n};return r["a"].runKernel(a["Ec"],o,u)}const u=Object(i["b"])({slice_:o})},"6e83":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}]},"6f37":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t,e=.2){const n=Object(s["a"])(t,"x","leakyRelu"),i={x:n},o={alpha:e};return r["a"].runKernel(a["xb"],i,o)}const u=Object(i["b"])({leakyRelu_:o})},"6fef":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","isNaN"),n={x:e};return r["a"].runKernel(a["ub"],n)}const u=Object(i["b"])({isNaN_:o})},"71db":function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("6ad5"),o=n("35c9");function u(t){let e;return e=0===t.rank||1===t.rank?Object(o["a"])(t,[1,1,1,t.size]):2===t.rank?Object(o["a"])(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?Object(o["a"])(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}var c=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l(t,e,n,c,l,d){null==d&&(d=.001);const h=Object(s["a"])(t,"x","batchNorm"),p=Object(s["a"])(e,"mean","batchNorm"),f=Object(s["a"])(n,"variance","batchNorm");let m,b;null!=l&&(m=Object(s["a"])(l,"scale","batchNorm")),null!=c&&(b=Object(s["a"])(c,"offset","batchNorm")),i["b"](p.rank===f.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),i["b"](null==b||p.rank===b.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),i["b"](null==m||p.rank===m.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const g=u(h),y={x:g,scale:m,offset:b,mean:p,variance:f},x={varianceEpsilon:d},v=r["a"].runKernel(a["ib"],y,x);return Object(o["a"])(v,h.shape)}const d=Object(c["b"])({batchNorm_:l})},"73b8":function(t,e,n){"use strict";n.d(e,"c",(function(){return o})),n.d(e,"b",(function(){return u})),n.d(e,"d",(function(){return c})),n.d(e,"f",(function(){return l})),n.d(e,"e",(function(){return d})),n.d(e,"h",(function(){return h})),n.d(e,"g",(function(){return p})),n.d(e,"a",(function(){return f}));var r=n("b333"),a=n("f490");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const s=Object(a["a"])("kernelRegistry",()=>new Map),i=Object(a["a"])("gradRegistry",()=>new Map);function o(t,e){const n=m(t,e);return s.get(n)}function u(t){return i.get(t)}function c(t){const e=s.entries(),n=[];while(1){const{done:r,value:a}=e.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===t&&n.push(i)}return n}function l(t){const{kernelName:e,backendName:n}=t,r=m(e,n);s.has(r)&&console.warn(`The kernel '${e}' for backend '${n}' is already registered`),s.set(r,t)}function d(t){const{kernelName:e}=t;i.has(e)&&Object(r["c"])().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),i.set(e,t)}function h(t,e){const n=m(t,e);if(!s.has(n))throw new Error(`The kernel '${t}' for backend '${e}' is not registered`);s.delete(n)}function p(t){if(!i.has(t))throw new Error(`The gradient '${t}' for backend is not registered`);i.delete(t)}function f(t,e){const n=c(t);n.forEach(t=>{const n=Object.assign({},t,{backendName:e});l(n)})}function m(t,e){return`${e}_${t}`}},"73d3":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("6ad5"),i=n("54ef"),o=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e,n,i,u,c="NHWC",l){s["b"](t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let d=t,h=e,p=!1;3===e.rank&&(p=!0,h=Object(o["a"])(e,[1,e.shape[0],e.shape[1],e.shape[2]]),d=[1,t[0],t[1],t[2]]),s["b"](4===d.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+d.length+"."),s["b"](4===h.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+h.rank),s["b"](4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank);const f="NHWC"===c?d[3]:d[1],m="NHWC"===c?h.shape[3]:h.shape[1];s["b"](f===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${f}) must match input depth for filter ${n.shape[2]}.`),s["b"](m===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${m}) must match output depth for filter ${n.shape[3]}.`),null!=l&&s["b"](s["v"](u),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`);const b={dy:h,filter:n},g={strides:i,pad:u,dataFormat:c,dimRoundingMode:l,inputShape:d},y=r["a"].runKernel(a["E"],b,g);return p?Object(o["a"])(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const c=Object(i["b"])({conv2DBackpropInput_:u})},"73f8":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("6ad5"),o=n("54ef"),u=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(t,e,n=!1,o=!1){const c=Object(s["a"])(t,"images","resizeBilinear");i["b"](3===c.rank||4===c.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${c.rank}.`),i["b"](2===e.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+e+"."),i["b"](!1===o||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let l=c,d=!1;3===c.rank&&(d=!0,l=Object(u["a"])(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const[]=e,h={images:l},p={alignCorners:n,halfPixelCenters:o,size:e},f=r["a"].runKernel(a["pc"],h,p);return d?Object(u["a"])(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const l=Object(o["b"])({resizeBilinear_:c})},7568:function(t,e,n){"use strict";
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(t,e=!1){console.log(t.toString(e))}n.d(e,"a",(function(){return r}))},7580:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("6ad5"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e,n){const o=Object(s["a"])(t,"x","spaceToBatchND");i["b"](o.rank>=1+e.length,()=>`input rank ${o.rank} should be > than [blockShape] ${e.length}`),i["b"](n.length===e.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`),i["b"](o.shape.reduce((t,r,a)=>a>0&&a<=e.length?t&&(r+n[a-1][0]+n[a-1][1])%e[a-1]===0:t,!0),()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`);const u={x:o},c={blockShape:e,paddings:n};return r["a"].runKernel(a["Hc"],u,c)}const c=Object(o["b"])({spaceToBatchND_:u})},7675:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("a3f7"),a=n("6ad5"),s=n("dd7e"),i=n("b818"),o=n("54ef"),u=n("35c9");function c(t,e,n,o,c="NWC",l=1,d){const h=Object(r["a"])(t,"x","conv1d"),p=Object(r["a"])(e,"filter","conv1d");let f=h,m=!1;2===h.rank&&(m=!0,f=Object(u["a"])(h,[1,h.shape[0],h.shape[1]])),a["b"](3===f.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`),a["b"](3===p.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+p.rank+"."),null!=d&&a["b"](a["v"](o),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${d} but got pad ${o}.`),a["b"](f.shape[2]===p.shape[1],()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${p.shape[1]}.`),a["b"](i["h"](n,l),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${l}'`),a["b"]("NWC"===c,()=>`Error in conv1d: got dataFormat of ${c} but only NWC is currently supported.`);const b=Object(u["a"])(p,[1,p.shape[0],p.shape[1],p.shape[2]]),g=Object(u["a"])(f,[f.shape[0],1,f.shape[1],f.shape[2]]),y=[1,n],x=[1,l],v="NHWC",w=Object(s["a"])(g,b,y,o,v,x,d);return m?Object(u["a"])(w,[w.shape[2],w.shape[3]]):Object(u["a"])(w,[w.shape[0],w.shape[2],w.shape[3]])}const l=Object(o["b"])({conv1d_:c})},"76c2":function(t,e,n){"use strict";n.r(e),n.d(e,"makeTypesMatch",(function(){return i})),n.d(e,"assertTypesMatch",(function(){return o})),n.d(e,"isTensorInList",(function(){return u})),n.d(e,"getTensorsInContainer",(function(){return c}));var r=n("34d7"),a=n("23bf"),s=n("6ad5");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(t,e){if(t.dtype===e.dtype)return[t,e];const n=Object(a["c"])(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function o(t,e){Object(s["b"])(t.dtype===e.dtype,()=>`The dtypes of the first(${t.dtype}) and second(${e.dtype}) input must match`)}function u(t,e){return e.some(e=>e.id===t.id)}function c(t){const e=[],n=new Set;return l(t,e,n),e}function l(t,e,n){if(null==t)return;if(t instanceof r["a"])return void e.push(t);if(!d(t))return;const a=t;for(const r in a){const t=a[r];n.has(t)||(n.add(t),l(t,e,n))}}function d(t){return Array.isArray(t)||"object"===typeof t}},"7aec":function(t,e,n){(function(t){var r;(function(t,a,s){function i(t){var e=this;function n(t,e){var n,r,a,s,i,o=[],u=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,u=Math.max(u,e.length)),a=0,s=-32;s<u;++s)e&&(r^=e.charCodeAt((s+32)%e.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,n=o[127&s]^=r+i,a=0==n?a+1:0);for(a>=128&&(o[127&(e&&e.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;t.w=i,t.X=o,t.i=a}e.next=function(){var t,n,r=e.w,a=e.X,s=e.i;return e.w=r=r+1640531527|0,n=a[s+34&127],t=a[s=s+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=a[s]=n^t,e.i=s,n+(r^r>>>16)|0},n(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function u(t,e){null==t&&(t=+new Date);var n=new i(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=n.next()>>>11,e=(n.next()>>>0)/4294967296,r=(t+e)/(1<<21)}while(0===r);return r},a.int32=n.next,a.quick=a,r&&(r.X&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("07d6")&&n("3c35")?(r=function(){return u}.call(e,n,e,a),void 0===r||(a.exports=r)):this.xor4096=u})(0,t,n("07d6"))}).call(this,n("62e4")(t))},"7e36":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","atan"),n={x:e};return r["a"].runKernel(a["l"],n)}const u=Object(i["b"])({atan_:o})},"7e6a":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("043e"),a=n("54ef"),s=n("d4e4");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(t,e=0,n=1,a,i){if(null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const o=new s["a"](e,n,a,!0,i),u=Object(r["a"])(t,a);for(let r=0;r<u.values.length;r++)u.values[r]=o.nextValue();return u.toTensor()}const o=Object(a["b"])({truncatedNormal_:i})},"7ed6":function(t,e,n){"use strict";
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(){return"undefined"!==typeof navigator&&null!=navigator}function a(){if(r()){const t=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function s(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}n.r(e),n.d(e,"isMobile",(function(){return a})),n.d(e,"isBrowser",(function(){return s}))},"804a":function(t,e,n){"use strict";n.d(e,"a",(function(){return f}));var r=n("538e"),a=n("a3f7"),s=n("deb3"),i=n("4f20"),o=n("1359"),u=n("c021"),c=n("a5aa"),l=n("54ef"),d=n("a009"),h=n("e053");
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function p(t,e=-1){const n=Object(a["a"])(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);const l=Object(r["a"])((t,n)=>{const r=!0,a=Object(u["a"])(t,e,!0),l=Object(d["a"])(t,a),p=Object(d["a"])(Object(s["a"])(l,"float32"),Object(o["a"])(Object(h["a"])(Object(i["a"])(l),e,r)));n([p]);const f=(t,n)=>{const[r]=n,a=!0,s=Object(i["a"])(r);return Object(d["a"])(t,Object(c["a"])(Object(h["a"])(t,e,a),s))};return{value:p,gradFunc:f}});return l(n)}const f=Object(l["b"])({logSoftmax_:p})},8389:function(t,e,n){"use strict";
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(t,e,n){const r=a(t,e,n),s=r<0?-(r+1):r;t.splice(s,0,e)}function a(t,e,n){return i(t,e,n||s)}function s(t,e){return t>e?1:t<e?-1:0}function i(t,e,n){let r=0,a=t.length,s=0,i=!1;while(r<a){s=r+(a-r>>>1);const o=n(e,t[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o(t,e,n,r,a){return l(t,e,n,r,a,0)}function u(t,e,n,r,a,s){return l(t,e,n,r,a,0,!1,s,!0)}function c(t,e,n,r,a,s){return l(t,e,n,r,a,s,!0)}function l(t,e,n,a,s,i,o=!1,u=!1,c=!1){const l=[];for(let r=0;r<e.length;r++)e[r]>s&&l.push({score:e[r],boxIndex:r,suppressBeginIndex:0});l.sort(p);const f=i>0?-.5/i:0,m=[],b=[];while(m.length<n&&l.length>0){const e=l.pop(),{score:n,boxIndex:i,suppressBeginIndex:o}=e;if(n<s)break;let u=!1;for(let r=m.length-1;r>=o;--r){const n=d(t,i,m[r]);if(n>=a){u=!0;break}if(e.score=e.score*h(a,f,n),e.score<=s)break}e.suppressBeginIndex=m.length,u||(e.score===n?(m.push(i),b.push(e.score)):e.score>s&&r(l,e,p))}const g=m.length,y=n-g;u&&y>0&&(m.push(...new Array(y).fill(0)),b.push(...new Array(y).fill(0)));const x={selectedIndices:m};return o&&(x["selectedScores"]=b),c&&(x["validOutputs"]=g),x}function d(t,e,n){const r=t.subarray(4*e,4*e+4),a=t.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(a[0],a[2]),l=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),h=Math.max(a[1],a[3]),p=(o-s)*(u-i),f=(d-c)*(h-l);if(p<=0||f<=0)return 0;const m=Math.max(s,c),b=Math.max(i,l),g=Math.min(o,d),y=Math.min(u,h),x=Math.max(g-m,0)*Math.max(y-b,0);return x/(p+f-x)}function h(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function p(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}n.d(e,"a",(function(){return o})),n.d(e,"b",(function(){return u})),n.d(e,"c",(function(){return c}))},"838f":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("6ad5"),o=n("54ef"),u=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(t,e,n,o,c="NHWC",l=[1,1],d){const h=Object(s["a"])(t,"x","depthwiseConv2d"),p=Object(s["a"])(e,"filter","depthwiseConv2d");let f=h,m=!1;3===h.rank&&(m=!0,f=Object(u["a"])(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i["b"](4===f.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),i["b"](4===p.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+p.rank+"."),i["b"](f.shape[3]===p.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),null!=d&&i["b"](i["v"](o),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${d} but got pad ${o}.`);const b={x:f,filter:p},g={strides:n,pad:o,dataFormat:c,dilations:l,dimRoundingMode:d},y=r["a"].runKernel(a["O"],b,g);return m?Object(u["a"])(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const l=Object(o["b"])({depthwiseConv2d_:c})},"84d6":function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("6ae2"),a=n("c05b");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(t,e,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const i={start:t,stop:e,step:n,dtype:s};return r["a"].runKernel(a["ic"],{},i)}},"853e":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("6ad5"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e=0){const n=Object(s["a"])(t,"x","unique","string_or_numeric");Object(i["b"])(n.rank>0,()=>"The input tensor must be at least 1D");const o={x:n},u={axis:e},[c,l]=r["a"].runKernel(a["Wc"],o,u);return{values:c,indices:l}}const c=Object(o["b"])({unique_:u})},8629:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("043e"),a=n("54ef"),s=n("d4e4");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(t,e=0,n=1,a="float32",i){const o=Object(r["a"])(t,a),u=new s["c"](e,n,null,i);for(let r=0;r<o.values.length;r++)o.values[r]=u.nextValue();return o.toTensor()}const o=Object(a["b"])({randomUniform_:i})},8705:function(t,e,n){},8888:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","tanh"),n={x:e};return r["a"].runKernel(a["Sc"],n)}const u=Object(i["b"])({tanh_:o})},"89ed":function(t,e,n){(function(t){var r;(function(t,a,s){function i(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,a=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^a,e.a=a-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function u(t,e){var n=new i(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=n.next()>>>11,e=(n.next()>>>0)/4294967296,r=(t+e)/(1<<21)}while(0===r);return r},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("07d6")&&n("3c35")?(r=function(){return u}.call(e,n,e,a),void 0===r||(a.exports=r)):this.tychei=u})(0,t,n("07d6"))}).call(this,n("62e4")(t))},"8ae0":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","abs");if("complex64"===e.dtype){const t={x:e};return r["a"].runKernel(a["A"],t)}{const t={x:e};return r["a"].runKernel(a["a"],t)}}const u=Object(i["b"])({abs_:o})},"8b87":function(t,e,n){"use strict";n.d(e,"a",(function(){return s})),n.d(e,"b",(function(){return i}));
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=1e-7,a=1e-4;class s{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class i{decComplexRef(t){}time(t){return o("time")}read(t){return o("read")}readSync(t){return o("readSync")}numDataIds(){return o("numDataIds")}disposeData(t){return o("disposeData")}write(t,e,n){return o("write")}move(t,e,n,r){return o("move")}memory(){return o("memory")}floatPrecision(){return o("floatPrecision")}epsilon(){return 32===this.floatPrecision()?r:a}batchMatMul(t,e,n,r){return o("batchMatMul")}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:a,activation:s,preluActivationWeights:i}){return o("fusedBatchMatMul")}slice(t,e,n){return o("slice")}stridedSlice(t,e,n,r){return o("stridedSlice")}unstack(t,e){return o("unstack")}reverse(t,e){return o("reverse")}concat(t,e){return o("concat")}neg(t){return o("neg")}add(t,e){return o("add")}addN(t){return o("addN")}subtract(t,e){return o("subtract")}multiply(t,e){return o("multiply")}realDivide(t,e){return o("realDivide")}floorDiv(t,e){return o("floorDiv")}sum(t,e){return o("sum")}prod(t,e){return o("prod")}unsortedSegmentSum(t,e,n){return o("unsortedSegmentSum")}argMin(t,e){return o("argMin")}argMax(t,e){return o("argMax")}equal(t,e){return o("equal")}notEqual(t,e){return o("notEqual")}less(t,e){return o("less")}lessEqual(t,e){return o("lessEqual")}greater(t,e){return o("greater")}greaterEqual(t,e){return o("greaterEqual")}logicalNot(t){return o("logicalNot")}logicalAnd(t,e){return o("logicalAnd")}logicalOr(t,e){return o("logicalOr")}where(t){return o("where")}select(t,e,n){return o("select")}topk(t,e,n){return o("topk")}min(t,e){return o("min")}minimum(t,e){return o("minimum")}mod(t,e){return o("mod")}max(t,e){return o("max")}maximum(t,e){return o("maximum")}all(t,e){return o("all")}any(t,e){return o("any")}squaredDifference(t,e){return o("squaredDifference")}ceil(t){return o("ceil")}floor(t){return o("floor")}round(t){return o("round")}sign(t){return o("sign")}isNaN(t){return o("isNaN")}isInf(t){return o("isInf")}isFinite(t){return o("isFinite")}pow(t,e){return o("pow")}exp(t){return o("exp")}expm1(t){return o("expm1")}softmax(t,e){return o("softmax")}log(t){return o("log")}log1p(t){return o("log1p")}sqrt(t){return o("sqrt")}rsqrt(t){return o("rsqrt")}square(t){return o("square")}reciprocal(t){return o("reciprocal")}relu(t){return o("relu")}relu6(t){return o("relu6")}prelu(t,e){return o("prelu")}elu(t){return o("elu")}eluDer(t,e){return o("eluDer")}selu(t){return o("selu")}int(t){return o("int")}clip(t,e,n){return o("clip")}abs(t){return o("abs")}complexAbs(t){return o("complexAbs")}sigmoid(t){return o("sigmoid")}softplus(t){return o("softplus")}sin(t){return o("sin")}cos(t){return o("cos")}tan(t){return o("tan")}asin(t){return o("asin")}acos(t){return o("acos")}atan(t){return o("atan")}atan2(t,e){return o("atan2")}sinh(t){return o("sinh")}cosh(t){return o("cosh")}tanh(t){return o("tanh")}asinh(t){return o("asinh")}acosh(t){return o("acosh")}atanh(t){return o("atanh")}erf(t){return o("erf")}step(t,e){return o("step")}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:a,preluActivationWeights:s}){return o("fusedConv2d")}conv2d(t,e,n){return o("conv2d")}conv2dDerInput(t,e,n){return o("conv2dDerInput")}conv2dDerFilter(t,e,n){return o("conv2dDerFilter")}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:a,preluActivationWeights:s}){return o("fusedDepthwiseConv2D")}depthwiseConv2D(t,e,n){return o("depthwiseConv2D")}depthwiseConv2DDerInput(t,e,n){return o("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(t,e,n){return o("depthwiseConv2DDerFilter")}conv3d(t,e,n){return o("conv3d")}conv3dDerInput(t,e,n){return o("conv3dDerInput")}conv3dDerFilter(t,e,n){return o("conv3dDerFilter")}maxPool(t,e){return o("maxPool")}maxPoolBackprop(t,e,n,r){return o("maxPoolBackprop")}avgPool(t,e){return o("avgPool")}avgPoolBackprop(t,e,n){return o("avgPoolBackprop")}avgPool3d(t,e){return o("avgPool3d")}avgPool3dBackprop(t,e,n){return o("avgPool3dBackprop")}maxPool3d(t,e){return o("maxPool3d")}maxPool3dBackprop(t,e,n,r){return o("maxPool3dBackprop")}reshape(t,e){return o("reshape")}cast(t,e){return o("cast")}tile(t,e){return o("tile")}pad(t,e,n){return o("pad")}transpose(t,e){return o("transpose")}gather(t,e,n,r=0){return o("gather")}gatherND(t,e){return o("gatherND")}scatterND(t,e,n){return o("scatterND")}batchToSpaceND(t,e,n){return o("batchToSpaceND")}spaceToBatchND(t,e,n){return o("spaceToBatchND")}resizeBilinear(t,e,n,r,a){return o("resizeBilinear")}resizeBilinearBackprop(t,e,n){return o("resizeBilinearBackprop")}resizeNearestNeighbor(t,e,n,r,a){return o("resizeNearestNeighbor")}resizeNearestNeighborBackprop(t,e,n){return o("resizeNearestNeighborBackprop")}batchNorm(t,e,n,r,a,s){return o("batchNorm")}localResponseNormalization4D(t,e,n,r,a){return o("localResponseNormalization4D")}LRNGrad(t,e,n,r,a,s,i){return o("LRNGrad")}multinomial(t,e,n,r){return o("multinomial")}oneHot(t,e,n,r){return o("oneHot")}cumsum(t,e,n,r){return o("cumsum")}nonMaxSuppression(t,e,n,r,a){return o("nonMaxSuppression")}fft(t){return o("fft")}ifft(t){return o("ifft")}complex(t,e){return o("complex")}real(t){return o("real")}imag(t){return o("imag")}cropAndResize(t,e,n,r,a,s){return o("cropAndResize")}depthToSpace(t,e,n){return o("depthToSpace")}split(t,e,n){return o("split")}sparseToDense(t,e,n,r){return o("sparseToDense")}diag(t){return o("diag")}fill(t,e,n){return o("fill")}onesLike(t){return o("onesLike")}zerosLike(t){return o("zerosLike")}linspace(t,e,n){return o("linspace")}dispose(){return o("dispose")}}function o(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},"8bc9":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t,e,n,i,o=!1){const u=Object(s["a"])(t,"x","maxPoolWithArgmax"),c={x:u},l={filterSize:e,strides:n,pad:i,includeBatchInIndex:o},d=r["a"].runKernel(a["Mb"],c,l);return{result:d[0],indexes:d[1]}}const u=Object(i["b"])({maxPoolWithArgmax_:o})},"8bfa":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef"),o=n("a34f");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e,n){const i=Object(s["a"])(t,"indices","scatterND","int32"),u=Object(s["a"])(e,"updates","scatterND");o["validateInput"](u,i,n);const c={indices:i,updates:u},l={shape:n};return r["a"].runKernel(a["xc"],c,l)}const c=Object(i["b"])({scatterND_:u})},"8cb0":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("54ef"),i=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t,e,n,s,o,u=[1,1],c){let l=e,d=!1;3===e.rank&&(d=!0,l=Object(i["a"])(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const h={dy:l,filter:n},p={strides:s,pad:o,dimRoundingMode:c,dilations:u,inputShape:t},f=r["a"].runKernel(a["Q"],h,p);return d?Object(i["a"])(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const u=Object(s["b"])({depthwiseConv2dNativeBackpropInput_:o})},"8d71":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("6ad5"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e){const n=Object(s["a"])(t,"x","tile","string_or_numeric");i["b"](n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`);const o={x:n},u={reps:e};return r["a"].runKernel(a["Tc"],o,u)}const c=Object(o["b"])({tile_:u})},"8e05":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("6ad5"),o=n("deb3"),u=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(t){let e=Object(s["a"])(t,"x","erf");i["b"]("int32"===e.dtype||"float32"===e.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===e.dtype&&(e=Object(o["a"])(e,"float32"));const n={x:e};return r["a"].runKernel(a["Y"],n)}const l=Object(u["b"])({erf_:c})},9117:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),i=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e){let n=Object(i["a"])(t,"a","add"),o=Object(i["a"])(e,"b","add");[n,o]=Object(s["makeTypesMatch"])(n,o);const u={a:n,b:o};return r["a"].runKernel(a["d"],u)}const c=Object(o["b"])({add_:u})},9152:function(t,e){e.read=function(t,e,n,r,a){var s,i,o=8*a-r-1,u=(1<<o)-1,c=u>>1,l=-7,d=n?a-1:0,h=n?-1:1,p=t[e+d];for(d+=h,s=p&(1<<-l)-1,p>>=-l,l+=o;l>0;s=256*s+t[e+d],d+=h,l-=8);for(i=s&(1<<-l)-1,s>>=-l,l+=r;l>0;i=256*i+t[e+d],d+=h,l-=8);if(0===s)s=1-c;else{if(s===u)return i?NaN:1/0*(p?-1:1);i+=Math.pow(2,r),s-=c}return(p?-1:1)*i*Math.pow(2,s-r)},e.write=function(t,e,n,r,a,s){var i,o,u,c=8*s-a-1,l=(1<<c)-1,d=l>>1,h=23===a?Math.pow(2,-24)-Math.pow(2,-77):0,p=r?0:s-1,f=r?1:-1,m=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(o=isNaN(e)?1:0,i=l):(i=Math.floor(Math.log(e)/Math.LN2),e*(u=Math.pow(2,-i))<1&&(i--,u*=2),e+=i+d>=1?h/u:h*Math.pow(2,1-d),e*u>=2&&(i++,u/=2),i+d>=l?(o=0,i=l):i+d>=1?(o=(e*u-1)*Math.pow(2,a),i+=d):(o=e*Math.pow(2,d-1)*Math.pow(2,a),i=0));a>=8;t[n+p]=255&o,p+=f,o/=256,a-=8);for(i=i<<a|o,c+=a;c>0;t[n+p]=255&i,p+=f,i/=256,c-=8);t[n+p-f]|=128*m}},"917a":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","relu"),n={x:e};return r["a"].runKernel(a["mc"],n)}const u=Object(i["b"])({relu_:o})},"91a3":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t,e,n=0,i=0){const o=Object(s["a"])(t,"x","gather"),u=Object(s["a"])(e,"indices","gather","int32"),c={x:o,indices:u},l={axis:n,batchDims:i};return r["a"].runKernel(a["mb"],c,l)}const u=Object(i["b"])({gather_:o})},"93b2":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("6ae2"),a=n("a3f7"),s=n("54ef");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(t){const e=Object(a["a"])(t,"x","square"),n={};return r["a"].runKernel("Square",{x:e},n)}const o=Object(s["b"])({square_:i})},"93db":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("6ad5"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e,n){i["b"]("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const o=Object(s["a"])(t,"x","mirrorPad");if(0===o.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");i["b"](e.length===o.rank,()=>`Padding doesn't match input. Must be ${o.rank}. Got ${e.length}.`);const u="reflect"===n?1:0;for(let r=0;r<o.rank;r++)i["b"](2===e[r].length,()=>"Invalid number of paddings. Must be length of 2 each."),i["b"](e[r][0]>=0&&e[r][0]<=o.shape[r]-u&&e[r][1]>=0&&e[r][1]<=o.shape[r]-u,()=>`Padding in dimension ${r} cannot be greater than or equal to ${o.shape[r]-u} or less than 0 for input of shape `+o.shape);const c={paddings:e,mode:n},l={x:o};return r["a"].runKernel(a["Rb"],l,c)}const c=Object(o["b"])({mirrorPad_:u})},9489:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]},"960f":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("a3f7"),a=n("6ad5"),s=n("5959");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(t,e){Object(a["d"])(t);const n=Object(r["c"])(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");const i=null;return Object(s["a"])(t,i,n,e)}},9748:function(t,e,n){"use strict";n.d(e,"a",(function(){return h}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("6ad5"),o=n("deb3"),u=n("b818"),c=n("54ef"),l=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function d(t,e,n,c,d){const h=Object(s["a"])(t,"x","avgPool","float32"),p=1;i["b"](u["h"](n,p),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${p}'`);let f=h,m=!1;3===h.rank&&(m=!0,f=Object(l["a"])(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i["b"](4===f.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${f.rank}.`),null!=d&&i["b"](i["v"](c),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${d} but got pad ${c}.`);const b={x:f},g={filterSize:e,strides:n,pad:c,dimRoundingMode:d};let y=r["a"].runKernel(a["o"],b,g);return y=Object(o["a"])(y,h.dtype),m?Object(l["a"])(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const h=Object(c["b"])({avgPool_:d})},9847:function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},"98ab":function(t,e,n){"use strict";var r=function(){var t=this,e=t.$createElement,n=t._self._c||e;return t.showAlert?n("section",{staticClass:"pricing"},[n("div",{staticClass:"box recommended"},[t.text?n("h3",[t._v(t._s(t.text))]):t._e(),t.textHtml?n("h3",{domProps:{innerHTML:t._s(t.textHtml)}}):t._e()])]):t._e()},a=[],s={name:"Alert",props:{text:{},textHtml:{},condition:{default:null}},computed:{showAlert:function(){if(null===this.condition){if(this.text||this.textHtml)return!0}else if(!0===this.condition&&this.text&&this.textHtml)return!0;return!1}}},i=s,o=(n("4cd0"),n("2877")),u=Object(o["a"])(i,r,a,!1,null,"4f0f8cf7",null);e["a"]=u.exports},"99d0":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("6ad5"),i=n("54ef"),o=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e,n,i,u){s["b"](t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let c=t,l=e,d=!1;4===e.rank&&(d=!0,l=Object(o["a"])(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),c=[1,t[0],t[1],t[2],t[3]]);const h=c[4],p=l.shape[4];s["b"](5===c.length,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+c.length+"."),s["b"](5===l.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+l.rank),s["b"](5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank),s["b"](h===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[3]}.`),s["b"](p===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[4]}.`);const f={dy:l,filter:n},m={pad:u,strides:i,inputShape:c},b=r["a"].runKernel(a["H"],f,m);return d?Object(o["a"])(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}const c=Object(i["b"])({conv3DBackpropInput_:u})},"9e38":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","elu"),n={x:e};return r["a"].runKernel(a["V"],n)}const u=Object(i["b"])({elu_:o})},"9e7b":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}]},"9fe6":function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("6ad5"),o=n("b818"),u=n("54ef"),c=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function l(t,e,n,u,l){const d=Object(s["a"])(t,"x","maxPool"),h=1;let p=d,f=!1;3===d.rank&&(f=!0,p=Object(c["a"])(d,[1,d.shape[0],d.shape[1],d.shape[2]])),i["b"](4===p.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${p.rank}.`),i["b"](o["h"](n,h),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${h}'`),null!=l&&i["b"](i["v"](u),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`);const m={x:p},b={filterSize:e,strides:n,pad:u,dimRoundingMode:l},g=r["a"].runKernel(a["Ib"],m,b);return f?Object(c["a"])(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const d=Object(u["b"])({maxPool_:l})},"9ffd":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","softplus"),n={x:e};return r["a"].runKernel(a["Gc"],n)}const u=Object(i["b"])({softplus_:o})},a009:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),i=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e){let n=Object(i["a"])(t,"a","sub"),o=Object(i["a"])(e,"b","sub");[n,o]=Object(s["makeTypesMatch"])(n,o);const u={a:n,b:o};return r["a"].runKernel(a["Pc"],u)}const c=Object(o["b"])({sub_:u})},a09b:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","zerosLike"),n={x:e};return r["a"].runKernel(a["Zc"],n)}const u=Object(i["b"])({zerosLike_:o})},a34f:function(t,e,n){"use strict";n.r(e),n.d(e,"validateUpdateShape",(function(){return a})),n.d(e,"validateInput",(function(){return s})),n.d(e,"calculateShapes",(function(){return i}));var r=n("6ad5");function a(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,a=e.rank>1?e.rank-1:1,s="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+`, indices.shape: ${e.shape}, shape: ${t}`+`, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(t.length<r+(n.rank-a))throw new Error(s+" Output shape length < "+(r+(n.rank-a)));if(n.rank!==a+t.length-r)throw new Error(s+" update.rank != "+(a+t.length-r));for(let i=0;i<a;++i)if(n.shape[i]!==e.shape[i])throw new Error(s+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${e.shape[i]}).`);for(let i=0;i<n.rank-a;++i)if(n.shape[i+a]!==t[i+r])throw new Error(s+` updates.shape[${i+a}] (${n.shape[i+a]}) != shape[${i+a}] (${t[i+a]})`)}function s(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+e.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===e.size)throw new Error("Indices specified for empty output. indices shape: "+e.shape);if(0===t.size)throw new Error("Updates specified for empty output. updates shape: "+t.shape)}a(n,e,t)}function i(t,e,n){const a=e.shape.length,s=a>1?e.shape[a-1]:1,i=n.length;let o=1;for(let r=s;r<i;++r)o*=n[r];const u=s<1?1:s,c=Object(r["N"])(e.shape)/u,l=[...Object(r["j"])(n.slice(0,s)),1],d=Object(r["N"])(n);return{sliceRank:s,numUpdates:c,sliceSize:o,strides:l,outputSize:d}}},a374:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","acos"),n={x:e};return r["a"].runKernel(a["b"],n)}const u=Object(i["b"])({acos_:o})},a3f7:function(t,e,n){"use strict";n.d(e,"c",(function(){return u})),n.d(e,"a",(function(){return d})),n.d(e,"b",(function(){return h}));var r=n("6ae2"),a=n("b333"),s=n("34d7"),i=n("6ad5"),o=n("eb7e");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e){let n=t;if(Object(i["A"])(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];while(Array.isArray(n)||Object(i["A"])(n)&&"string"!==e)r.push(n.length),n=n[0];return Array.isArray(t)&&Object(a["c"])().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&c(t,r,[]),r}function c(t,e,n){if(n=n||[],!Array.isArray(t)&&!Object(i["A"])(t))return void Object(i["b"])(0===e.length,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);Object(i["b"])(e.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`),Object(i["b"])(t.length===e[0],()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`);const r=e.slice(1);for(let a=0;a<t.length;++a)c(t[a],r,n.concat(a))}function l(t,e,n,r){if("string_or_numeric"!==t){if(null==t)throw new Error("Expected dtype cannot be null.");if("numeric"!==t&&t!==e||"numeric"===t&&"string"===e)throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}}function d(t,e,n,a="numeric"){if(t instanceof s["a"])return l(a,t.dtype,e,n),t;let c=Object(i["r"])(t);if("string"!==c&&["bool","int32","float32"].indexOf(a)>=0&&(c=a),l(a,c,e,n),null==t||!Object(i["A"])(t)&&!Array.isArray(t)&&"number"!==typeof t&&"boolean"!==typeof t&&"string"!==typeof t){const r=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const d=u(t,c);Object(i["A"])(t)||Array.isArray(t)||(t=[t]);const h=!0,p="string"!==c?Object(o["toTypedArray"])(t,c):Object(i["m"])(t,[],h);return r["a"].makeTensor(p,d,c)}function h(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);const a=t;return a.map((t,a)=>d(t,`${e}[${a}]`,n,r))}},a49d:function(t,e,n){var r;(function(a,s){var i,o=this,u=256,c=6,l=52,d="random",h=s.pow(u,c),p=s.pow(2,l),f=2*p,m=u-1;function b(t,e,n){var r=[];e=1==e?{entropy:!0}:e||{};var i=v(x(e.entropy?[t,k(a)]:null==t?w():t,3),r),o=new g(r),l=function(){var t=o.g(c),e=h,n=0;while(t<p)t=(t+n)*u,e*=u,n=o.g(1);while(t>=f)t/=2,e/=2,n>>>=1;return(t+n)/e};return l.int32=function(){return 0|o.g(4)},l.quick=function(){return o.g(4)/4294967296},l.double=l,v(k(o.S),a),(e.pass||n||function(t,e,n,r){return r&&(r.S&&y(r,o),t.state=function(){return y(o,{})}),n?(s[d]=t,e):t})(l,i,"global"in e?e.global:this==s,e.state)}function g(t){var e,n=t.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];n||(t=[n++]);while(a<u)i[a]=a++;for(a=0;a<u;a++)i[a]=i[s=m&s+t[a%n]+(e=i[a])],i[s]=e;(r.g=function(t){var e,n=0,a=r.i,s=r.j,i=r.S;while(t--)e=i[a=m&a+1],n=n*u+i[m&(i[a]=i[s=m&s+e])+(i[s]=e)];return r.i=a,r.j=s,n})(u)}function y(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function x(t,e){var n,r=[],a=typeof t;if(e&&"object"==a)for(n in t)try{r.push(x(t[n],e-1))}catch(s){}return r.length?r:"string"==a?t:t+"\0"}function v(t,e){var n,r=t+"",a=0;while(a<r.length)e[m&a]=m&(n^=19*e[m&a])+r.charCodeAt(a++);return k(e)}function w(){try{var t;return i&&(t=i.randomBytes)?t=t(u):(t=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(t)),k(t)}catch(r){var e=o.navigator,n=e&&e.plugins;return[+new Date,o,n,o.screen,k(a)]}}function k(t){return String.fromCharCode.apply(0,t)}if(s["seed"+d]=b,v(s.random(),a),t.exports){t.exports=b;try{i=n(3)}catch(O){}}else r=function(){return b}.call(e,n,e,t),void 0===r||(t.exports=r)})([],Math)},a49e:function(t,e,n){(function(t){var r;(function(t,a,s){function i(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function u(t,e){var n=new i(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=n.next()>>>11,e=(n.next()>>>0)/4294967296,r=(t+e)/(1<<21)}while(0===r);return r},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("07d6")&&n("3c35")?(r=function(){return u}.call(e,n,e,a),void 0===r||(a.exports=r)):this.xorwow=u})(0,t,n("07d6"))}).call(this,n("62e4")(t))},a5aa:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),i=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e){let n=Object(i["a"])(t,"a","mul"),o=Object(i["a"])(e,"b","mul");[n,o]=Object(s["makeTypesMatch"])(n,o);const u={a:n,b:o};return r["a"].runKernel(a["Ub"],u)}const c=Object(o["b"])({mul_:u})},a780:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("0280"),a=n("a3f7");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function s(t){const e=Object(a["a"])(t,"condition","whereAsync","bool"),n=await e.data(),s=Object(r["a"])(e.shape,n);return t!==e&&e.dispose(),s}const i=s},a80f:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},ae6d:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t,e=null,n=!1){const i=Object(s["a"])(t,"x","min"),o={x:i},u={axis:e,keepDims:n};return r["a"].runKernel(a["Pb"],o,u)}const u=Object(i["b"])({min_:o})},aeab:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},afda:function(t,e,n){"use strict";n.d(e,"a",(function(){return m}));var r=n("a3f7"),a=n("6ad5"),s=n("9117"),i=n("36e5"),o=n("4f20"),u=n("1359"),c=n("c021"),l=n("54ef"),d=n("35c9"),h=n("a009"),p=n("e053");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function f(t,e=null,n=!1){const l=Object(r["a"])(t,"x","logSumExp"),f=Object(a["I"])(e,l.shape),m=Object(c["a"])(l,f,!0),b=Object(h["a"])(l,m),g=Object(o["a"])(b),y=Object(p["a"])(g,f),x=Object(u["a"])(y),v=Object(s["a"])(Object(d["a"])(m,x.shape),x);if(n){const t=Object(i["e"])(v.shape,f);return Object(d["a"])(v,t)}return v}const m=Object(l["b"])({logSumExp_:f})},b21c:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),i=n("a3f7"),o=n("526f"),u=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(t,e){let n=Object(i["a"])(t,"a","lessEqual"),u=Object(i["a"])(e,"b","lessEqual");[n,u]=Object(s["makeTypesMatch"])(n,u),Object(o["a"])(n.shape,u.shape);const c={a:n,b:u};return r["a"].runKernel(a["zb"],c)}const l=Object(u["b"])({lessEqual_:c})},b333:function(t,e,n){"use strict";n.d(e,"b",(function(){return s})),n.d(e,"c",(function(){return c})),n.d(e,"a",(function(){return l})),n.d(e,"d",(function(){return d}));var r=n("6ad5");
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a="tfjsflags";class s{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(Object(r["x"])(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const t=i(this.global.location.search);if(a in t){const e=t[a].split(",");e.forEach(t=>{const[e,n]=t.split(":");this.urlFlags[e]=u(e,n)})}}}function i(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...n)=>(o(e,n[0],n[1]),n.join("="))),e}function o(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}function u(t,e){if(e=e.toLowerCase(),"true"===e||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}function c(){return l}let l=null;function d(t){l=t}},b39e:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","selu"),n={x:e};return r["a"].runKernel(a["zc"],n)}const u=Object(i["b"])({selu_:o})},b500:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","reciprocal"),n={x:e};return r["a"].runKernel(a["lc"],n)}const u=Object(i["b"])({reciprocal_:o})},b61d:function(t,e,n){"use strict";n.d(e,"a",(function(){return b}));var r=n("6ad5"),a=n("0777"),s=n("649e"),i=n("24b0"),o=n("54ef"),u=n("d7b0"),c=n("35c9"),l=n("6d3c"),d=n("45bb"),h=n("5a2c"),p=n("a09b"),f=n("1ab7");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function m(t,e){Object(r["b"])("float32"===t.dtype,()=>"The dtype for rfft() must be real value but got "+t.dtype);let n=t.shape[t.shape.length-1];const o=t.size/n;let m;if(null!=e&&e<n){const r=t.shape.map(t=>0),a=t.shape.map(t=>t);a[t.shape.length-1]=e,m=Object(l["a"])(t,r,a),n=e}else if(null!=e&&e>n){const r=t.shape.map(t=>t);r[t.shape.length-1]=e-n,m=Object(s["a"])([t,Object(h["a"])(r)],t.shape.length-1),n=e}else m=t;const b=Object(p["a"])(m),g=Object(c["a"])(Object(a["a"])(m,b),[o,n]),y=Object(f["a"])(g),x=Math.floor(n/2)+1,v=Object(u["a"])(y),w=Object(i["a"])(y),k=Object(d["a"])(v,[x,n-x],v.shape.length-1),O=Object(d["a"])(w,[x,n-x],w.shape.length-1),I=m.shape.slice();return I[m.shape.length-1]=x,Object(c["a"])(Object(a["a"])(k[0],O[0]),I)}const b=Object(o["b"])({rfft_:m})},b639:function(t,e,n){"use strict";(function(t){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
var r=n("1fb5"),a=n("9152"),s=n("e3db");function i(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()&&"function"===typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(e){return!1}}function o(){return c.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function u(t,e){if(o()<e)throw new RangeError("Invalid typed array length");return c.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(e),t.__proto__=c.prototype):(null===t&&(t=new c(e)),t.length=e),t}function c(t,e,n){if(!c.TYPED_ARRAY_SUPPORT&&!(this instanceof c))return new c(t,e,n);if("number"===typeof t){if("string"===typeof e)throw new Error("If encoding is specified then the first argument must be a string");return p(this,t)}return l(this,t,e,n)}function l(t,e,n,r){if("number"===typeof e)throw new TypeError('"value" argument must not be a number');return"undefined"!==typeof ArrayBuffer&&e instanceof ArrayBuffer?b(t,e,n,r):"string"===typeof e?f(t,e,n):g(t,e)}function d(t){if("number"!==typeof t)throw new TypeError('"size" argument must be a number');if(t<0)throw new RangeError('"size" argument must not be negative')}function h(t,e,n,r){return d(e),e<=0?u(t,e):void 0!==n?"string"===typeof r?u(t,e).fill(n,r):u(t,e).fill(n):u(t,e)}function p(t,e){if(d(e),t=u(t,e<0?0:0|y(e)),!c.TYPED_ARRAY_SUPPORT)for(var n=0;n<e;++n)t[n]=0;return t}function f(t,e,n){if("string"===typeof n&&""!==n||(n="utf8"),!c.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|v(e,n);t=u(t,r);var a=t.write(e,n);return a!==r&&(t=t.slice(0,a)),t}function m(t,e){var n=e.length<0?0:0|y(e.length);t=u(t,n);for(var r=0;r<n;r+=1)t[r]=255&e[r];return t}function b(t,e,n,r){if(e.byteLength,n<0||e.byteLength<n)throw new RangeError("'offset' is out of bounds");if(e.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");return e=void 0===n&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,n):new Uint8Array(e,n,r),c.TYPED_ARRAY_SUPPORT?(t=e,t.__proto__=c.prototype):t=m(t,e),t}function g(t,e){if(c.isBuffer(e)){var n=0|y(e.length);return t=u(t,n),0===t.length?t:(e.copy(t,0,0,n),t)}if(e){if("undefined"!==typeof ArrayBuffer&&e.buffer instanceof ArrayBuffer||"length"in e)return"number"!==typeof e.length||et(e.length)?u(t,0):m(t,e);if("Buffer"===e.type&&s(e.data))return m(t,e.data)}throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}function y(t){if(t>=o())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+o().toString(16)+" bytes");return 0|t}function x(t){return+t!=t&&(t=0),c.alloc(+t)}function v(t,e){if(c.isBuffer(t))return t.length;if("undefined"!==typeof ArrayBuffer&&"function"===typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;"string"!==typeof t&&(t=""+t);var n=t.length;if(0===n)return 0;for(var r=!1;;)switch(e){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return Y(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return Q(t).length;default:if(r)return Y(t).length;e=(""+e).toLowerCase(),r=!0}}function w(t,e,n){var r=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if(n>>>=0,e>>>=0,n<=e)return"";t||(t="utf8");while(1)switch(t){case"hex":return M(this,e,n);case"utf8":case"utf-8":return $(this,e,n);case"ascii":return F(this,e,n);case"latin1":case"binary":return _(this,e,n);case"base64":return A(this,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return z(this,e,n);default:if(r)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),r=!0}}function k(t,e,n){var r=t[e];t[e]=t[n],t[n]=r}function O(t,e,n,r,a){if(0===t.length)return-1;if("string"===typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=a?0:t.length-1),n<0&&(n=t.length+n),n>=t.length){if(a)return-1;n=t.length-1}else if(n<0){if(!a)return-1;n=0}if("string"===typeof e&&(e=c.from(e,r)),c.isBuffer(e))return 0===e.length?-1:I(t,e,n,r,a);if("number"===typeof e)return e&=255,c.TYPED_ARRAY_SUPPORT&&"function"===typeof Uint8Array.prototype.indexOf?a?Uint8Array.prototype.indexOf.call(t,e,n):Uint8Array.prototype.lastIndexOf.call(t,e,n):I(t,[e],n,r,a);throw new TypeError("val must be string, number or Buffer")}function I(t,e,n,r,a){var s,i=1,o=t.length,u=e.length;if(void 0!==r&&(r=String(r).toLowerCase(),"ucs2"===r||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(t.length<2||e.length<2)return-1;i=2,o/=2,u/=2,n/=2}function c(t,e){return 1===i?t[e]:t.readUInt16BE(e*i)}if(a){var l=-1;for(s=n;s<o;s++)if(c(t,s)===c(e,-1===l?0:s-l)){if(-1===l&&(l=s),s-l+1===u)return l*i}else-1!==l&&(s-=s-l),l=-1}else for(n+u>o&&(n=o-u),s=n;s>=0;s--){for(var d=!0,h=0;h<u;h++)if(c(t,s+h)!==c(e,h)){d=!1;break}if(d)return s}return-1}function N(t,e,n,r){n=Number(n)||0;var a=t.length-n;r?(r=Number(r),r>a&&(r=a)):r=a;var s=e.length;if(s%2!==0)throw new TypeError("Invalid hex string");r>s/2&&(r=s/2);for(var i=0;i<r;++i){var o=parseInt(e.substr(2*i,2),16);if(isNaN(o))return i;t[n+i]=o}return i}function S(t,e,n,r){return tt(Y(e,t.length-n),t,n,r)}function C(t,e,n,r){return tt(Z(e),t,n,r)}function j(t,e,n,r){return C(t,e,n,r)}function T(t,e,n,r){return tt(Q(e),t,n,r)}function E(t,e,n,r){return tt(J(e,t.length-n),t,n,r)}function A(t,e,n){return 0===e&&n===t.length?r.fromByteArray(t):r.fromByteArray(t.slice(e,n))}function $(t,e,n){n=Math.min(t.length,n);var r=[],a=e;while(a<n){var s,i,o,u,c=t[a],l=null,d=c>239?4:c>223?3:c>191?2:1;if(a+d<=n)switch(d){case 1:c<128&&(l=c);break;case 2:s=t[a+1],128===(192&s)&&(u=(31&c)<<6|63&s,u>127&&(l=u));break;case 3:s=t[a+1],i=t[a+2],128===(192&s)&&128===(192&i)&&(u=(15&c)<<12|(63&s)<<6|63&i,u>2047&&(u<55296||u>57343)&&(l=u));break;case 4:s=t[a+1],i=t[a+2],o=t[a+3],128===(192&s)&&128===(192&i)&&128===(192&o)&&(u=(15&c)<<18|(63&s)<<12|(63&i)<<6|63&o,u>65535&&u<1114112&&(l=u))}null===l?(l=65533,d=1):l>65535&&(l-=65536,r.push(l>>>10&1023|55296),l=56320|1023&l),r.push(l),a+=d}return D(r)}e.Buffer=c,e.SlowBuffer=x,e.INSPECT_MAX_BYTES=50,c.TYPED_ARRAY_SUPPORT=void 0!==t.TYPED_ARRAY_SUPPORT?t.TYPED_ARRAY_SUPPORT:i(),e.kMaxLength=o(),c.poolSize=8192,c._augment=function(t){return t.__proto__=c.prototype,t},c.from=function(t,e,n){return l(null,t,e,n)},c.TYPED_ARRAY_SUPPORT&&(c.prototype.__proto__=Uint8Array.prototype,c.__proto__=Uint8Array,"undefined"!==typeof Symbol&&Symbol.species&&c[Symbol.species]===c&&Object.defineProperty(c,Symbol.species,{value:null,configurable:!0})),c.alloc=function(t,e,n){return h(null,t,e,n)},c.allocUnsafe=function(t){return p(null,t)},c.allocUnsafeSlow=function(t){return p(null,t)},c.isBuffer=function(t){return!(null==t||!t._isBuffer)},c.compare=function(t,e){if(!c.isBuffer(t)||!c.isBuffer(e))throw new TypeError("Arguments must be Buffers");if(t===e)return 0;for(var n=t.length,r=e.length,a=0,s=Math.min(n,r);a<s;++a)if(t[a]!==e[a]){n=t[a],r=e[a];break}return n<r?-1:r<n?1:0},c.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},c.concat=function(t,e){if(!s(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return c.alloc(0);var n;if(void 0===e)for(e=0,n=0;n<t.length;++n)e+=t[n].length;var r=c.allocUnsafe(e),a=0;for(n=0;n<t.length;++n){var i=t[n];if(!c.isBuffer(i))throw new TypeError('"list" argument must be an Array of Buffers');i.copy(r,a),a+=i.length}return r},c.byteLength=v,c.prototype._isBuffer=!0,c.prototype.swap16=function(){var t=this.length;if(t%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)k(this,e,e+1);return this},c.prototype.swap32=function(){var t=this.length;if(t%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)k(this,e,e+3),k(this,e+1,e+2);return this},c.prototype.swap64=function(){var t=this.length;if(t%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)k(this,e,e+7),k(this,e+1,e+6),k(this,e+2,e+5),k(this,e+3,e+4);return this},c.prototype.toString=function(){var t=0|this.length;return 0===t?"":0===arguments.length?$(this,0,t):w.apply(this,arguments)},c.prototype.equals=function(t){if(!c.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===c.compare(this,t)},c.prototype.inspect=function(){var t="",n=e.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(t+=" ... ")),"<Buffer "+t+">"},c.prototype.compare=function(t,e,n,r,a){if(!c.isBuffer(t))throw new TypeError("Argument must be a Buffer");if(void 0===e&&(e=0),void 0===n&&(n=t?t.length:0),void 0===r&&(r=0),void 0===a&&(a=this.length),e<0||n>t.length||r<0||a>this.length)throw new RangeError("out of range index");if(r>=a&&e>=n)return 0;if(r>=a)return-1;if(e>=n)return 1;if(e>>>=0,n>>>=0,r>>>=0,a>>>=0,this===t)return 0;for(var s=a-r,i=n-e,o=Math.min(s,i),u=this.slice(r,a),l=t.slice(e,n),d=0;d<o;++d)if(u[d]!==l[d]){s=u[d],i=l[d];break}return s<i?-1:i<s?1:0},c.prototype.includes=function(t,e,n){return-1!==this.indexOf(t,e,n)},c.prototype.indexOf=function(t,e,n){return O(this,t,e,n,!0)},c.prototype.lastIndexOf=function(t,e,n){return O(this,t,e,n,!1)},c.prototype.write=function(t,e,n,r){if(void 0===e)r="utf8",n=this.length,e=0;else if(void 0===n&&"string"===typeof e)r=e,n=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var a=this.length-e;if((void 0===n||n>a)&&(n=a),t.length>0&&(n<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var s=!1;;)switch(r){case"hex":return N(this,t,e,n);case"utf8":case"utf-8":return S(this,t,e,n);case"ascii":return C(this,t,e,n);case"latin1":case"binary":return j(this,t,e,n);case"base64":return T(this,t,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return E(this,t,e,n);default:if(s)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),s=!0}},c.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var R=4096;function D(t){var e=t.length;if(e<=R)return String.fromCharCode.apply(String,t);var n="",r=0;while(r<e)n+=String.fromCharCode.apply(String,t.slice(r,r+=R));return n}function F(t,e,n){var r="";n=Math.min(t.length,n);for(var a=e;a<n;++a)r+=String.fromCharCode(127&t[a]);return r}function _(t,e,n){var r="";n=Math.min(t.length,n);for(var a=e;a<n;++a)r+=String.fromCharCode(t[a]);return r}function M(t,e,n){var r=t.length;(!e||e<0)&&(e=0),(!n||n<0||n>r)&&(n=r);for(var a="",s=e;s<n;++s)a+=X(t[s]);return a}function z(t,e,n){for(var r=t.slice(e,n),a="",s=0;s<r.length;s+=2)a+=String.fromCharCode(r[s]+256*r[s+1]);return a}function L(t,e,n){if(t%1!==0||t<0)throw new RangeError("offset is not uint");if(t+e>n)throw new RangeError("Trying to access beyond buffer length")}function P(t,e,n,r,a,s){if(!c.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>a||e<s)throw new RangeError('"value" argument is out of bounds');if(n+r>t.length)throw new RangeError("Index out of range")}function B(t,e,n,r){e<0&&(e=65535+e+1);for(var a=0,s=Math.min(t.length-n,2);a<s;++a)t[n+a]=(e&255<<8*(r?a:1-a))>>>8*(r?a:1-a)}function W(t,e,n,r){e<0&&(e=4294967295+e+1);for(var a=0,s=Math.min(t.length-n,4);a<s;++a)t[n+a]=e>>>8*(r?a:3-a)&255}function V(t,e,n,r,a,s){if(n+r>t.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function U(t,e,n,r,s){return s||V(t,e,n,4,34028234663852886e22,-34028234663852886e22),a.write(t,e,n,r,23,4),n+4}function G(t,e,n,r,s){return s||V(t,e,n,8,17976931348623157e292,-17976931348623157e292),a.write(t,e,n,r,52,8),n+8}c.prototype.slice=function(t,e){var n,r=this.length;if(t=~~t,e=void 0===e?r:~~e,t<0?(t+=r,t<0&&(t=0)):t>r&&(t=r),e<0?(e+=r,e<0&&(e=0)):e>r&&(e=r),e<t&&(e=t),c.TYPED_ARRAY_SUPPORT)n=this.subarray(t,e),n.__proto__=c.prototype;else{var a=e-t;n=new c(a,void 0);for(var s=0;s<a;++s)n[s]=this[s+t]}return n},c.prototype.readUIntLE=function(t,e,n){t|=0,e|=0,n||L(t,e,this.length);var r=this[t],a=1,s=0;while(++s<e&&(a*=256))r+=this[t+s]*a;return r},c.prototype.readUIntBE=function(t,e,n){t|=0,e|=0,n||L(t,e,this.length);var r=this[t+--e],a=1;while(e>0&&(a*=256))r+=this[t+--e]*a;return r},c.prototype.readUInt8=function(t,e){return e||L(t,1,this.length),this[t]},c.prototype.readUInt16LE=function(t,e){return e||L(t,2,this.length),this[t]|this[t+1]<<8},c.prototype.readUInt16BE=function(t,e){return e||L(t,2,this.length),this[t]<<8|this[t+1]},c.prototype.readUInt32LE=function(t,e){return e||L(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},c.prototype.readUInt32BE=function(t,e){return e||L(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},c.prototype.readIntLE=function(t,e,n){t|=0,e|=0,n||L(t,e,this.length);var r=this[t],a=1,s=0;while(++s<e&&(a*=256))r+=this[t+s]*a;return a*=128,r>=a&&(r-=Math.pow(2,8*e)),r},c.prototype.readIntBE=function(t,e,n){t|=0,e|=0,n||L(t,e,this.length);var r=e,a=1,s=this[t+--r];while(r>0&&(a*=256))s+=this[t+--r]*a;return a*=128,s>=a&&(s-=Math.pow(2,8*e)),s},c.prototype.readInt8=function(t,e){return e||L(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},c.prototype.readInt16LE=function(t,e){e||L(t,2,this.length);var n=this[t]|this[t+1]<<8;return 32768&n?4294901760|n:n},c.prototype.readInt16BE=function(t,e){e||L(t,2,this.length);var n=this[t+1]|this[t]<<8;return 32768&n?4294901760|n:n},c.prototype.readInt32LE=function(t,e){return e||L(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},c.prototype.readInt32BE=function(t,e){return e||L(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},c.prototype.readFloatLE=function(t,e){return e||L(t,4,this.length),a.read(this,t,!0,23,4)},c.prototype.readFloatBE=function(t,e){return e||L(t,4,this.length),a.read(this,t,!1,23,4)},c.prototype.readDoubleLE=function(t,e){return e||L(t,8,this.length),a.read(this,t,!0,52,8)},c.prototype.readDoubleBE=function(t,e){return e||L(t,8,this.length),a.read(this,t,!1,52,8)},c.prototype.writeUIntLE=function(t,e,n,r){if(t=+t,e|=0,n|=0,!r){var a=Math.pow(2,8*n)-1;P(this,t,e,n,a,0)}var s=1,i=0;this[e]=255&t;while(++i<n&&(s*=256))this[e+i]=t/s&255;return e+n},c.prototype.writeUIntBE=function(t,e,n,r){if(t=+t,e|=0,n|=0,!r){var a=Math.pow(2,8*n)-1;P(this,t,e,n,a,0)}var s=n-1,i=1;this[e+s]=255&t;while(--s>=0&&(i*=256))this[e+s]=t/i&255;return e+n},c.prototype.writeUInt8=function(t,e,n){return t=+t,e|=0,n||P(this,t,e,1,255,0),c.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[e]=255&t,e+1},c.prototype.writeUInt16LE=function(t,e,n){return t=+t,e|=0,n||P(this,t,e,2,65535,0),c.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):B(this,t,e,!0),e+2},c.prototype.writeUInt16BE=function(t,e,n){return t=+t,e|=0,n||P(this,t,e,2,65535,0),c.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):B(this,t,e,!1),e+2},c.prototype.writeUInt32LE=function(t,e,n){return t=+t,e|=0,n||P(this,t,e,4,4294967295,0),c.TYPED_ARRAY_SUPPORT?(this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t):W(this,t,e,!0),e+4},c.prototype.writeUInt32BE=function(t,e,n){return t=+t,e|=0,n||P(this,t,e,4,4294967295,0),c.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):W(this,t,e,!1),e+4},c.prototype.writeIntLE=function(t,e,n,r){if(t=+t,e|=0,!r){var a=Math.pow(2,8*n-1);P(this,t,e,n,a-1,-a)}var s=0,i=1,o=0;this[e]=255&t;while(++s<n&&(i*=256))t<0&&0===o&&0!==this[e+s-1]&&(o=1),this[e+s]=(t/i>>0)-o&255;return e+n},c.prototype.writeIntBE=function(t,e,n,r){if(t=+t,e|=0,!r){var a=Math.pow(2,8*n-1);P(this,t,e,n,a-1,-a)}var s=n-1,i=1,o=0;this[e+s]=255&t;while(--s>=0&&(i*=256))t<0&&0===o&&0!==this[e+s+1]&&(o=1),this[e+s]=(t/i>>0)-o&255;return e+n},c.prototype.writeInt8=function(t,e,n){return t=+t,e|=0,n||P(this,t,e,1,127,-128),c.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),t<0&&(t=255+t+1),this[e]=255&t,e+1},c.prototype.writeInt16LE=function(t,e,n){return t=+t,e|=0,n||P(this,t,e,2,32767,-32768),c.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):B(this,t,e,!0),e+2},c.prototype.writeInt16BE=function(t,e,n){return t=+t,e|=0,n||P(this,t,e,2,32767,-32768),c.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):B(this,t,e,!1),e+2},c.prototype.writeInt32LE=function(t,e,n){return t=+t,e|=0,n||P(this,t,e,4,2147483647,-2147483648),c.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24):W(this,t,e,!0),e+4},c.prototype.writeInt32BE=function(t,e,n){return t=+t,e|=0,n||P(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),c.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):W(this,t,e,!1),e+4},c.prototype.writeFloatLE=function(t,e,n){return U(this,t,e,!0,n)},c.prototype.writeFloatBE=function(t,e,n){return U(this,t,e,!1,n)},c.prototype.writeDoubleLE=function(t,e,n){return G(this,t,e,!0,n)},c.prototype.writeDoubleBE=function(t,e,n){return G(this,t,e,!1,n)},c.prototype.copy=function(t,e,n,r){if(n||(n=0),r||0===r||(r=this.length),e>=t.length&&(e=t.length),e||(e=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),t.length-e<r-n&&(r=t.length-e+n);var a,s=r-n;if(this===t&&n<e&&e<r)for(a=s-1;a>=0;--a)t[a+e]=this[a+n];else if(s<1e3||!c.TYPED_ARRAY_SUPPORT)for(a=0;a<s;++a)t[a+e]=this[a+n];else Uint8Array.prototype.set.call(t,this.subarray(n,n+s),e);return s},c.prototype.fill=function(t,e,n,r){if("string"===typeof t){if("string"===typeof e?(r=e,e=0,n=this.length):"string"===typeof n&&(r=n,n=this.length),1===t.length){var a=t.charCodeAt(0);a<256&&(t=a)}if(void 0!==r&&"string"!==typeof r)throw new TypeError("encoding must be a string");if("string"===typeof r&&!c.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"===typeof t&&(t&=255);if(e<0||this.length<e||this.length<n)throw new RangeError("Out of range index");if(n<=e)return this;var s;if(e>>>=0,n=void 0===n?this.length:n>>>0,t||(t=0),"number"===typeof t)for(s=e;s<n;++s)this[s]=t;else{var i=c.isBuffer(t)?t:Y(new c(t,r).toString()),o=i.length;for(s=0;s<n-e;++s)this[s+e]=i[s%o]}return this};var H=/[^+\/0-9A-Za-z-_]/g;function q(t){if(t=K(t).replace(H,""),t.length<2)return"";while(t.length%4!==0)t+="=";return t}function K(t){return t.trim?t.trim():t.replace(/^\s+|\s+$/g,"")}function X(t){return t<16?"0"+t.toString(16):t.toString(16)}function Y(t,e){var n;e=e||1/0;for(var r=t.length,a=null,s=[],i=0;i<r;++i){if(n=t.charCodeAt(i),n>55295&&n<57344){if(!a){if(n>56319){(e-=3)>-1&&s.push(239,191,189);continue}if(i+1===r){(e-=3)>-1&&s.push(239,191,189);continue}a=n;continue}if(n<56320){(e-=3)>-1&&s.push(239,191,189),a=n;continue}n=65536+(a-55296<<10|n-56320)}else a&&(e-=3)>-1&&s.push(239,191,189);if(a=null,n<128){if((e-=1)<0)break;s.push(n)}else if(n<2048){if((e-=2)<0)break;s.push(n>>6|192,63&n|128)}else if(n<65536){if((e-=3)<0)break;s.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;s.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return s}function Z(t){for(var e=[],n=0;n<t.length;++n)e.push(255&t.charCodeAt(n));return e}function J(t,e){for(var n,r,a,s=[],i=0;i<t.length;++i){if((e-=2)<0)break;n=t.charCodeAt(i),r=n>>8,a=n%256,s.push(a),s.push(r)}return s}function Q(t){return r.toByteArray(q(t))}function tt(t,e,n,r){for(var a=0;a<r;++a){if(a+n>=e.length||a>=t.length)break;e[a+n]=t[a]}return a}function et(t){return t!==t}}).call(this,n("c8ba"))},b818:function(t,e,n){"use strict";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(t,e,n,r,a="NHWC",s){const o=t[3],u=[...e,o],c=x(a);return i(t,u,n,s,r,null,null,c)}function a(t,e,n,r,a,s,o="channelsLast"){const[u,c]=d(e);let l;if("channelsLast"===o)l=[u,c,t[3],t[3]];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);l=[u,c,t[1],t[1]]}return i(t,l,n,r,a,s,!1,o)}function s(t,e,n,r,a,s,i="NDHWC"){const[u,c,l]=h(e);let d,p;if("NDHWC"===i)p="channelsLast",d=[u,c,l,t[4],t[4]];else{if("NCDHW"!==i)throw new Error("Unknown dataFormat "+i);p="channelsFirst",d=[u,c,l,t[1],t[1]]}return o(t,d,n,r,a,!1,p,s)}function i(t,e,n,r,a,s,i=!1,o="channelsLast"){let[u,c,l,h]=[-1,-1,-1,-1];if("channelsLast"===o)[u,c,l,h]=t;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);[u,h,c,l]=t}const[m,b,,g]=e,[y,x]=d(n),[v,w]=d(r),k=p(m,v),O=p(b,w),{padInfo:I,outHeight:N,outWidth:S}=f(a,c,l,y,x,k,O,s,o),C=i?g*h:g;let j;return"channelsFirst"===o?j=[u,C,N,S]:"channelsLast"===o&&(j=[u,N,S,C]),{batchSize:u,dataFormat:o,inHeight:c,inWidth:l,inChannels:h,outHeight:N,outWidth:S,outChannels:C,padInfo:I,strideHeight:y,strideWidth:x,filterHeight:m,filterWidth:b,effectiveFilterHeight:k,effectiveFilterWidth:O,dilationHeight:v,dilationWidth:w,inShape:t,outShape:j,filterShape:e}}function o(t,e,n,r,a,s=!1,i="channelsLast",o){let[u,c,l,d,f]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,c,l,d,f]=t;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);[u,f,c,l,d]=t}const[b,g,y,,x]=e,[v,w,k]=h(n),[O,I,N]=h(r),S=p(b,O),C=p(g,I),j=p(y,N),{padInfo:T,outDepth:E,outHeight:A,outWidth:$}=m(a,c,l,d,v,w,k,S,C,j,o),R=s?x*f:x;let D;return"channelsFirst"===i?D=[u,R,E,A,$]:"channelsLast"===i&&(D=[u,E,A,$,R]),{batchSize:u,dataFormat:i,inDepth:c,inHeight:l,inWidth:d,inChannels:f,outDepth:E,outHeight:A,outWidth:$,outChannels:R,padInfo:T,strideDepth:v,strideHeight:w,strideWidth:k,filterDepth:b,filterHeight:g,filterWidth:y,effectiveFilterDepth:S,effectiveFilterHeight:C,effectiveFilterWidth:j,dilationDepth:O,dilationHeight:I,dilationWidth:N,inShape:t,outShape:D,filterShape:e}}function u(t,e,n,r,a){null==r&&(r=l(t,e,n));const s=t[0],i=t[1],o=b((s-e+2*r)/n+1,a),u=b((i-e+2*r)/n+1,a);return[o,u]}function c(t,e,n,r,a,s){null==a&&(a=l(t,e,r));const i=t[0],o=t[1],u=t[2],c=b((i-e+2*a)/r+1,s),d=b((o-e+2*a)/r+1,s),h=b((u-e+2*a)/r+1,s);return[c,d,h,n]}function l(t,e,n,r=1){const a=p(e,r);return Math.floor((t[0]*(n-1)-n+a)/2)}function d(t){return"number"===typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function h(t){return"number"===typeof t?[t,t,t]:t}function p(t,e){return e<=1?t:t+(t-1)*(e-1)}function f(t,e,n,r,a,s,i,o,c){let l,d,h;if("number"===typeof t){const a=0===t?"VALID":"NUMBER";l={top:t,bottom:t,left:t,right:t,type:a};const i=u([e,n],s,r,t,o);d=i[0],h=i[1]}else if("same"===t){d=Math.ceil(e/r),h=Math.ceil(n/a);const t=Math.max(0,(d-1)*r+s-e),o=Math.max(0,(h-1)*a+i-n),u=Math.floor(t/2),c=t-u,p=Math.floor(o/2),f=o-p;l={top:u,bottom:c,left:p,right:f,type:"SAME"}}else if("valid"===t)l={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((e-s+1)/r),h=Math.ceil((n-i+1)/a);else{if("object"!==typeof t)throw Error("Unknown padding parameter: "+t);{const u="channelsLast"===c?t[1][0]:t[2][0],p="channelsLast"===c?t[1][1]:t[2][1],f="channelsLast"===c?t[2][0]:t[3][0],m="channelsLast"===c?t[2][1]:t[3][1],g=0===u&&0===p&&0===f&&0===m?"VALID":"EXPLICIT";l={top:u,bottom:p,left:f,right:m,type:g},d=b((e-s+u+p)/r+1,o),h=b((n-i+f+m)/a+1,o)}}return{padInfo:l,outHeight:d,outWidth:h}}function m(t,e,n,r,a,s,i,o,u,l,d){let h,p,f,m;if("number"===typeof t){const s=0===t?"VALID":"NUMBER";h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:s};const i=c([e,n,r,1],o,1,a,t,d);p=i[0],f=i[1],m=i[2]}else if("same"===t){p=Math.ceil(e/a),f=Math.ceil(n/s),m=Math.ceil(r/i);const t=(p-1)*a+o-e,c=(f-1)*s+u-n,d=(m-1)*i+l-r,b=Math.floor(t/2),g=t-b,y=Math.floor(c/2),x=c-y,v=Math.floor(d/2),w=d-v;h={top:y,bottom:x,left:v,right:w,front:b,back:g,type:"SAME"}}else{if("valid"!==t)throw Error("Unknown padding parameter: "+t);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((e-o+1)/a),f=Math.ceil((n-u+1)/s),m=Math.ceil((r-l+1)/i)}return{padInfo:h,outDepth:p,outHeight:f,outWidth:m}}function b(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error("Unknown roundingMode "+e)}}function g(t){const[e,n,r]=d(t);return 1===e&&1===n&&1===r}function y(t,e){return g(t)||g(e)}function x(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error("Unknown dataFormat "+t)}n.d(e,"d",(function(){return r})),n.d(e,"e",(function(){return a})),n.d(e,"f",(function(){return s})),n.d(e,"a",(function(){return i})),n.d(e,"b",(function(){return o})),n.d(e,"c",(function(){return l})),n.d(e,"i",(function(){return g})),n.d(e,"h",(function(){return y})),n.d(e,"g",(function(){return x}))},b838:function(t,e,n){(function(t){var r;(function(t,a,s){function i(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function u(t,e){var n=new i(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=n.next()>>>11,e=(n.next()>>>0)/4294967296,r=(t+e)/(1<<21)}while(0===r);return r},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("07d6")&&n("3c35")?(r=function(){return u}.call(e,n,e,a),void 0===r||(a.exports=r)):this.xor128=u})(0,t,n("07d6"))}).call(this,n("62e4")(t))},b9b9:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),i=n("a3f7"),o=n("526f"),u=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(t,e){let n=Object(i["a"])(t,"a","equal"),u=Object(i["a"])(e,"b","equal");[n,u]=Object(s["makeTypesMatch"])(n,u),Object(o["a"])(n.shape,u.shape);const c={a:n,b:u};return r["a"].runKernel(a["X"],c)}const l=Object(u["b"])({equal_:c})},ba40:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t,e){const n=Object(s["a"])(e,"indices","gatherND","int32"),i=Object(s["a"])(t,"x","gatherND"),o={params:i,indices:n};return r["a"].runKernel(a["lb"],o)}const u=Object(i["b"])({gatherND_:o})},ba53:function(t,e,n){"use strict";n.d(e,"a",(function(){return p}));var r=n("6ae2"),a=n("c04e4"),s=n("c05b"),i=n("a3f7"),o=n("6ad5"),u=n("deb3"),c=n("b818"),l=n("54ef"),d=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function h(t,e,n,l,h,p="NDHWC",f){null==f?f=[1,1,1]:Object(a["b"])("dilations is deprecated, this field will be gone in v3.0.0.");const m=Object(i["a"])(t,"x","avgPool3d","float32");let b=m,g=!1;4===m.rank&&(g=!0,b=Object(d["a"])(m,[1,m.shape[0],m.shape[1],m.shape[2],m.shape[3]])),o["b"](5===b.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${b.rank}.`),o["b"]("NDHWC"===p,()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+p),o["b"](c["h"](n,f),()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${f}'`),null!=h&&o["b"](o["v"](l),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${h} but got pad ${l}.`);const y={x:b},x={filterSize:e,strides:n,pad:l,dimRoundingMode:h,dataFormat:p,dilations:f};let v=r["a"].runKernel(s["p"],y,x);return v=Object(u["a"])(v,b.dtype),g?Object(d["a"])(v,[v.shape[1],v.shape[2],v.shape[3],v.shape[4]]):v}const p=Object(l["b"])({avgPool3d_:h})},bb2d:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),i=n("a3f7"),o=n("526f"),u=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(t,e){let n=Object(i["a"])(t,"a","greaterEqual"),u=Object(i["a"])(e,"b","greaterEqual");[n,u]=Object(s["makeTypesMatch"])(n,u),Object(o["a"])(n.shape,u.shape);const c={a:n,b:u};return r["a"].runKernel(a["ob"],c)}const l=Object(u["b"])({greaterEqual_:c})},bc62:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b");function s(t,e,n,r){if("int32"!==t.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const a=t.rank>0?t.shape[0]:1,s=t.rank>1?t.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const i=e.size;if(0!==e.rank&&(1!==e.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${a}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}var i=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e,n,o=0){const u=Object(i["a"])(t,"sparseIndices","sparseToDense","int32"),c=Object(i["a"])(e,"sparseValues","sparseToDense"),l=Object(i["a"])(o,"defaultValue","sparseToDense",c.dtype);s(u,c,n,l);const d={sparseIndices:u,sparseValues:c,defaultValue:l},h={outputShape:n};return r["a"].runKernel(a["Ic"],d,h)}const c=Object(o["b"])({sparseToDense_:u})},bdcf:function(t,e,n){"use strict";n.d(e,"b",(function(){return a})),n.d(e,"d",(function(){return i})),n.d(e,"f",(function(){return u})),n.d(e,"c",(function(){return c})),n.d(e,"e",(function(){return l})),n.d(e,"a",(function(){return d}));var r=n("fa11");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function a(t,e){return s(t,e)}function s(t,e,n=new Map,r=new Set){if(null==t)return null;if(r.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const a=e(t);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(l(t)){const a=Array.isArray(t)?[]:{};r.add(t);for(const i in t){const o=t[i],u=s(o,e,n,r);a[i]=u}return r.delete(t),a}throw new Error("Can't recurse into non-iterable type: "+t)}return n.set(t,a.value),a.value}function i(t,e=u){return o(t,e)}function o(t,e,n=new Set){const r=t[0];if(n.has(r))throw new Error("Circular references are not supported.");const a=e(t);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(l(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const s in r){const r=t.map(t=>t[s]),i=o(r,e,n);a[s]=i}return n.delete(r),a}throw new Error("Can't recurse into non-iterable type: "+r)}return a.value}function u(t){return null===t?null:l(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}async function c(t,e){const n=new Map;s(t,e,n);for(const s of Array.from(n.keys())){const t=n.get(s);if(r["util"].isPromise(t)){const e=await t;n.set(s,e)}}const a=s(t,e,n);return a}function l(t){return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"===typeof t&&!(t instanceof r["Tensor"]))}function d(t){return null==t||h(t)||Array.isArray(t)||"object"===typeof t&&t instanceof r["Tensor"]||r["util"].isTypedArray(t)}function h(t){return null===t||"object"!==typeof t&&"function"!==typeof t}},c021:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t,e=null,n=!1){const i=Object(s["a"])(t,"x","max"),o={x:i},u={reductionIndices:e,keepDims:n};return r["a"].runKernel(a["Hb"],o,u)}const u=Object(i["b"])({max_:o})},c04e4:function(t,e,n){"use strict";n.d(e,"g",(function(){return o})),n.d(e,"f",(function(){return u})),n.d(e,"c",(function(){return c})),n.d(e,"b",(function(){return l})),n.d(e,"e",(function(){return d})),n.d(e,"h",(function(){return h})),n.d(e,"m",(function(){return p})),n.d(e,"n",(function(){return f})),n.d(e,"t",(function(){return m})),n.d(e,"d",(function(){return b})),n.d(e,"l",(function(){return g})),n.d(e,"u",(function(){return y})),n.d(e,"r",(function(){return x})),n.d(e,"o",(function(){return v})),n.d(e,"k",(function(){return w})),n.d(e,"q",(function(){return k})),n.d(e,"i",(function(){return O})),n.d(e,"j",(function(){return I})),n.d(e,"p",(function(){return N})),n.d(e,"a",(function(){return S})),n.d(e,"s",(function(){return C}));var r=n("6ae2"),a=n("b333"),s=n("34d7"),i=n("76c2");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(){Object(a["c"])().set("PROD",!0)}function u(){Object(a["c"])().set("DEBUG",!0)}function c(){Object(a["c"])().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function l(t){Object(a["c"])().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function d(){r["a"].disposeVariables()}function h(){return r["a"]}function p(){return r["a"].memory()}function f(t){return r["a"].profile(t)}function m(t,e){return r["a"].tidy(t,e)}function b(t){const e=Object(i["getTensorsInContainer"])(t);e.forEach(t=>t.dispose())}function g(t){return r["a"].keep(t)}function y(t){return r["a"].time(t)}function x(t){return r["a"].setBackend(t)}function v(){return r["a"].ready()}function w(){return r["a"].backendName}function k(t){r["a"].removeBackend(t)}function O(t){return r["a"].findBackend(t)}function I(t){return r["a"].findBackendFactory(t)}function N(t,e,n=1){return r["a"].registerBackend(t,e,n)}function S(){return r["a"].backend}function C(t,e){Object(a["c"])().setPlatform(t,e)}Object(s["d"])(l)},c05b:function(t,e,n){"use strict";n.d(e,"a",(function(){return r})),n.d(e,"b",(function(){return a})),n.d(e,"c",(function(){return s})),n.d(e,"d",(function(){return i})),n.d(e,"e",(function(){return o})),n.d(e,"f",(function(){return u})),n.d(e,"g",(function(){return c})),n.d(e,"h",(function(){return l})),n.d(e,"i",(function(){return d})),n.d(e,"j",(function(){return h})),n.d(e,"k",(function(){return p})),n.d(e,"l",(function(){return f})),n.d(e,"n",(function(){return m})),n.d(e,"m",(function(){return b})),n.d(e,"o",(function(){return g})),n.d(e,"r",(function(){return y})),n.d(e,"p",(function(){return x})),n.d(e,"q",(function(){return v})),n.d(e,"s",(function(){return w})),n.d(e,"t",(function(){return k})),n.d(e,"u",(function(){return O})),n.d(e,"v",(function(){return I})),n.d(e,"w",(function(){return N})),n.d(e,"x",(function(){return S})),n.d(e,"y",(function(){return C})),n.d(e,"z",(function(){return j})),n.d(e,"A",(function(){return T})),n.d(e,"B",(function(){return E})),n.d(e,"C",(function(){return A})),n.d(e,"D",(function(){return $})),n.d(e,"E",(function(){return R})),n.d(e,"F",(function(){return D})),n.d(e,"G",(function(){return F})),n.d(e,"H",(function(){return _})),n.d(e,"I",(function(){return M})),n.d(e,"J",(function(){return z})),n.d(e,"L",(function(){return L})),n.d(e,"K",(function(){return P})),n.d(e,"M",(function(){return B})),n.d(e,"N",(function(){return W})),n.d(e,"O",(function(){return V})),n.d(e,"P",(function(){return U})),n.d(e,"Q",(function(){return G})),n.d(e,"R",(function(){return H})),n.d(e,"S",(function(){return q})),n.d(e,"U",(function(){return K})),n.d(e,"T",(function(){return X})),n.d(e,"kc",(function(){return Y})),n.d(e,"V",(function(){return Z})),n.d(e,"W",(function(){return J})),n.d(e,"Y",(function(){return Q})),n.d(e,"X",(function(){return tt})),n.d(e,"Z",(function(){return et})),n.d(e,"ab",(function(){return nt})),n.d(e,"bb",(function(){return rt})),n.d(e,"cb",(function(){return at})),n.d(e,"db",(function(){return st})),n.d(e,"eb",(function(){return it})),n.d(e,"fb",(function(){return ot})),n.d(e,"gb",(function(){return ut})),n.d(e,"ib",(function(){return ct})),n.d(e,"mb",(function(){return lt})),n.d(e,"lb",(function(){return dt})),n.d(e,"nb",(function(){return ht})),n.d(e,"ob",(function(){return pt})),n.d(e,"qb",(function(){return ft})),n.d(e,"pb",(function(){return mt})),n.d(e,"rb",(function(){return bt})),n.d(e,"sb",(function(){return gt})),n.d(e,"tb",(function(){return yt})),n.d(e,"ub",(function(){return xt})),n.d(e,"xb",(function(){return vt})),n.d(e,"yb",(function(){return wt})),n.d(e,"zb",(function(){return kt})),n.d(e,"Ab",(function(){return Ot})),n.d(e,"Bb",(function(){return It})),n.d(e,"Cb",(function(){return Nt})),n.d(e,"Eb",(function(){return St})),n.d(e,"Fb",(function(){return Ct})),n.d(e,"Gb",(function(){return jt})),n.d(e,"Db",(function(){return Tt})),n.d(e,"vb",(function(){return Et})),n.d(e,"wb",(function(){return At})),n.d(e,"Hb",(function(){return $t})),n.d(e,"Nb",(function(){return Rt})),n.d(e,"Ib",(function(){return Dt})),n.d(e,"Lb",(function(){return Ft})),n.d(e,"Jb",(function(){return _t})),n.d(e,"Kb",(function(){return Mt})),n.d(e,"Mb",(function(){return zt})),n.d(e,"Ob",(function(){return Lt})),n.d(e,"Pb",(function(){return Pt})),n.d(e,"Qb",(function(){return Bt})),n.d(e,"Rb",(function(){return Wt})),n.d(e,"Sb",(function(){return Vt})),n.d(e,"Tb",(function(){return Ut})),n.d(e,"Ub",(function(){return Gt})),n.d(e,"Vb",(function(){return Ht})),n.d(e,"Zb",(function(){return qt})),n.d(e,"Wb",(function(){return Kt})),n.d(e,"Xb",(function(){return Xt})),n.d(e,"Yb",(function(){return Yt})),n.d(e,"bc",(function(){return Zt})),n.d(e,"ac",(function(){return Jt})),n.d(e,"cc",(function(){return Qt})),n.d(e,"dc",(function(){return te})),n.d(e,"ec",(function(){return ee})),n.d(e,"fc",(function(){return ne})),n.d(e,"gc",(function(){return re})),n.d(e,"hc",(function(){return ae})),n.d(e,"ic",(function(){return se})),n.d(e,"jc",(function(){return ie})),n.d(e,"lc",(function(){return oe})),n.d(e,"mc",(function(){return ue})),n.d(e,"oc",(function(){return ce})),n.d(e,"rc",(function(){return le})),n.d(e,"sc",(function(){return de})),n.d(e,"pc",(function(){return he})),n.d(e,"qc",(function(){return pe})),n.d(e,"nc",(function(){return fe})),n.d(e,"tc",(function(){return me})),n.d(e,"vc",(function(){return be})),n.d(e,"wc",(function(){return ge})),n.d(e,"xc",(function(){return ye})),n.d(e,"yc",(function(){return xe})),n.d(e,"zc",(function(){return ve})),n.d(e,"Ec",(function(){return we})),n.d(e,"Cc",(function(){return ke})),n.d(e,"Dc",(function(){return Oe})),n.d(e,"Bc",(function(){return Ie})),n.d(e,"Ac",(function(){return Ne})),n.d(e,"Gc",(function(){return Se})),n.d(e,"Kc",(function(){return Ce})),n.d(e,"Qc",(function(){return je})),n.d(e,"Hc",(function(){return Te})),n.d(e,"Jc",(function(){return Ee})),n.d(e,"Fc",(function(){return Ae})),n.d(e,"Mc",(function(){return $e})),n.d(e,"Lc",(function(){return Re})),n.d(e,"Pc",(function(){return De})),n.d(e,"Ic",(function(){return Fe})),n.d(e,"Oc",(function(){return _e})),n.d(e,"Rc",(function(){return Me})),n.d(e,"Sc",(function(){return ze})),n.d(e,"Tc",(function(){return Le})),n.d(e,"Uc",(function(){return Pe})),n.d(e,"Vc",(function(){return Be})),n.d(e,"Wc",(function(){return We})),n.d(e,"Xc",(function(){return Ve})),n.d(e,"Yc",(function(){return Ue})),n.d(e,"Zc",(function(){return Ge})),n.d(e,"Nc",(function(){return He})),n.d(e,"hb",(function(){return qe})),n.d(e,"uc",(function(){return Ke})),n.d(e,"ad",(function(){return Xe})),n.d(e,"jb",(function(){return Ye})),n.d(e,"kb",(function(){return Ze}));const r="Abs",a="Acos",s="Acosh",i="Add",o="AddN",u="All",c="Any",l="ArgMax",d="ArgMin",h="Asin",p="Asinh",f="Atan",m="Atanh",b="Atan2",g="AvgPool",y="AvgPoolGrad",x="AvgPool3D",v="AvgPool3DGrad",w="BatchMatMul",k="BatchToSpaceND",O="Bincount",I="BroadcastTo",N="Cast",S="Ceil",C="ClipByValue",j="Complex",T="ComplexAbs",E="Concat",A="Conv2D",$="Conv2DBackpropFilter",R="Conv2DBackpropInput",D="Conv3D",F="Conv3DBackpropFilterV2",_="Conv3DBackpropInputV2",M="Cos",z="Cosh",L="Cumsum",P="CropAndResize",B="DenseBincount",W="DepthToSpace",V="DepthwiseConv2dNative",U="DepthwiseConv2dNativeBackpropFilter",G="DepthwiseConv2dNativeBackpropInput",H="Diag",q="Dilation2D",K="Dilation2DBackpropInput",X="Dilation2DBackpropFilter",Y="RealDiv",Z="Elu",J="EluGrad",Q="Erf",tt="Equal",et="Exp",nt="ExpandDims",rt="Expm1",at="FFT",st="Fill",it="FlipLeftRight",ot="Floor",ut="FloorDiv",ct="FusedBatchNorm",lt="GatherV2",dt="GatherNd",ht="Greater",pt="GreaterEqual",ft="Identity",mt="IFFT",bt="Imag",gt="IsFinite",yt="IsInf",xt="IsNan",vt="LeakyRelu",wt="Less",kt="LessEqual",Ot="LinSpace",It="Log",Nt="Log1p",St="LogicalAnd",Ct="LogicalNot",jt="LogicalOr",Tt="LogSoftmax",Et="LRN",At="LRNGrad",$t="Max",Rt="Maximum",Dt="MaxPool",Ft="MaxPoolGrad",_t="MaxPool3D",Mt="MaxPool3DGrad",zt="MaxPoolWithArgmax",Lt="Mean",Pt="Min",Bt="Minimum",Wt="MirrorPad",Vt="Mod",Ut="Multinomial",Gt="Multiply",Ht="Neg",qt="NotEqual",Kt="NonMaxSuppressionV3",Xt="NonMaxSuppressionV4",Yt="NonMaxSuppressionV5",Zt="OnesLike",Jt="OneHot",Qt="Pack",te="PadV2",ee="Pool",ne="Pow",re="Prelu",ae="Prod",se="Range",ie="Real",oe="Reciprocal",ue="Relu",ce="Reshape",le="ResizeNearestNeighbor",de="ResizeNearestNeighborGrad",he="ResizeBilinear",pe="ResizeBilinearGrad",fe="Relu6",me="Reverse",be="Round",ge="Rsqrt",ye="ScatterNd",xe="Select",ve="Selu",we="Slice",ke="Sin",Oe="Sinh",Ie="Sign",Ne="Sigmoid",Se="Softplus",Ce="Sqrt",je="Sum",Te="SpaceToBatchND",Ee="SplitV",Ae="Softmax",$e="SquaredDifference",Re="Square",De="Sub",Fe="SparseToDense",_e="StridedSlice",Me="Tan",ze="Tanh",Le="Tile",Pe="TopK",Be="Transpose",We="Unique",Ve="Unpack",Ue="UnsortedSegmentSum",Ge="ZerosLike",He="Step",qe="FromPixels",Ke="RotateWithOffset",Xe="_FusedMatMul",Ye="FusedConv2D",Ze="FusedDepthwiseConv2D"},c08f:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("6ad5"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e,n){const o=Object(s["a"])(t,"x","clipByValue");i["b"](e<=n,()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`);const u={x:o},c={clipValueMin:e,clipValueMax:n};return r["a"].runKernel(a["y"],u,c)}const c=Object(o["b"])({clipByValue_:u})},c170:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("6ad5"),o=n("54ef"),u=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(t,e,n,o,c=[1,1],l="NHWC"){const d=Object(s["a"])(t,"x","dilation2d"),h=Object(s["a"])(e,"filter","dilation2d");i["b"](3===d.rank||4===d.rank,()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+d.rank+"."),i["b"](3===h.rank,()=>"Error in dilation2d: filter must be rank 3, but got rank "+h.rank+"."),i["b"]("NHWC"===l,()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+l);let p=d,f=!1;3===d.rank&&(p=Object(u["a"])(d,[1,d.shape[0],d.shape[1],d.shape[2]]),f=!0);const m={x:p,filter:h},b={strides:n,pad:o,dilations:c},g=r["a"].runKernel(a["S"],m,b);return f?Object(u["a"])(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const l=Object(o["b"])({dilation2d_:c})},c1a2:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","cosh"),n={x:e};return r["a"].runKernel(a["J"],n)}const u=Object(i["b"])({cosh_:o})},c22a:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("6ae2"),a=n("6ad5"),s=n("0777"),i=n("5a2c");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t,e="float32"){if("complex64"===e){const e=o(t,"float32"),n=Object(i["a"])(t,"float32");return Object(s["a"])(e,n)}const n=Object(a["D"])(Object(a["N"])(t),e);return r["a"].makeTensor(n,t,e)}},c314:function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n("538e"),a=n("a3f7"),s=n("a5aa"),i=n("3bb7"),o=n("54ef"),u=n("ffb3"),c=n("9ffd");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function l(t){const e=Object(a["a"])(t,"x","logSigmoid"),n=Object(r["a"])(t=>{const e=Object(i["a"])(Object(c["a"])(Object(i["a"])(t))),n=e=>{const n=Object(s["a"])(e,Object(u["a"])(Object(i["a"])(t)));return n};return{value:e,gradFunc:n}});return n(e)}const d=Object(o["b"])({logSigmoid_:l})},c388:function(t,e,n){"use strict";n.d(e,"f",(function(){return d})),n.d(e,"e",(function(){return h})),n.d(e,"d",(function(){return p})),n.d(e,"g",(function(){return f})),n.d(e,"a",(function(){return m})),n.d(e,"b",(function(){return S})),n.d(e,"c",(function(){return r}));var r,a=n("fa11"),s=n("6125"),i=n("bdcf");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
function o(t){return Object(i["b"])(t,u)}function u(t){return t instanceof a["Tensor"]?{value:t.clone(),recurse:!1}:Object(i["e"])(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class c{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){while(t<0)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class l extends c{constructor(){super(l.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let r=0;r<n;r++)e[r]=this.get(this.wrap(this.begin+r));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
function d(t){return new b(t)}function h(t){return new g(t)}function p(t,e){return new j(t,e)}function f(t,e=r.FAIL){return new T(t,e)}l.INITIAL_CAPACITY=32;class m{async toArray(){const t=[];let e=await this.next();while(!e.done)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();while(!n.done)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();while(!t.done)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);while(!e.done&&n)e=await this.next(),n=t(e.value)}handleErrors(t){return new I(this,t)}filter(t){return new k(this,t)}map(t){return new O(this,t)}mapAsync(t){return new N(this,t)}serialMapAsync(t){return new N(this,t).serial()}flatmap(t){return new C(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile(t=>!0===t)}rowMajorBatch(t,e=!0){return new w(this,t,e)}columnMajorBatch(t,e=!0,n=i["f"]){const r=this.rowMajorBatch(t,e);return r.map(t=>Object(i["d"])(t,n))}concatenate(t,e){return new j(d([this,t]),e)}take(t){return t<0||null==t?this:new v(this,t)}skip(t){return t<0||null==t?this:new x(this,t)}prefetch(t){return new E(this,t)}shuffle(t,e){return new A(this,t,e)}serial(){return new y(this)}}class b extends m{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:o(t),done:!1}}}class g extends m{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message="Error thrown while iterating through a dataset: "+t.message,t}}}class y extends m{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Serial"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class x extends m{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Skip"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){while(this.count++<this.maxCount){const t=await this.upstream.next();if(t.done)return t;a["dispose"](t.value)}return this.upstream.next()}}class v extends m{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return this.upstream.summary()+" -> Take"}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class w extends m{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> RowMajorBatch"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const t=[];while(t.length<this.batchSize){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class k extends m{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Filter"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){while(1){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;a["dispose"](t.value)}}}class O extends m{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> Map"}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=a["tensor_util"].getTensorsInContainer(t.value),n=this.transform(t.value),r=a["tensor_util"].getTensorsInContainer(n);for(const s of e)a["tensor_util"].isTensorInList(s,r)||s.dispose();return{value:n,done:!1}}}class I extends m{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> handleErrors"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){while(1)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class N extends m{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> AsyncMap"}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=a["tensor_util"].getTensorsInContainer(t.value),n=await this.transform(t.value),r=a["tensor_util"].getTensorsInContainer(n);for(const s of e)a["tensor_util"].isTensorInList(s,r)||s.dispose();return{value:n,done:!1}}}class S extends m{constructor(){super(),this.outputQueue=new l,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){while(0===this.outputQueue.length())if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class C extends S{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> Flatmap"}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=a["tensor_util"].getTensorsInContainer(t.value),n=this.transform(t.value),r=a["tensor_util"].getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const s of e)a["tensor_util"].isTensorInList(s,r)||s.dispose();return!0}}class j extends m{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){const t="TODO: fill in upstream of chained summaries";return t+" -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}(function(t){t[t["FAIL"]=0]="FAIL",t[t["SHORTEST"]=1]="SHORTEST",t[t["LONGEST"]=2]="LONGEST"})(r||(r={}));class T extends m{constructor(t,e=r.FAIL){super(),this.iterators=t,this.mismatchMode=e,this.count=0,this.currentPromise=null}summary(){const t="TODO: fill in upstream of zip summaries";return`{${t}} -> Zip`}async nextState(t){await t;let e=0,n=0;function a(t){if(t instanceof m){const r=t.next();return{value:r.then(t=>(e++,t.done&&n++,t.value)),recurse:!1}}return{value:null,recurse:!0}}const s=await Object(i["c"])(this.iterators,a);if(e===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case r.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case r.SHORTEST:return{value:null,done:!0};case r.LONGEST:default:}return this.count++,{value:s,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class E extends m{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new c(e)}summary(){return this.upstream.summary()+" -> Prefetch"}refill(){while(!this.buffer.isFull()){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class A extends E{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=s["alea"](n||a["util"].now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){this.upstreamExhausted||this.refill();while(!this.buffer.isEmpty()){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}},c77c:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),i=n("a3f7"),o=n("508f"),u=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(t,e){let n=Object(i["a"])(t,"a","div"),u=Object(i["a"])(e,"b","div");if([n,u]=Object(s["makeTypesMatch"])(n,u),"int32"===n.dtype&&"int32"===u.dtype)return Object(o["a"])(n,u);const c={a:n,b:u},l={};return r["a"].runKernel(a["kc"],c,l)}const l=Object(u["b"])({div_:c})},c8ad:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},c912:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("6ad5"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e){const n=Object(s["a"])(t,"x","transpose");if(null==e&&(e=n.shape.map((t,e)=>e).reverse()),i["b"](n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`),e.forEach(t=>{i["b"](t>=0&&t<n.rank,()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+e)}),n.rank<=1)return n.clone();const o={x:n},u={perm:e};return r["a"].runKernel(a["Vc"],o,u)}const c=Object(o["b"])({transpose_:u})},c9f1:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),i=n("a3f7"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e){let n=Object(i["a"])(t,"base","pow"),o=Object(i["a"])(e,"exp","pow");[n,o]=Object(s["makeTypesMatch"])(n,o);const u={a:n,b:o};return r["a"].runKernel(a["fc"],u)}const c=Object(o["b"])({pow_:u})},cae0:function(t,e,n){(function(t){var r;(function(t,a,s){function i(t){var e=this;function n(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;while(r.length<8)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}e.next=function(){var t,n,r=e.x,a=e.i;return t=r[a],t^=t>>>7,n=t^t<<24,t=r[a+1&7],n^=t^t>>>10,t=r[a+3&7],n^=t^t>>>3,t=r[a+4&7],n^=t^t<<7,t=r[a+7&7],t^=t<<13,n^=t^t<<9,r[a]=n,e.i=a+1&7,n},n(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function u(t,e){null==t&&(t=+new Date);var n=new i(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=n.next()>>>11,e=(n.next()>>>0)/4294967296,r=(t+e)/(1<<21)}while(0===r);return r},a.int32=n.next,a.quick=a,r&&(r.x&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("07d6")&&n("3c35")?(r=function(){return u}.call(e,n,e,a),void 0===r||(a.exports=r)):this.xorshift7=u})(0,t,n("07d6"))}).call(this,n("62e4")(t))},ccb1:function(t,e,n){"use strict";n.d(e,"a",(function(){return N})),n.d(e,"b",(function(){return S})),n.d(e,"c",(function(){return C})),n.d(e,"d",(function(){return j})),n.d(e,"e",(function(){return T})),n.d(e,"f",(function(){return E})),n.d(e,"g",(function(){return A})),n.d(e,"h",(function(){return $})),n.d(e,"i",(function(){return R}));var r=n("c04e4"),a=n("a3f7"),s=n("6ad5"),i=n("9117"),o=n("c77c"),u=n("09f4"),c=n("f0e5"),l=n("4611"),d=n("a5aa"),h=n("54ef"),p=n("c9f1"),f=n("4184"),m=n("a009");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function b(t,e){Object(r["b"])("strict variants of ops have been deprecated and will be removed in future");const n=Object(a["a"])(t,"a","addStrict"),o=Object(a["a"])(e,"b","addStrict");return s["e"](n.shape,o.shape,"Error in addStrict: "),Object(i["a"])(n,o)}function g(t,e){Object(r["b"])("strict variants of ops have been deprecated and will be removed in future");const n=Object(a["a"])(t,"a","subStrict"),i=Object(a["a"])(e,"b","subStrict");return s["e"](n.shape,i.shape,"Error in subStrict: "),Object(m["a"])(n,i)}function y(t,e){return Object(r["b"])("strict variants of ops have been deprecated and will be removed in future"),s["e"](t.shape,e.shape,"Error in powStrict: "),Object(p["a"])(t,e)}function x(t,e){Object(r["b"])("strict variants of ops have been deprecated and will be removed in future");const n=Object(a["a"])(t,"a","mul"),i=Object(a["a"])(e,"b","mul");return s["e"](n.shape,i.shape,"Error in multiplyStrict: "),Object(d["a"])(n,i)}function v(t,e){Object(r["b"])("strict variants of ops have been deprecated and will be removed in future");const n=Object(a["a"])(t,"a","div"),i=Object(a["a"])(e,"b","div");return s["e"](n.shape,i.shape,"Error in divideStrict: "),Object(o["a"])(n,i)}function w(t,e){Object(r["b"])("strict variants of ops have been deprecated and will be removed in future");const n=Object(a["a"])(t,"a","modStrict"),i=Object(a["a"])(e,"b","modStrict");return s["e"](n.shape,i.shape,"Error in modStrict: "),Object(l["a"])(n,i)}function k(t,e){Object(r["b"])("strict variants of ops have been deprecated and will be removed in future");const n=Object(a["a"])(t,"a","minimumStrict"),i=Object(a["a"])(e,"b","minimumStrict");return s["e"](n.shape,i.shape,"Error in minimumStrict: "),Object(c["a"])(n,i)}function O(t,e){Object(r["b"])("strict variants of ops have been deprecated and will be removed in future");const n=Object(a["a"])(t,"a","maximumStrict"),i=Object(a["a"])(e,"b","maximumStrict");return s["e"](n.shape,i.shape,"Error in maximumStrict: "),Object(u["a"])(n,i)}function I(t,e){Object(r["b"])("strict variants of ops have been deprecated and will be removed in future");const n=Object(a["a"])(t,"a","squaredDifferenceStrict"),i=Object(a["a"])(e,"b","squaredDifferenceStrict");return s["e"](n.shape,i.shape,"Error in squaredDifferenceStrict: "),Object(f["a"])(n,i)}const N=Object(h["b"])({addStrict_:b}),S=Object(h["b"])({divStrict_:v}),C=Object(h["b"])({maximumStrict_:O}),j=Object(h["b"])({minimumStrict_:k}),T=Object(h["b"])({modStrict_:w}),E=Object(h["b"])({mulStrict_:x}),A=Object(h["b"])({powStrict_:y}),$=Object(h["b"])({squaredDifferenceStrict_:I}),R=Object(h["b"])({subStrict_:g})},cd1f:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("a3f7"),a=n("73d3"),s=n("54ef");function i(t,e,n,s,i,o){const u=Object(r["a"])(t,"x","conv2dTranspose"),c=Object(r["a"])(e,"filter","conv2dTranspose");return Object(a["a"])(n,u,c,s,i,"NHWC",o)}const o=Object(s["b"])({conv2dTranspose_:i})},ce1a:function(t,e,n){"use strict";n.d(e,"b",(function(){return o["cast"]})),n.d(e,"d",(function(){return o["greater"]})),n.d(e,"k",(function(){return o["oneHot"]})),n.d(e,"n",(function(){return o["stack"]})),n.d(e,"o",(function(){return o["tensor"]})),n.d(e,"p",(function(){return o["tensor2d"]})),n.d(e,"q",(function(){return o["tensor4d"]})),n.d(e,"r",(function(){return o["topk"]})),n.d(e,"e",(function(){return o["image"]})),n.d(e,"i",(function(){return o["losses"]})),n.d(e,"s",(function(){return o["train"]})),n.d(e,"m",(function(){return o["setBackend"]})),n.d(e,"a",(function(){return o["browser"]})),n.d(e,"f",(function(){return o["io"]})),n.d(e,"h",(function(){return Br})),n.d(e,"l",(function(){return Pr})),n.d(e,"g",(function(){return r})),n.d(e,"j",(function(){return a})),n.d(e,"c",(function(){return s}));var r={};n.r(r),n.d(r,"inputLayer",(function(){return ti})),n.d(r,"elu",(function(){return ei})),n.d(r,"reLU",(function(){return ni})),n.d(r,"leakyReLU",(function(){return ri})),n.d(r,"prelu",(function(){return ai})),n.d(r,"softmax",(function(){return si})),n.d(r,"thresholdedReLU",(function(){return ii})),n.d(r,"conv1d",(function(){return oi})),n.d(r,"conv2d",(function(){return ui})),n.d(r,"conv2dTranspose",(function(){return ci})),n.d(r,"conv3d",(function(){return li})),n.d(r,"separableConv2d",(function(){return di})),n.d(r,"cropping2D",(function(){return hi})),n.d(r,"upSampling2d",(function(){return pi})),n.d(r,"depthwiseConv2d",(function(){return fi})),n.d(r,"activation",(function(){return mi})),n.d(r,"dense",(function(){return bi})),n.d(r,"dropout",(function(){return gi})),n.d(r,"spatialDropout1d",(function(){return yi})),n.d(r,"flatten",(function(){return xi})),n.d(r,"repeatVector",(function(){return vi})),n.d(r,"reshape",(function(){return wi})),n.d(r,"permute",(function(){return ki})),n.d(r,"embedding",(function(){return Oi})),n.d(r,"add",(function(){return Ii})),n.d(r,"average",(function(){return Ni})),n.d(r,"concatenate",(function(){return Si})),n.d(r,"maximum",(function(){return Ci})),n.d(r,"minimum",(function(){return ji})),n.d(r,"multiply",(function(){return Ti})),n.d(r,"dot",(function(){return Ei})),n.d(r,"batchNormalization",(function(){return Ai})),n.d(r,"layerNormalization",(function(){return $i})),n.d(r,"zeroPadding2d",(function(){return Ri})),n.d(r,"averagePooling1d",(function(){return Di})),n.d(r,"avgPool1d",(function(){return Fi})),n.d(r,"avgPooling1d",(function(){return _i})),n.d(r,"averagePooling2d",(function(){return Mi})),n.d(r,"avgPool2d",(function(){return zi})),n.d(r,"avgPooling2d",(function(){return Li})),n.d(r,"averagePooling3d",(function(){return Pi})),n.d(r,"avgPool3d",(function(){return Bi})),n.d(r,"avgPooling3d",(function(){return Wi})),n.d(r,"globalAveragePooling1d",(function(){return Vi})),n.d(r,"globalAveragePooling2d",(function(){return Ui})),n.d(r,"globalMaxPooling1d",(function(){return Gi})),n.d(r,"globalMaxPooling2d",(function(){return Hi})),n.d(r,"maxPooling1d",(function(){return qi})),n.d(r,"maxPooling2d",(function(){return Ki})),n.d(r,"maxPooling3d",(function(){return Xi})),n.d(r,"gru",(function(){return Yi})),n.d(r,"gruCell",(function(){return Zi})),n.d(r,"lstm",(function(){return Ji})),n.d(r,"lstmCell",(function(){return Qi})),n.d(r,"simpleRNN",(function(){return to})),n.d(r,"simpleRNNCell",(function(){return eo})),n.d(r,"convLstm2d",(function(){return no})),n.d(r,"convLstm2dCell",(function(){return ro})),n.d(r,"rnn",(function(){return ao})),n.d(r,"stackedRNNCells",(function(){return so})),n.d(r,"bidirectional",(function(){return io})),n.d(r,"timeDistributed",(function(){return oo})),n.d(r,"globalMaxPool1d",(function(){return uo})),n.d(r,"globalMaxPool2d",(function(){return co})),n.d(r,"maxPool1d",(function(){return lo})),n.d(r,"maxPool2d",(function(){return ho})),n.d(r,"Layer",(function(){return Te})),n.d(r,"RNN",(function(){return Ba})),n.d(r,"RNNCell",(function(){return Wa})),n.d(r,"input",(function(){return Wr})),n.d(r,"gaussianNoise",(function(){return po})),n.d(r,"gaussianDropout",(function(){return fo})),n.d(r,"alphaDropout",(function(){return mo})),n.d(r,"masking",(function(){return bo}));var a={};n.r(a),n.d(a,"binaryAccuracy",(function(){return go})),n.d(a,"binaryCrossentropy",(function(){return yo})),n.d(a,"sparseCategoricalAccuracy",(function(){return xo})),n.d(a,"categoricalAccuracy",(function(){return vo})),n.d(a,"categoricalCrossentropy",(function(){return wo})),n.d(a,"precision",(function(){return ko})),n.d(a,"recall",(function(){return Oo})),n.d(a,"cosineProximity",(function(){return Io})),n.d(a,"meanAbsoluteError",(function(){return No})),n.d(a,"meanAbsolutePercentageError",(function(){return So})),n.d(a,"MAPE",(function(){return Co})),n.d(a,"mape",(function(){return jo})),n.d(a,"meanSquaredError",(function(){return To})),n.d(a,"MSE",(function(){return Eo})),n.d(a,"mse",(function(){return Ao}));var s={};n.r(s),n.d(s,"array",(function(){return zo})),n.d(s,"Dataset",(function(){return _o})),n.d(s,"zip",(function(){return Lo})),n.d(s,"CSVDataset",(function(){return Xo})),n.d(s,"TextLineDataset",(function(){return Wo})),n.d(s,"csv",(function(){return iu})),n.d(s,"func",(function(){return ou})),n.d(s,"generator",(function(){return uu})),n.d(s,"microphone",(function(){return lu})),n.d(s,"webcam",(function(){return cu})),n.d(s,"FileDataSource",(function(){return au})),n.d(s,"URLDataSource",(function(){return su})),n.d(s,"version_data",(function(){return du}));var i={};n.r(i),n.d(i,"simpleAbsImpl",(function(){return Ju})),n.d(i,"addImpl",(function(){return Wu})),n.d(i,"bincountImpl",(function(){return Kc})),n.d(i,"bincountReduceImpl",(function(){return Xc})),n.d(i,"ceilImpl",(function(){return Qc})),n.d(i,"concatImpl",(function(){return il})),n.d(i,"expImpl",(function(){return sd})),n.d(i,"expm1Impl",(function(){return ld})),n.d(i,"floorImpl",(function(){return Fd})),n.d(i,"gatherV2Impl",(function(){return qd})),n.d(i,"greaterImpl",(function(){return Yd})),n.d(i,"lessImpl",(function(){return lh})),n.d(i,"linSpaceImpl",(function(){return bh})),n.d(i,"logImpl",(function(){return xh})),n.d(i,"maxImpl",(function(){return _h})),n.d(i,"maximumImpl",(function(){return Lh})),n.d(i,"minimumImpl",(function(){return ap})),n.d(i,"multiplyImpl",(function(){return pd})),n.d(i,"negImpl",(function(){return bp})),n.d(i,"notEqualImpl",(function(){return jp})),n.d(i,"prodImpl",(function(){return Up})),n.d(i,"rangeImpl",(function(){return qp})),n.d(i,"rsqrtImpl",(function(){return hf})),n.d(i,"sliceImpl",(function(){return Vc})),n.d(i,"squaredDifferenceImpl",(function(){return Gf})),n.d(i,"stridedSliceImpl",(function(){return Yf})),n.d(i,"subImpl",(function(){return vd})),n.d(i,"tileImpl",(function(){return rm})),n.d(i,"topKImpl",(function(){return im})),n.d(i,"transposeImpl",(function(){return oc})),n.d(i,"uniqueImpl",(function(){return cm}));var o=n("fa11");
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let u;function c(){return null==u&&(u=Object(o["backend"])().epsilon()),u}function l(){return"channelsLast"}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class d extends Error{constructor(t){super(t),Object.setPrototypeOf(this,d.prototype)}}class h extends Error{constructor(t){super(t),Object.setPrototypeOf(this,h.prototype)}}class p extends Error{constructor(t){super(t),Object.setPrototypeOf(this,p.prototype)}}class f extends Error{constructor(t){super(t),Object.setPrototypeOf(this,f.prototype)}}class m extends Error{constructor(t){super(t),Object.setPrototypeOf(this,m.prototype)}}Error;
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function b(t,e){if(Array.isArray(t)){let n=[];for(let r=0;r<e;r++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function g(t,e){if(!t)throw new m(e)}function y(t,e){let n=0;for(const r of t)r===e&&n++;return n}function x(t){return 1===t.length?t[0]:t}function v(t){return Array.isArray(t)?t:[t]}function w(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2"),n=e.replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==n[0]?n:"private"+n}function k(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let O={};function I(t){if(null===t||void 0===t)return null;const e={};return e["className"]=t.getClassName(),e["config"]=t.getConfig(),e}function N(t){if(null!=t&&"object"===typeof t)if(Array.isArray(t))t.forEach(t=>N(t));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"===typeof e&&(Array.isArray(e)||"ndarray"!==e["type"]||"number"!==typeof e["value"]?N(e):t[n]=e["value"])}}}function S(t,e={},n={},r="object",a=!1){if("string"===typeof t){const a=t;let s;if(a in n)s=n[a];else if(a in O)s=O[a];else if(s=e[a],null==s)throw new p(`Unknown ${r}: ${t}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=t;if(null==s["className"]||null==s["config"])throw new p(r+": Improper config format: "+JSON.stringify(s)+".\n'className' and 'config' must set.");const i=s["className"];let o,u;if(i in n?[o,u]=n[i]:i in O?[o,u]=O["className"]:i in e&&([o,u]=e[i]),null==o)throw new p(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const t={};for(const n of Object.keys(O))t[n]=O[n];for(const a of Object.keys(n))t[a]=n[a];const e=s["config"];e["customObjects"]=t;const r=Object.assign({},O);for(const a of Object.keys(n))O[a]=n[a];N(s["config"]);const i=u(o,s["config"],n,a);return O=Object.assign({},r),i}{const t=Object.assign({},O);for(const r of Object.keys(n))O[r]=n[r];const e=new o(s["config"]);return O=Object.assign({},t),e}}}function C(t,e){return t<e?-1:t>e?1:0}function j(t,e){return-1*C(t,e)}function T(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function E(t){if(null==t)throw new p("Invalid value in obj: "+JSON.stringify(t));for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function A(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new p(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function $(t,e,n=0,r=1/0){return g(n>=0),g(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every(t=>typeof t===e)}function R(t,e){Array.isArray(t)?(o["util"].assert(t.length>0,()=>e+" is unexpectedly an empty array."),t.forEach((t,n)=>R(t,`element ${n+1} of ${e}`))):o["util"].assert(Number.isInteger(t)&&t>0,()=>`Expected ${e} to be a positive integer, but got `+D(t)+".")}function D(t){return null===t?"null":Array.isArray(t)?"["+t.map(t=>D(t)).join(",")+"]":"string"===typeof t?`"${t}"`:""+t}function F(t,e){let n,r=o["util"].now();const a=(...a)=>{const s=o["util"].now();return s-r<e||(r=s,n=t(...a)),n};return a}function _(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function M(t,e){return Object(o["tidy"])(()=>o["sqrt"](o["sum"](o["mul"](t,t),e,!0)))}class z extends o["serialization"].Serializable{getConfig(){return{}}}class L extends z{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(o["tidy"])(()=>{const e=M(t,this.axis),n=o["clipByValue"](e,0,this.maxValue);return o["mul"](t,o["div"](n,o["add"](c(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}L.className="MaxNorm",o["serialization"].registerClass(L);class P extends z{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(o["tidy"])(()=>o["div"](t,o["add"](c(),M(t,this.axis))))}getConfig(){return{axis:this.axis}}}P.className="UnitNorm",o["serialization"].registerClass(P);class B extends z{apply(t){return o["relu"](t)}}B.className="NonNeg",o["serialization"].registerClass(B);class W extends z{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(o["tidy"])(()=>{const e=M(t,this.axis),n=o["add"](o["mul"](this.rate,o["clipByValue"](e,this.minValue,this.maxValue)),o["mul"](1-this.rate,e));return o["mul"](t,o["div"](n,o["add"](c(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}W.className="MinMaxNorm",o["serialization"].registerClass(W);const V={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function U(t){return I(t)}function G(t,e={}){return S(t,o["serialization"].SerializationMap.getMap().classNameMap,e,"constraint")}function H(t){if(null==t)return null;if("string"===typeof t){const e=t in V?V[t]:t,n={className:e,config:{}};return G(n)}return t instanceof z?t:G(t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const q=["channelsFirst","channelsLast"],K=["nearest","bilinear"],X=["valid","same","causal"],Y=["max","avg"],Z=["sum","mul","concat","ave"],J=new Map;function Q(t){A(q,"DataFormat",t)}function tt(t){A(K,"InterpolationFormat",t)}function et(t){A(X,"PaddingMode",t)}function nt(t){A(Y,"PoolMode",t)}const rt=[],at="/";function st(t,e){rt.push(t);try{const t=e();return rt.pop(),t}catch(n){throw rt.pop(),n}}function it(){return 0===rt.length?"":rt.join(at)+at}function ot(t){if(!lt(t))throw new Error("Not a valid tensor name: '"+t+"'");return it()+t}function ut(t){if(!lt(t))throw new Error("Not a valid tensor name: '"+t+"'");J.has(t)||J.set(t,0);const e=J.get(t);if(J.set(t,J.get(t)+1),e>0){const n=`${t}_${e}`;return J.set(n,1),n}return t}const ct=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function lt(t){return!!t.match(ct)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function dt(t){return t===parseInt(t.toString(),10)}function ht(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let r=1;for(let a=e;a<n;++a)r*=t[a];return r}function pt(t){return t=Array.isArray(t)?new Float32Array(t):t,Object(o["tensor1d"])(t)}function ft(t){return o["min"](pt(t)).dataSync()[0]}function mt(t){return o["max"](pt(t)).dataSync()[0]}function bt(t,e){if(e<t)throw new p(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let r=t;r<e;++r)n.push(r);return n}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function gt(t,e){return t.asType(e)}function yt(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),t.reshape(n)}function xt(t,e){return Object(o["tidy"])(()=>{if(2!==t.shape.length)throw new p(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);const n=yt(t,1);return Ct(n,[1,e,1])})}function vt(t){const e=[ht(t.shape)];return t.reshape(e)}function wt(t){if(t.rank<=1)throw new p(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],ht(t.shape,1)];return t.reshape(e)}function kt(t,e,n){return Object(o["tidy"])(()=>{switch(t.rank){case 1:return o["slice1d"](t,e,n);case 2:return o["slice2d"](t,[e,0],[n,t.shape[1]]);case 3:return o["slice3d"](t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return o["slice4d"](t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return o["slice"](t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return o["slice"](t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new p("sliceAlongFirstAxis() received an unsupported tensor rank: "+t.rank)}})}function Ot(t,e,n){return Object(o["tidy"])(()=>{switch(t.rank){case 1:return o["slice1d"](t,e,n);case 2:return o["slice2d"](t,[0,e],[t.shape[0],n]);case 3:return o["slice3d"](t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return o["slice4d"](t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new p("sliceAlongLastAxis() received an unsupported tensor rank: "+t.rank)}})}function It(t,e,n,r){return Object(o["tidy"])(()=>{switch(t.rank){case 1:return o["slice1d"](t,e,n);case 2:switch(r){case 1:return kt(t,e,n);case 2:return Ot(t,e,n);default:throw new p("The axis is not within the rank of the tensor "+r)}case 3:switch(r){case 1:return kt(t,e,n);case 2:return o["slice3d"](t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return Ot(t,e,n);default:throw new p("The axis is not within the rank of the tensor "+r)}case 4:switch(r){case 1:return kt(t,e,n);case 2:return o["slice4d"](t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return o["slice4d"](t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return Ot(t,e,n);default:throw new p("The axis is not within the rank of the tensor "+r)}default:throw new p("sliceAlongLastAxis() received an unsupported tensor rank: "+t.rank)}})}function Nt(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),o["concat"](t,e)}function St(t,e){switch(t.rank){case 1:return o["concat1d"]([t,e]);case 2:return o["concat2d"]([t,e],0);case 3:return o["concat3d"]([t,e],0);case 4:return o["concat4d"]([t,e],0);default:throw new p("concatAlongFirstAxis() received an unsupported tensor rank: "+t.rank)}}function Ct(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new p(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return o["tile"](t,e)}function jt(t,e=0,n=1,r,a){return o["randomNormal"](t,e,n,r,a)}function Tt(t,e,n,r){if(t.rank<2||e.rank<2)throw new f(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3){const n=t.shape.slice(-1)[0],r=e.shape.slice(-2)[0];if(n!==r)throw new f(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = `+e.shape)}if(2===t.rank&&2===e.rank){const a=!1,s=!1;return o["fused"].matMul({a:t,b:e,transposeA:a,transposeB:s,bias:r?$t(t.rank,r,l()):null,activation:n})}{const a=t.shape.slice(),s=a.pop();t=t.reshape([-1,s]);const i=e.shape.slice(),u=i.pop(),c=i.pop(),d=[...i,u],h=Array.from({length:e.rank},(t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n);e=e.transpose(h).reshape([c,-1]);const p=[...a,...d],f=!1,m=!1;return o["fused"].matMul({a:t,b:e,transposeA:f,transposeB:m,bias:r?$t(t.rank,r,l()):null,activation:n}).reshape(p)}}function Et(t,e,n){return Object(o["tidy"])(()=>(e=Array.isArray(e)?Object(o["tensor1d"])(e,"int32"):e.toInt(),o["gather"](t,e,n)))}function At(t){return o["mul"](t,t)}function $t(t,e,n){const r=e.shape;if(1!==e.rank&&e.rank!==t)throw new p("Unexpected bias dimensions: "+e.rank+"; expected it to be 1 or "+t);if(5===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1,1]):e.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,1,r[0]]):e.reshape([1].concat(r))}else if(4===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1]):e.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,r[0]]):e.reshape([1].concat(r))}else if(3===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1]):e.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,r[0]]):e.reshape([1].concat(r))}else if(t<3)return e;throw new p("Unsupported input rank by biasAdd: "+e.rank)}function Rt(t,e,n){return Object(o["tidy"])(()=>(null==n&&(n=l()),Q(n),t.add($t(t.rank,e,n))))}function Dt(t,e=1){if(1!==e)throw new f(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return o["elu"](t)}function Ft(t){return Object(o["tidy"])(()=>o["div"](t,o["abs"](t).add(1)))}function _t(t,e,n,r){return Object(o["tidy"])(()=>o["dropout"](t,e,n,r))}function Mt(t){return Object(o["tidy"])(()=>{const e=o["add"](.5,o["mul"](.2,t));return o["clipByValue"](e,0,1)})}function zt(t,e,n=!1){return n?t():e()}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Lt=["fanIn","fanOut","fanAvg"],Pt=["normal","uniform","truncatedNormal"];
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Bt(t){A(Lt,"FanMode",t)}function Wt(t){A(Pt,"Distribution",t)}class Vt extends o["serialization"].Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Ut extends Vt{apply(t,e){return Object(o["zeros"])(t,e)}}Ut.className="Zeros",o["serialization"].registerClass(Ut);class Gt extends Vt{apply(t,e){return Object(o["ones"])(t,e)}}Gt.className="Ones",o["serialization"].registerClass(Gt);class Ht extends Vt{constructor(t){if(super(),"object"!==typeof t)throw new p("Expected argument of type ConstantConfig but got "+t);if(void 0===t.value)throw new p("config must have value set but got "+t);this.value=t.value}apply(t,e){return Object(o["tidy"])(()=>Object(o["mul"])(Object(o["scalar"])(this.value),Object(o["ones"])(t,e)))}getConfig(){return{value:this.value}}}Ht.className="Constant",o["serialization"].registerClass(Ht);class qt extends Vt{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Object(o["randomUniform"])(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}qt.className="RandomUniform",o["serialization"].registerClass(qt);class Kt extends Vt{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32","float32"!==e&&"int32"!==e)throw new f(`randomNormal does not support dType ${e}.`);return jt(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Kt.className="RandomNormal",o["serialization"].registerClass(Kt);class Xt extends Vt{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32","float32"!==e&&"int32"!==e)throw new f(`truncatedNormal does not support dType ${e}.`);return Object(o["truncatedNormal"])(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Xt.className="TruncatedNormal",o["serialization"].registerClass(Xt);class Yt extends Vt{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return Object(o["tidy"])(()=>{if(2!==t.length||t[0]!==t[1])throw new p("Identity matrix initializer can only be used for 2D square matrices.");return Object(o["mul"])(this.gain,Object(o["eye"])(t[0]))})}getConfig(){return{gain:this.gain}}}function Zt(t,e="channelsLast"){let n,r;if(Q(e),2===t.length)n=t[0],r=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=ht(t,2);n=t[1]*e,r=t[0]*e}else if("channelsLast"===e){const e=ht(t,0,t.length-2);n=t[t.length-2]*e,r=t[t.length-1]*e}}else{const e=ht(t);n=Math.sqrt(e),r=Math.sqrt(e)}return[n,r]}Yt.className="Identity",o["serialization"].registerClass(Yt);class Jt extends Vt{constructor(t){if(super(),t.scale<0)throw new p("scale must be a positive float. Got: "+t.scale);this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,Bt(this.mode),this.distribution=null==t.distribution?"normal":t.distribution,Wt(this.distribution),this.seed=t.seed}apply(t,e){const n=Zt(t),r=n[0],a=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(s);if(e=e||"float32","float32"!==e&&"int32"!==e)throw new f(`${this.getClassName()} does not support dType ${e}.`);return Object(o["truncatedNormal"])(t,0,n,e,this.seed)}{const n=Math.sqrt(3*s);return Object(o["randomUniform"])(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Jt.className="VarianceScaling",o["serialization"].registerClass(Jt);class Qt extends Jt{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Jt.className}}Qt.className="GlorotUniform",o["serialization"].registerClass(Qt);class te extends Jt{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Jt.className}}te.className="GlorotNormal",o["serialization"].registerClass(te);class ee extends Jt{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Jt.className}}ee.className="HeNormal",o["serialization"].registerClass(ee);class ne extends Jt{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Jt.className}}ne.className="HeUniform",o["serialization"].registerClass(ne);class re extends Jt{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Jt.className}}re.className="LeCunNormal",o["serialization"].registerClass(re);class ae extends Jt{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Jt.className}}ae.className="LeCunNormal",o["serialization"].registerClass(ae);class se extends Vt{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new f("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return Object(o["tidy"])(()=>{if(t.length<2)throw new f("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=t[0]>t[1]?[t[1],t[0]]:t,n=jt(e,0,1,"float32");let r=o["linalg"].gramSchmidt(n);return t[0]>t[1]&&(r=r.transpose()),Object(o["mul"])(this.gain,r)})}getConfig(){return{gain:this.gain,seed:this.seed}}}se.className="Orthogonal",o["serialization"].registerClass(se);const ie={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function oe(t,e={}){return S(t,o["serialization"].SerializationMap.getMap().classNameMap,e,"initializer")}function ue(t){return I(t)}function ce(t){if("string"===typeof t){const e=t in ie?ie[t]:t;if("GlorotNormal"===e)return new te;if("GlorotUniform"===e)return new Qt;if("HeNormal"===e)return new ee;if("HeUniform"===e)return new ne;if("LeCunNormal"===e)return new re;if("LeCunUniform"===e)return new ae;{const t={};return t["className"]=e,t["config"]={},oe(t)}}return t instanceof Vt?t:oe(t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
let le=0;function de(){return le++}const he={};function pe(t=""){return t in he||(he[t]=0),he[t]+=1,t+he[t].toString()}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function fe(t){return Array.isArray(t)&&Array.isArray(t[0])}function me(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function be(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new p("Expected Tensor length to be 1; got "+t.length);e=t[0]}else e=t;return e}function ge(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return t=t,t[0];throw new p("Expected exactly 1 Shape; got "+t.length)}return t}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ye(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce((t,e)=>t*e);return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const xe="Variable";class ve{constructor(t,e="float32",n=xe,r=!0,a=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=de(),n=null==n?xe:n,this.originalName=ot(n),this.name=ut(this.originalName),this.trainable_=r,this.constraint=a,this.val=o["variable"](t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),we(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function we(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}function ke(t){return t.map(t=>t.read())}function Oe(t){t.forEach(t=>{const e=t[0];e.write(t[1])})}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Ie{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class Ne{constructor(t,e,n,r,a,s,i){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=de(),null!=s&&(this.originalName=ot(s),this.name=ut(this.originalName)),this.rank=e.length}}let Se=0;class Ce{constructor(t,e){this.callArgs=e,this.id=Se++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const n of t.inboundLayers)null!=n&&n.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let je=0;class Te extends o["serialization"].Serializable{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=je++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=w(t)+"_"+pe(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new h(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new p(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return x(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return x(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new d("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new d("Layer "+this.name+" is not connected, no input to return.");return x(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new d("Layer "+this.name+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new d("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return x(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=v(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=v(this.inputSpec);if(t.length!==e.length)throw new p(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: `+t);for(let n=0;n<t.length;n++){const r=t[n],a=e[n];if(null==a)continue;const s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new p(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new p(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new p(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new p(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const t=r.shape;for(const e in a.axes){const r=Number(e),s=a.axes[e],i=r>=0?t[r]:t[t.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new p(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${t}.`)}}if(null!=a.shape)for(let t=0;t<a.shape.length;++t){const e=a.shape[t],s=r.shape[t];if(null!=e&&null!=s&&e!==s)throw new p(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=v(t);let r=!0;for(const s of n)if(!(s instanceof Ne)){r=!1;break}let a=!0;for(const s of n)if(s instanceof Ne){a=!1;break}if(r===a)throw new p("Arguments to apply() must be all SymbolicTensors or all Tensors");return st(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of v(t))e.push(n.shape);this.build(x(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(t),a){let r=this.call(t,e);const a=v(r),s=[];for(let t of a)-1!==n.indexOf(t)&&(t=t.clone()),s.push(t);if(r=x(s),null!=this.activityRegularizer)throw new f("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=Ee(t),r=this.computeOutputShape(n);let a;const s=Ae(t);if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map((n,r)=>new Ne(s,n,this,v(t),e,this.name,r)):new Ne(s,r,this,v(t),e,this.name),this.addInboundNode(t,a,null,null,n,r,e),this._refCount++,null!=this.activityRegularizer)throw new f("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}})}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+JSON.stringify(t)+") does not match that of the "+`batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer `+this.name);else{let e=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=t[r]&&t[r]!==n&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: `+JSON.stringify(this.batchInputShape))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new d(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new d(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new h(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return ye(this.weights)}build(t){this.built=!0}getWeights(t=!1){return ke(t?this.trainableWeights:this.weights)}setWeights(t){Object(o["tidy"])(()=>{const e=this.weights;if(e.length!==t.length)throw new p(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],r=ke(e);for(let a=0;a<r.length;++a){const s=r[a],i=e[a],u=t[a];if(!o["util"].arraysEqual(s.shape,u.shape))throw new p(`Layer weight shape ${s.shape} not compatible with provided weight shape `+u.shape);n.push([i,u])}Oe(n)})}addWeight(t,e,n,r,a,s,i){if(-1!==this._addedWeightNames.indexOf(t))throw new p(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=ce("zeros"));const o=r.apply(e,n),u=new ve(o,n,t,s,i);return o.dispose(),null!=a&&this.addLoss(()=>a.apply(u.read())),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=v(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach(t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return e}addInboundNode(t,e,n,r,a,s,i=null){const o=v(t);e=v(e),n=v(n),r=v(r),a=me(a),s=me(s);const u=[],c=[],l=[];for(const d of o)u.push(d.sourceLayer),c.push(d.nodeIndex),l.push(d.tensorIndex);new Ce({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:l,inputTensors:o,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let d=0;d<e.length;d++)e[d].sourceLayer=this,e[d].nodeIndex=this.inboundNodes.length-1,e[d].tensorIndex=d}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t["batchInputShape"]=this.batchInputShape),null!=this.dtype&&(t["dtype"]=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0===--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function Ee(t){t=v(t);const e=[];for(const n of t)e.push(n.shape);return x(e)}function Ae(t){return"float32"}function $e(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const r=t.inputTensors[n],a=t.inboundLayers[n],s=t.nodeIndices[n],i=$e(r,a,s);for(const t of i)-1===e.indexOf(t)&&e.push(t)}return e}}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Re extends Te{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:pe("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new p("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new p("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new p("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const r=new Ne(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Ce({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new p("Cannot pass any input to an InputLayer's apply() method. InputLayer name: "+this.name)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function De(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new p("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;null==n&&(n="float32");const r=new Re({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}),a=r.inboundNodes[0].outputTensors;return a[0]}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function Fe(t){if(null==t)return;const e=[],n=[],r=[];for(const a in t){const s=t[a];if("number"!==typeof s){const t=s;e.push(t.data()),n.push(a),r.push(t)}}if(e.length>0){const a=await Promise.all(e);for(let e=0;e<a.length;++e)t[n[e]]=a[e][0];Object(o["dispose"])(r)}}function _e(t){if(null!=t)for(const e in t){const n=t[e];"number"!==typeof n&&n.dispose()}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var Me;Re.className="InputLayer",o["serialization"].registerClass(Re),function(t){t[t["SILENT"]=0]="SILENT",t[t["VERBOSE"]=1]="VERBOSE"}(Me||(Me={}));const ze=125;class Le{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class Pe{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class Be extends Le{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e["size"]?0:e["size"];this.seen+=n;for(const r in e){const t=e[r];if("number"===typeof t)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+t*n;else{let e;r in this.totals?e=this.totals[r]:this.totals[r]=0;const a=Object(o["tidy"])(()=>Object(o["add"])(this.totals[r],Object(o["mul"])(t,n)));this.totals[r]=a,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const n of this.params["metrics"])null!=this.totals[n]&&("number"===typeof this.totals[n]?e[n]=this.totals[n]/this.seen:Object(o["tidy"])(()=>{const t=Object(o["mul"])(Object(o["div"])(1,this.seen),this.totals[n]);e[n]=t,this.totals[n].dispose(),Object(o["keep"])(e[n])}))}}class We extends Le{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const n in e)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(e[n])}async syncData(){const t=[],e=[],n=[];for(const a in this.history){const r=this.history[a];for(let s=0;s<r.length;++s)if("number"!==typeof r[s]){const i=r[s];t.push(i.data()),e.push(a),n.push(s)}}const r=await Promise.all(t);for(let a=0;a<r.length;++a){const t=this.history[e[a]][n[a]];t.dispose(),this.history[e[a]][n[a]]=r[a][0]}}}class Ve extends Le{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=ze),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");o["util"].isNumber(this.yieldEvery)&&(this.maybeWait=F(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const r=[];null!=this.yield&&(await Fe(n),r.push(this.yield(t,e,n))),r.push(Object(o["nextFrame"])()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await Fe(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await Fe(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(Object(o["nextFrame"])()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await Fe(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await Fe(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(Object(o["nextFrame"])()):o["util"].isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await Fe(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await Fe(t),await this.trainEnd(t))}}function Ue(t,e){if(null==t&&(t={}),t instanceof Le)return[t];if(Array.isArray(t)&&t[0]instanceof Le)return t;const n=v(t);return n.map(t=>new Ve(t,e))}class Ge{constructor(){}static registerCallbackConstructor(t,e){o["util"].assert(t>=0&&Number.isInteger(t),()=>"Verbosity level is expected to be an integer >= 0, but got "+t),Ge.checkForDuplicate(e),null==Ge.constructors[t]&&(Ge.constructors[t]=[]),Ge.constructors[t].push(e)}static checkForDuplicate(t){for(const e in Ge.constructors){const n=Ge.constructors[+e];n.forEach(e=>{if(e===t)throw new p("Duplicate callback constructor.")})}}static clear(){Ge.constructors={}}static createCallbacks(t){const e=[];for(const n in Ge.constructors){const r=+n;t>=r&&e.push(...Ge.constructors[r])}return e.map(t=>new t)}}function He(t,e,n,r,a,s,i,o,u){const c=new We,l=[new Be,...Ge.createCallbacks(e)];null!=t&&l.push(...t),l.push(c);const d=new Pe(l);return d.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:e,doValidation:o,metrics:u}),{callbackList:d,history:c}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function qe(t,e={},n=!1){return S(t,o["serialization"].SerializationMap.getMap().classNameMap,e,"layer",n)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ke(t,e){return Object(o["tidy"])(()=>{"float32"!==t.dtype&&(t=t.asType("float32"));const n=o["sum"](At(t),e,!0),r=o["fill"](n.shape,c()),a=o["sqrt"](o["maximum"](n,r));return o["div"](t,a)})}function Xe(t,e){return Object(o["tidy"])(()=>o["mean"](At(o["sub"](e,t)),-1))}function Ye(t,e){return Object(o["tidy"])(()=>o["mean"](o["abs"](o["sub"](e,t)),-1))}function Ze(t,e){return Object(o["tidy"])(()=>{const n=o["sub"](t,e),r=o["clipByValue"](o["abs"](t),c(),Number.MAX_VALUE),a=o["abs"](o["div"](n,r));return o["mul"](100,o["mean"](a,-1))})}function Je(t,e){return Object(o["tidy"])(()=>{const n=o["clipByValue"](e,c(),Number.MAX_VALUE),r=o["log"](o["add"](1,n)),a=o["clipByValue"](t,c(),Number.MAX_VALUE),s=o["log"](o["add"](1,a));return o["mean"](At(o["sub"](r,s)),-1)})}function Qe(t,e){return Object(o["tidy"])(()=>{const n=o["maximum"](0,o["sub"](1,o["mul"](t,e)));return o["mean"](At(n),-1)})}function tn(t,e){return Object(o["tidy"])(()=>{const n=o["maximum"](0,o["sub"](1,o["mul"](t,e)));return o["mean"](n,-1)})}function en(t,e){return Object(o["tidy"])(()=>{const n=o["sum"](o["mul"](t,e),-1),r=o["max"](o["mul"](o["sub"](1,t),e),-1);return o["maximum"](0,o["add"](1,o["sub"](r,n)))})}function nn(t,e){return Object(o["tidy"])(()=>{const n=Math.log(2),r=o["sub"](e,t),a=o["sub"](o["add"](r,o["softplus"](o["mul"](-2,r))),n);return o["mean"](a,-1)})}function rn(t,e,n=!1){return Object(o["tidy"])(()=>{if(n)e=o["softmax"](e);else{const t=o["sum"](e,e.shape.length-1,!0);e=o["div"](e,t)}return e=o["clipByValue"](e,c(),1-c()),o["neg"](o["sum"](o["mul"](t.toFloat(),o["log"](e)),e.shape.length-1))})}function an(t,e,n=!1){return Object(o["tidy"])(()=>{const r=o["floor"](vt(t)).toInt();e=o["clipByValue"](e,c(),1-c());const a=e.shape,s=o["oneHot"](r,a[a.length-1]).reshape(a);return rn(s,e,n)})}function sn(t,e){if(!o["util"].arraysEqual(t.shape,e.shape))throw new p(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return Object(o["tidy"])(()=>{const n=e.relu(),r=e.abs().neg();return n.sub(e.mul(t)).add(r.exp().log1p())})}function on(t,e){return Object(o["tidy"])(()=>{let n;return n=o["clipByValue"](e,c(),1-c()),n=o["log"](o["div"](n,o["sub"](1,n))),o["mean"](sn(t,n),-1)})}function un(t,e){return Object(o["tidy"])(()=>{const n=o["clipByValue"](t,c(),1),r=o["clipByValue"](e,c(),1);return o["sum"](o["mul"](t,o["log"](o["div"](n,r))),-1)})}function cn(t,e){return Object(o["tidy"])(()=>{const n=o["log"](o["add"](c(),e));return o["mean"](o["sub"](e,o["mul"](t,n)),-1)})}function ln(t,e){return Object(o["tidy"])(()=>{const n=Ke(t,-1),r=Ke(e,-1),a=o["mul"](n,r);return o["neg"](o["sum"](a,-1))})}Ge.constructors={};const dn={meanSquaredError:Xe,meanAbsoluteError:Ye,meanAbsolutePercentageError:Ze,meanSquaredLogarithmicError:Je,squaredHinge:Qe,hinge:tn,categoricalHinge:en,logcosh:nn,categoricalCrossentropy:rn,sparseCategoricalCrossentropy:an,binaryCrossentropy:on,kullbackLeiblerDivergence:un,poisson:cn,cosineProximity:ln};function hn(t){if("string"===typeof t){if(t in dn)return dn[t];let e="Unknown loss "+t;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new p(e)}return t}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function pn(t,e){return Object(o["tidy"])(()=>{const n=o["mul"](.5,o["onesLike"](e)),r=gt(o["greater"](e,n),t.dtype);return o["mean"](o["equal"](t,r),-1)})}function fn(t,e){return Object(o["tidy"])(()=>gt(o["equal"](o["argMax"](t,-1),o["argMax"](e,-1)),"float32"))}function mn(t,e){return Object(o["tidy"])(()=>o["logicalAnd"](t.equal(1),e.equal(1)).sum().cast("float32"))}function bn(t,e){return Object(o["tidy"])(()=>o["logicalAnd"](t.equal(1),e.equal(0)).sum().cast("float32"))}function gn(t,e){return Object(o["tidy"])(()=>o["logicalAnd"](t.equal(0),e.equal(1)).sum().cast("float32"))}function yn(t,e){return Object(o["tidy"])(()=>{const n=mn(t,e),r=gn(t,e),a=n.add(r);return o["where"](o["greater"](a,0),n.div(a),0).cast("float32")})}function xn(t,e){return Object(o["tidy"])(()=>{const n=mn(t,e),r=bn(t,e),a=n.add(r);return o["where"](o["greater"](a,0),n.div(a),0).cast("float32")})}function vn(t,e){return on(t,e)}function wn(t,e){return t.rank===e.rank&&(t=t.squeeze([t.rank-1])),e=e.argMax(-1),e.dtype!==t.dtype&&(e=e.asType(t.dtype)),o["equal"](t,e).asType("float32")}const kn=Xe,On=Xe,In=Ye,Nn=Ye,Sn=Ze,Cn=Ze,jn=rn,Tn=ln,En=an,An={binaryAccuracy:pn,categoricalAccuracy:fn,precision:yn,categoricalCrossentropy:jn,sparseCategoricalCrossentropy:En,mse:kn,MSE:On,mae:In,MAE:Nn,mape:Sn,MAPE:Cn,cosine:Tn};function $n(t){if("string"===typeof t&&t in An)return An[t];if("string"!==typeof t&&null!=t)return t;throw new p("Unknown metric "+t)}function Rn(t){if(g(null!==t,"Unknown LossOrMetricFn "+t),"string"===typeof t)return t;{let e;for(const n of Object.keys(dn))if(dn[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(An))if(An[n]===t){e=n;break}return void 0!==e?e:t.name}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Dn(t){const e={Adagrad:()=>o["train"].adagrad(.01),Adadelta:()=>o["train"].adadelta(1,.95,c()),Adam:()=>o["train"].adam(.001,.9,.999,c()),Adamax:()=>o["train"].adamax(.002,.9,.999,c(),0),RMSProp:()=>o["train"].rmsprop(.001,.9,0,c()),SGD:()=>o["train"].sgd(.01)};if(e["adagrad"]=e["Adagrad"],e["adadelta"]=e["Adadelta"],e["adam"]=e["Adam"],e["adamax"]=e["Adamax"],e["rmsprop"]=e["RMSProp"],e["sgd"]=e["SGD"],t in e)return e[t]();throw new p("Unknown Optimizer "+t)}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Fn=1048576;function _n(t,e,n=!1){if(null==t||"object"!==typeof t||Object.getPrototypeOf(t)!==Object.prototype||!Mn(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>Fn&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= `+Fn+".")}}function Mn(t){if(null===t)return!0;if("object"===typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!==typeof n)return!1;if(!Mn(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!Mn(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function zn(t,e,n,r=console.log){const a=Pn(t),s=["Layer (type)","Output shape","Param #"];let i;if(a?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(t=>Math.floor(e*t))),!a){s.push("Receives inputs"),i=[];for(const e in t.nodesByDepth)i.push(...t.nodesByDepth[e])}r("_".repeat(e)),Bn(s,n,r),r("=".repeat(e));const o=t.layers;for(let l=0;l<o.length;++l)a?Wn(o[l],n,r):Vn(o[l],n,i,r),r((l===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const u=Ln(t),c=ye(t.nonTrainableWeights);r("Total params: "+(u+c)),r("Trainable params: "+u),r("Non-trainable params: "+c),r("_".repeat(e))}function Ln(t){let e;return e=null!=t.collectedTrainableWeights?ye(t.collectedTrainableWeights):ye(t.trainableWeights),e}function Pn(t){let e=!0;const n=[],r=[];for(const a in t.nodesByDepth)n.push(t.nodesByDepth[a]);for(const a of n){if(a.length>1||1===a.length&&a[0].inboundLayers.length>1){e=!1;break}r.push(...a)}if(e)for(const a of t.layers){let t=!1;for(const n of a.inboundNodes)if(-1!==r.indexOf(n)){if(t){e=!1;break}t=!0}if(!e)break}return e}function Bn(t,e,n=console.log){let r="";for(let a=0;a<t.length;++a)a>0&&(r=r.slice(0,r.length-1)+" "),r+=t[a],r=r.slice(0,e[a]),r+=" ".repeat(e[a]-r.length);n(r)}function Wn(t,e,n){let r;try{r=JSON.stringify(t.outputShape)}catch(o){r="multiple"}const a=t.name,s=t.getClassName(),i=[`${a} (${s})`,r,t.countParams().toString()];Bn(i,e,n)}function Vn(t,e,n,r){let a;try{a=JSON.stringify(t.outputShape)}catch(l){a="multiple"}const s=[];for(const d of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(d)))for(let t=0;t<d.inboundLayers.length;++t){const e=d.inboundLayers[t].name,n=d.nodeIndices[t],r=d.tensorIndices[t];s.push(`${e}[${n}][${r}]`)}const i=t.name,o=t.getClassName(),u=0===s.length?"":s[0],c=[`${i} (${o})`,a,t.countParams().toString(),u];Bn(c,e,r);for(let d=1;d<s.length;++d)Bn(["","","",s[d]],e,r)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Un(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"===typeof n}function Gn(t,e){if(null===t)return null;if("string"===typeof t)return k(t);if("number"===typeof t||"boolean"===typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let a=0;a<r;++a){const r=t[a];Un(e,a,r)?n.push(r):n.push(Gn(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];if("name"===n&&"string"===typeof r)e[n]=r;else{const t=k(n);e[t]=Gn(r,t)}}return e}}function Hn(t,e){if(null===t||void 0===t)return null;if("string"===typeof t)return w(t);if("number"===typeof t||"boolean"===typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let a=0;a<r;++a){const r=t[a];Un(e,a,r)?n.push(r):n.push(Hn(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n],a=w(n);e[a]="name"!==n&&"className"!==n||"string"!==typeof r?Hn(r,n):r}return e}}
/** @license See the LICENSE file. */const qn="2.8.5";
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Kn(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return Object(o["cast"])(e,t.dtype)}catch(n){throw new p(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}class Xn{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof Xn)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new p(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=Kn(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Ne){if(null==this.id2Value[t.id])throw new p("Nonexistent key: "+t.name);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new p("Feed dict has no SymbolicTensor name: "+t);return this.id2Value[e]}}getMask(t){if(t instanceof Ne){if(null==this.id2Value[t.id])throw new p("Nonexistent key: "+t.name);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new p("Feed dict has no SymbolicTensor name: "+t);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&Object(o["dispose"])(this.id2Mask)}}const Yn={},Zn={};function Jn(t,e,n,r){const a=null!=n&&n["training"],s=Array.isArray(t),i=s?t:[t],u=i.map(t=>t.name),c=[],l=e.names();for(const o of u)-1!==l.indexOf(o)?c.push(e.getValue(o)):c.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const d=u.join(",")+"|"+e.names().join(",");let h,p;if(null==Yn[d]){const t=Qn(i,e);h=t.sorted,p=t.recipientCounts,Yn[d]=h,Zn[d]=p}h=Yn[d],p={},a||Object.assign(p,Zn[d]);const f=new Xn(e);for(let m=0;m<h.length;++m){if(null!=r){const t=Object(o["memory"])().numTensors;t>r.maxNumTensors&&(r.maxNumTensors=t),t<r.minNumTensors&&(r.minNumTensors=t)}const t=h[m],s=t.sourceLayer;if(s instanceof Re)continue;const i=[],l=[],d=[];let b=!1;for(const n of t.inputs){const t=f.getValue(n),r=f.getMask(n);i.push(t),l.push(r),null!=r&&(b=!0),a||(p[n.name]--,0!==p[n.name]||e.hasKey(n)||-1!==u.indexOf(n.name)||t.isDisposed||!0===n.sourceLayer.stateful||d.push(t))}b&&(n=n||{},n["mask"]=l[0]);const g=v(s.apply(i,n));let y=null;s.supportsMasking&&(y=s.computeMask(i,l));const x=nr(t),w=Array.isArray(x)?x:[x];for(let e=0;e<w.length;++e){f.hasKey(w[e])||f.add(w[e],g[e],Array.isArray(y)?y[0]:y);const t=u.indexOf(w[e].name);-1!==t&&(c[t]=g[e])}a||Object(o["dispose"])(d)}return f.disposeMasks(),s?c:c[0]}function Qn(t,e){o["util"].assert(null!=t&&t.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(1===t.length){const a=er(t[0],e);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const s of t){const{sorted:t,recipientMap:i}=er(s,e);for(const e of t)a.has(e.name)||(n.push(e),a.add(e.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach(t=>r[e].add(t))}}return{sorted:n,recipientCounts:tr(r)}}function tr(t){const e={};for(const n in t)e[n]=t[n].size;return e}function er(t,e){const n=new Set,r=[],a={};for(const o of e.names())n.add(o);const s=[],i=[];s.push(t);while(s.length>0){const t=s[s.length-1];if(n.has(t.name)){s.pop();continue}const e=i[i.length-1]===s.length-1;if(0===t.inputs.length||e)s.pop(),r.push(t),n.add(t.name),e&&i.pop();else{i.push(s.length-1);for(const e of t.inputs)null==a[e.name]&&(a[e.name]=new Set),a[e.name].add(t.name),n.has(e.name)||s.push(e)}}return{sorted:r,recipientMap:a}}function nr(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const r of t.sourceLayer.inboundNodes[e].outputTensors)if(r.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class rr extends Te{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=pe(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],T(this.inputs).length!==this.inputs.length)throw new p("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+this.inputs.map(t=>t.name));T(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+this.outputs.map(t=>t.name)),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const h of this.outputs){const t=h.sourceLayer,e=h.nodeIndex,n=h.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(e),this.outputLayersTensorIndices.push(n)}for(const h of this.inputs){const t=h.sourceLayer,e=h.nodeIndex,n=h.tensorIndex;g(0===e,"input layer has >1 nodes"),g(0===n,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(e),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let h=0;h<this.inputLayers.length;h++){const e=this.inputLayers[h];if(!(e instanceof Re))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${h} (0-based) originates from layer type ${e.getClassName()}.`);this.inputNames.push(e.name),this.feedInputShapes.push(e.batchInputShape),this.feedInputNames.push(e.name)}for(const h of this.outputLayers)this.outputNames.push(h.name);this.internalInputShapes=this.inputs.map(t=>t.shape),this.internalOutputShapes=this.outputs.map(t=>t.shape);const e={},n={},r={},a={},s={},i=[],o=(t,e,n,r,a,u)=>{null!=r&&null!=a&&null!=u||(r=t.sourceLayer,a=t.nodeIndex,u=t.tensorIndex);const c=r.inboundNodes[a];if(-1!==n.indexOf(c))throw new h(`The tensor ${t.name} at layer "${r.name}" is part of a cycle.`);if(-1!==e.indexOf(c))return;this.containerNodes.add(rr.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(c)&&n.push(c);const l=c.inboundLayers.length;for(let s=0;s<l;s++){const t=c.inputTensors[s],r=c.inboundLayers[s],a=c.nodeIndices[s],i=c.tensorIndices[s];o(t,e,n,r,a,i)}e.push(c);while(n.indexOf(c)>=0)n.splice(n.indexOf(c),1);i.push(c)},u=[],c=[];for(const h of this.outputs)o(h,u,c);const l=i.slice().reverse();for(const h of l){n[h.id]=h,h.id in e||(e[h.id]=0);let t=e[h.id];const s=null==r[h.outboundLayer.id]?0:r[h.outboundLayer.id];t=Math.max(t,s),r[h.outboundLayer.id]=t,a[h.outboundLayer.id]=h.outboundLayer,e[h.id]=t;for(let r=0;r<h.inboundLayers.length;r++){const a=h.inboundLayers[r],s=h.nodeIndices[r],i=a.inboundNodes[s],o=null==e[i.id]?0:e[i.id];e[i.id]=Math.max(t+1,o),n[i.id]=i}}const d={};for(const h in e){const t=e[h];t in d||(d[t]=[]),d[t].push(n[h])}const f={};for(const h in r){const t=r[h];t in f||(f[t]=[]),f[t].push(a[h])}let m=Object.keys(f).map(t=>parseInt(t,10)).sort(j);this.layers=[];for(const h of m){const t=f[h];t.sort((t,e)=>{const n=s[t.id],r=s[e.id];return n<r?-1:n>r?1:0});for(const e of t)e instanceof rr&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=f,m=Object.keys(d).map(t=>parseInt(t,10)).sort(j);const b=this.inputs.slice(),y=[];for(const p of m)for(const t of d[p]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===b.indexOf(n))throw new h("Graph disconnected: cannot obtain value for tensor "+n+` at layer "${e.name}". The following previous layers were accessed without issue: `+y);for(const e of t.outputTensors)b.push(e);y.push(e.name)}}this.nodesByDepth=d;const x=this.layers.map(t=>t.name);for(const p of x){const t=x.filter(t=>t===p).length;if(1!==t)throw new h(`The name "${p}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new Ce({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(t=>null),outputMasks:this.outputs.map(t=>null),inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs.map(t=>t.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(e=>e.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new p("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let r=0;for(const s of this.layers)for(const t of s.weights){if(null!=n[t.originalName])throw new p("Duplicate weight name: "+t.originalName);n[t.originalName]=t,r++}const a=[];for(const s in t){let r=s;if(null==n[s]){const t=s.split("/"),e=t.slice(0,-2).concat([t[t.length-1]]);r=e.join("/")}if(null!=n[r])a.push([n[r],t[s]]);else if(e)throw new p("Provided weight data has no target variable: "+s);delete n[r]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new p(`${t.length} of ${r} weights are not set: `+t)}Oe(a)}updatedConfig(){const t=this.getConfig(),e={};return e["className"]=this.getClassName(),e["config"]=t,e["kerasVersion"]="tfjs-layers "+qn,e["backend"]="TensorFlow.js",e}toJSON(t,e=!0){const n=Hn(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return Object(o["tidy"])(()=>{t=v(t);const n=new Xn;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return Jn(this.outputs,n,e)})}computeMask(t,e){return Object(o["tidy"])(()=>{let n;return t=v(t),n=null==e?b(null,t.length):v(e),this.runInternalGraph(t,n)[1]})}computeOutputShape(t){const e=me(t);if(e.length!==this.inputLayers.length)throw new p(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let i=0;i<e.length;i++){const t=this.inputLayers[i],r=e[i],a=t.name+"_0_0";n[a]=r}const r=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(j);if(r.length>1)for(const i of r){const t=this.nodesByDepth[i];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map(t=>t.id).indexOf(t.id))continue;const r=[];for(let o=0;o<e.inboundLayers.length;o++){const t=e.inboundLayers[o],a=e.nodeIndices[o],s=e.tensorIndices[o],i=`${t.name}_${a}_${s}`,u=n[i];r.push(u)}const a=t.computeOutputShape(x(r)),s=me(a),i=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++){const r=`${t.name}_${i}_${e}`;n[r]=s[e]}}}const a=[],s=[];for(let i=0;i<this.outputLayers.length;i++){const t=this.outputLayers[i],e=this.outputLayersNodeIndices[i],n=this.outputLayersTensorIndices[i],r=`${t.name}_${e}_${n}`;s.push(r)}for(let i=0;i<s.length;i++){const t=s[i];g(t in n),a.push(n[t])}return x(a)}runInternalGraph(t,e){null==e&&(e=b(null,t.length));const n={};for(let o=0;o<this.inputs.length;++o){const r=this.inputs[o],a=t[o],s=e[o];n[r.id]=[a,s]}const r=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(j);for(const o of r){const t=this.nodesByDepth[o];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(const e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,u,c={};if(null!=e.callArgs&&(c=e.callArgs),1===s.length){const[e,n]=s[0];null==c["mask"]&&(c["mask"]=n),o=v(t.call(e,c)),u=v(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map(t=>t[0]),i=s.map(t=>t[1]),null==c["mask"]&&(c["mask"]=i),o=v(t.call(r,c)),u=v(t.computeMask(r,i));if(t.activityRegularizer)throw new f("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<a.length;++t){const e=a[t],r=o[t],s=u[t];n[e.id]=[r,s]}}}}const a=[],s=[],i=[];for(const o of this.outputs){g(o.id in n,`Could not compute output ${o.name} : ${o.id}`);const[t,e]=n[o.id];i.push(t.shape),a.push(t),s.push(e)}return[a,s,i]}buildNodeConversionMap(t){const e={};let n;for(const r of this.layers){n=r instanceof rr?1:0;for(let t=0;t<r.inboundNodes.length;t++){const a=rr.nodeKey(r,t);this.containerNodes.has(a)&&(e[a]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new p(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new p("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===t)return n;throw new p("No such layer: "+t)}calculateLosses(){return Object(o["tidy"])(()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const r=rr.nodeKey(e,n);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const i of this.layers){const t=i.getClassName(),r=i.getConfig(),a=[];for(let n=0;n<i.inboundNodes.length;n++){const t=i.inboundNodes[n],r=rr.nodeKey(i,n);let o={};if(this.containerNodes.has(r)){if(t.callArgs)try{JSON.stringify(t.callArgs),o=t.callArgs}catch(s){console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: `+t.callArgs+". They will not be included in the serialized model (and thus will be missing at deserialization time)."),o={}}if(t.inboundLayers.length>0){const n=[];for(let r=0;r<t.inboundLayers.length;r++){const a=t.inboundLayers[r],s=t.nodeIndices[r],i=t.tensorIndices[r],u=rr.nodeKey(a,s);let c=e[u];null==c&&(c=0),n.push([a.name,c,i,o])}a.push(n)}}}const o={};o["name"]=i.name,o["className"]=t,o["config"]=r,o["inboundNodes"]=a,n.push(o)}t["layers"]=n;const r=[];for(let i=0;i<this.inputLayers.length;i++){const t=this.inputLayers[i],n=this.inputLayersNodeIndices[i],a=rr.nodeKey(t,n);if(!this.containerNodes.has(a))continue;let s=e[a];null!==s&&void 0!==s||(s=0);const o=this.inputLayersTensorIndices[i];r.push([t.name,s,o])}t["inputLayers"]=r;const a=[];for(let i=0;i<this.outputLayers.length;i++){const t=this.outputLayers[i],n=this.outputLayersNodeIndices[i],r=rr.nodeKey(t,n);if(!this.containerNodes.has(r))continue;let s=e[r];null!==s&&void 0!==s||(s=0);const o=this.outputLayersTensorIndices[i];a.push([t.name,s,o])}return t["outputLayers"]=a,t}static fromConfig(t,e,n={},r=!1){const a={},s={};function i(t,e){t.name in s?s[t.name].push(e):s[t.name]=[e]}function o(t,e){const n=[];let r;for(const s of e){const o=s[0],u=s[1],c=s[2];if(r=null==s[3]?{}:s[3],!(o in a))return void i(t,e);const l=a[o];if(l.inboundNodes.length<=u)return void i(t,e);const d=l.inboundNodes[u];n.push(d.outputTensors[c])}n.length>0&&t.apply(x(n),r)}function u(t){const n=t["name"],s=qe(t,null!=e["customObjects"]?e["customObjects"]:{});s.setFastWeightInitDuringBuild(r),a[n]=s;const o=t["inboundNodes"];o.forEach(t=>{if(!(t instanceof Array))throw new p("Corrupted configuration, expected array for nodeData: "+t);i(s,t)})}const c=e["name"],l=e["layers"];for(const p of l)u(p);while(!E(s))for(const t of l){const e=a[t["name"]];if(e.name in s){const t=s[e.name];delete s[e.name];for(const n of t)o(e,n)}}const d=[],h=[],f=e["inputLayers"];for(const p of f){const t=p[0],e=p[1],n=p[2];g(t in a);const r=a[t],s=r.inboundNodes[e].outputTensors;d.push(s[n])}const m=e["outputLayers"];for(const p of m){const t=p[0],e=p[1],n=p[2];g(t in a);const r=a[t],s=r.inboundNodes[e].outputTensors;h.push(s[n])}return new t({inputs:d,outputs:h,name:c})}get stateful(){if(this._stateful)throw new p("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){Object(o["tidy"])(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ar(t,e,n){const r=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>null);if(1===r)return Array.isArray(t)&&1===t.length?t:"object"===typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==r)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"===typeof t&&Object.keys(t).length>0&&"object"===typeof t[Object.keys(t)[0]]){const n=[];return e.forEach(e=>{e in t?n.push(t[e]):n.push(null)}),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}function sr(t,e){return ar(t,e,"classWeight")}async function ir(t,e,n,r){if(null!=e||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=Object(o["tidy"])(()=>{if(1===t.shape.length)return t.clone();if(2===t.shape.length){if(t.shape[1]>1){const e=1;return t.argMax(e)}if(1===t.shape[1])return t.reshape([t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await e.data());Object(o["dispose"])(e);const a=[];return r.forEach(t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);a.push(n[t])}),Object(o["tensor1d"])(a,"float32")}return null}function or(t,e){return Object(o["mul"])(t,e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const ur=32;function cr(t,e){let n,r;const a=e;n=a["xs"],r=a["ys"],o["util"].assert(null!=n&&null!=r,()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+e);const s=lr("input",t.inputNames,n),i=lr("output",t.outputNames,r),u=s[0].shape[0];o["util"].assert(s.length===t.inputs.length,()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: `+JSON.stringify(t.inputNames)+")"),o["util"].assert(i.length===t.outputs.length,()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: `+JSON.stringify(t.outputNames)+")");for(let c=0;c<s.length;c++)o["util"].assert(s[c].shape[0]===u,()=>`Batch size mismatch: input ${t.inputNames[c]} has ${s[c].shape[0]}; expected  ${u} based on input ${t.inputNames[0]}.`);for(let c=0;c<i.length;c++)o["util"].assert(i[c].shape[0]===u,()=>`Batch size mismatch: output ${t.outputNames[c]} has ${i[c].shape[0]}; expected  ${u} based on input ${t.inputNames[0]}.`);return{xs:s,ys:i}}function lr(t,e,n){if(n instanceof o["Tensor"])return[n];if(Array.isArray(n))return o["util"].assert(n.length===e.length,()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`),n;{const r=[];for(const a of e){if(null==n[a])throw new p(`The feature data generated by the dataset lacks the required ${t} key '${a}'.`);r.push(n[a])}return r}}function dr(t){if(3===t.length)throw new f("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}async function hr(t,e,n){const r=null!=n.batchesPerEpoch;if(o["util"].assert(null!=t.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),o["util"].assert(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),o["util"].assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>"For fitDataset(), config.epochs is expected to be a positive integer, but got "+n.epochs),o["util"].assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>"For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got "+n.batchesPerEpoch),o["util"].assert(null==n["validationSplit"],()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const a=null!=n.validationData;let s,i;if(a)if(fr(n.validationData))o["util"].assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got "+n.validationBatches);else{const t=dr(n.validationData);s=t.xs,i=t.ys}const u=t.makeTrainFunction(),c=t.getDedupedMetricsNames();let l;l=a?c.slice().concat(c.map(t=>"val_"+t)):c.slice();const d=Ue(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:f}=He(d,h,n.epochs,null,null,pr(e,n),null,a,l);p.setModel(t),t.history=f,await p.onTrainBegin(),t.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,b=await e.iterator();while(m<n.epochs){const l={};await p.onEpochBegin(m);let d=0,h=0;r||(b=await e.iterator());while(!r||d<n.batchesPerEpoch){const e=await b.next();if(r&&e.done){console.warn("You provided `batchesPerEpoch` as "+n.batchesPerEpoch+", but your dataset iterator ran out of data after "+d+" batches; interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:r,ys:a}=cr(t,e.value),s={};s["batch"]=h,s["size"]=r[0].shape[0],await p.onBatchBegin(h,s);const i=[];if(null!=n.classWeight){const e=sr(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)i.push(await ir(a[t],null,e[t]))}const l=r.concat(a).concat(i),f=u(l);o["dispose"](l);for(let t=0;t<c.length;++t){const e=c[t],n=f[t];s[e]=n,o["keep"](n)}await p.onBatchEnd(h,s),_e(s),h++,d++}if(r?d>=n.batchesPerEpoch:e.done){if(a){let e;e=fr(n.validationData)?v(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):v(t.evaluate(s,i,{batchSize:null==n.validationBatchSize?ur:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)l["val_"+t.metricsNames[n]]=e[n]}break}if(t.stopTraining_)break}if(await p.onEpochEnd(m,l),m++,t.stopTraining_)break}return await p.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}function pr(t,e){let n=null;return null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size),n}function fr(t){return"function"===typeof t.iterator}function mr(t){return"function"===typeof t.next}async function br(t,e,n){n=n||{};const r=null!=n.batches,a=t.testFunction;let s=[];if(n.verbose>0)throw new f("Verbose mode is not implemented yet.");o["util"].assert(!r||n.batches>0&&Number.isInteger(n.batches),()=>"Test loop expects `batches` to be a positive integer, but received "+JSON.stringify(n.batches));const i=mr(e)?e:await e.iterator();let u=0,c=0;while(!r||c<n.batches){const e=await i.next();if(s=o["tidy"](()=>{if(e.value){const{xs:n,ys:r}=cr(t,e.value),i=n.concat(r),l=o["tidy"](()=>a(i));if(o["dispose"](i),0===c)for(let t=0;t<l.length;++t)s.push(Object(o["scalar"])(0));const d=i[0].shape[0];for(let t=0;t<l.length;++t){const e=l[t],n=s[t];s[t]=o["tidy"](()=>o["add"](s[t],o["mul"](d,e))),c>0&&o["dispose"](n)}o["dispose"](l),u+=d,++c}return s}),e.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let l=0;l<s.length;++l){const t=s[l];s[l]=o["div"](s[l],u),o["dispose"](t)}return x(s)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function gr(t){o["util"].assert(t>0&&Number.isInteger(t),()=>"batchSize is required to be a positive integer, but got "+t)}function yr(t,e,n){return null==t?[null]:Array.isArray(t)?t.map(t=>kt(t,e,n-e)):kt(t,e,n-e)}function xr(t,e){return o["tidy"](()=>null==t?null:Array.isArray(t)?t.map(t=>xr(t,e)):Et(t,"int32"===e.dtype?e:e.toInt()))}function vr(t,e){const n=[];let r=0,a=null;while(r<t)a=r+e,a>=t&&(a=t),n.push([r,a]),r=a;return n}async function wr(t,e,n,r,a,s,i,u,c,l,d,h,m,b,g){null==a&&(a=32),null==s&&(s=1),null==d&&(d=!0),null==m&&(m=0);let y=!1;if(null!=c&&null!=l&&(y=!0),null!=g&&(y=!0,null==b))throw new p("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const x=t.checkNumSamples(n,a,b,"steps_per_epoch");let v;null!=x&&(v=bt(0,x)),null==i&&(i=1);const{callbackList:w,history:k}=He(u,i,s,m,x,b,a,y,h);w.setModel(t),t.history=k,await w.onTrainBegin(),t.stopTraining_=!1;for(let p=m;p<s;++p){await w.onEpochBegin(p);const s={};if(null!=b)throw new f("stepsPerEpoch mode is not implemented yet.");{if("batch"===d)throw new f("batch shuffling is not implemneted yet");d&&o["util"].shuffle(v);const i=Object(o["tensor1d"])(v),u=vr(x,a);for(let d=0;d<u.length;++d){const h={};if(await w.onBatchBegin(d,h),o["tidy"](()=>{const p=u[d][0],f=u[d][1],m=kt(i,p,f-p);h["batch"]=d,h["size"]=f-p;const b=xr(n,m),g=e(b);for(let t=0;t<r.length;++t){const e=r[t],n=g[t];h[e]=n,o["keep"](n)}if(d===u.length-1&&y){const e=t.testLoop(c,l,a);for(let t=0;t<r.length;++t){const n=r[t],a=e[t];o["keep"](a),s["val_"+n]=a}}}),await w.onBatchEnd(d,h),_e(h),t.stopTraining_)break}i.dispose()}if(await w.onEpochEnd(p,s),t.stopTraining_)break}return await w.onTrainEnd(),await t.history.syncData(),t.history}async function kr(t,e,n,r={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,i,u,c,l,d;t.isTraining=!0;try{const h=null==r.batchSize?32:r.batchSize;gr(h);const m=!1,b=await t.standardizeUserData(e,n,r.sampleWeight,r.classWeight,m,h);a=b[0],s=b[1],d=b[2];let g,y=!1;if(null!=r.validationData&&r.validationData.length>0){if(y=!0,2!==r.validationData.length)throw 3===r.validationData.length?new f("validationData including sample weights is not supported yet."):new p("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+r.validationData+" is invalid.");i=r.validationData[0],u=r.validationData[1];const e=!0,n=await t.standardizeUserData(i,u,null,null,e,h);c=n[0],l=n[1],g=c.concat(l)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){y=!0;const t=Math.floor(a[0].shape[0]*(1-r.validationSplit)),e=a[0].shape[0];c=yr(a,t,e),a=yr(a,0,t),l=yr(s,t,e),s=yr(s,0,t),g=c.concat(l)}else null!=r.validationSteps&&(y=!0);const x=a.concat(s).concat(d);t.checkTrainableWeightsConsistency();const v=t.makeTrainFunction(),w=t.getDedupedMetricsNames();let k,O;y?(t.makeTestFunction(),k=t.testFunction,O=w.slice().concat(w.map(t=>"val_"+t))):(k=null,g=[],O=w.slice());const I=Ue(r.callbacks,r.yieldEvery),N=await wr(t,v,x,w,h,r.epochs,r.verbose,I,k,g,r.shuffle,O,r.initialEpoch,null,null);return N}finally{t.isTraining=!1,Ir(a,e),Ir(s,n),Ir(c,i),Ir(l,u),null!=d&&o["dispose"](d)}}function Or(t){const e=[];t instanceof o["Tensor"]&&(t=[t]);for(let n=0;n<t.length;++n){const r=t[n];if(1===r.rank)e.push(yt(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function Ir(t,e){if(null==t)return;const n=[];if(e instanceof o["Tensor"])n.push(e.id);else if(Array.isArray(e))e.forEach(t=>n.push(t.id));else if(null!=e)for(const a in e){const t=e[a];n.push(t.id)}const r=[];if(t instanceof o["Tensor"])-1===n.indexOf(t.id)&&r.push(t);else if(Array.isArray(t))t.forEach(t=>{-1===n.indexOf(t.id)&&r.push(t)});else if(null!=t)for(const a in t){const e=t[a];-1===n.indexOf(e.id)&&r.push(e)}r.forEach(t=>{t.isDisposed||t.dispose()})}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Nr(t){return t instanceof o["Tensor"]}function Sr(t){return Array.isArray(t)}function Cr(t){return!Nr(t)&&!Sr(t)}function jr(t,e,n,r=!0,a=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(Sr(t)&&t.length>0)e=!0;else if(Cr(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new p(`Error when checking model ${a} expected no data, but got `+t)}return[]}if(null==t)return e.map(t=>null);let s;if(Cr(t)){t=t,s=[];for(const n of e){if(null==t[n])throw new p(`No data provided for "${n}". Need data for each key in: `+e);s.push(t[n])}}else if(Sr(t)){if(t=t,t.length!==e.length)throw new p(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): `+t);s=t}else{if(t=t,e.length>1)throw new p(`The model ${a} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape `+t.shape);s=[t]}if(s=Or(s),null!=n)for(let i=0;i<e.length;++i){if(null==n[i])continue;const t=s[i];if(t.shape.length!==n[i].length)throw new p(`Error when checking ${a}: expected ${e[i]} to have ${n[i].length} dimension(s). but got array with shape `+t.shape);for(let s=0;s<n[i].length;++s){if(0===s&&!r)continue;const o=t.shape[s],u=n[i][s];if(null!=u&&u>=0&&o!==u)throw new p(`Error when checking ${a}: expected ${e[i]} to have shape [${n[i]}], but got array with shape [${t.shape}].`)}}return s}function Tr(t,e,n){const r=T(t.map(t=>t.shape[0]));r.sort();const a=T(e.map(t=>t.shape[0]));if(a.sort(),r.length>1)throw new p("All input Tensors (x) should have the same number of samples. Got array shapes: "+JSON.stringify(t.map(t=>t.shape)));if(a.length>1)throw new p("All target Tensors (y) should have the same number of samples. Got array shapes: "+JSON.stringify(e.map(t=>t.shape)));if(r.length>0&&a.length>0&&!o["util"].arraysEqual(r,a))throw new p(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}function Er(t,e,n){const r=[Xe,on,rn];for(let a=0;a<t.length;++a){const s=t[a],i=e[a],o=n[a];if(null!=i){if(i===rn&&1===s.shape[s.shape.length-1])throw new p(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const t=s.shape.slice(1),e=o.slice(1);for(let n=0;n<t.length;++n){const r=t[n],a=e[n];if(null!=a&&r!==a)throw new p(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function Ar(t,e,n,r=!0,a=""){let s;if(Array.isArray(t)){if(t.length!==e.length)throw new p(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);s=t}else{if(e.length>1)throw new p(`The model expects ${e.length} ${a} Tensors, but only received one Tensor. Found: array with shape `+JSON.stringify(t.shape)+".");s=[t]}if(null!=n)for(let i=0;i<e.length;++i){if(null==n[i])continue;const t=s[i];if(t.shape.length!==n[i].length)throw new p(`Error when checking ${a}: expected ${e[i]} to have ${n[i].length} dimension(s), but got array with shape `+JSON.stringify(t.shape));for(let s=0;s<n[i].length;++s){if(0===s&&!r)continue;const o=t.shape[s],u=n[i][s];if(null!=u&&u!==o)throw new p(`Error when checking ${a}: expected ${e[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(t.shape)}.`)}}}function $r(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>[]);let n;if("string"===typeof t||"function"===typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!==typeof t)throw new TypeError("Type of metrics argument not understood. Expected an string,function, Array, or Object, found: "+t);n=t}if(Array.isArray(n))return e.map(t=>n);{const t=[];for(const r of e){let e=n.hasOwnProperty(r)?n[r]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}const Rr="layers-model";class Dr extends rr{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new p("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");zn(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"===typeof t.optimizer)this.optimizer_=Dn(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof o["Optimizer"]))throw new p("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"===typeof t.loss||"function"===typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new p(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map(t=>hn(t))}else{const n=hn(t.loss);this.outputs.forEach(t=>{e.push(n)})}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new p(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: `+this.outputNames);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(hn(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){const t=this.internalOutputShapes[s],e=this.outputNames[s];this.feedOutputNames.push(e),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[s])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],st("loss",()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}});const r=$r(t.metrics,this.outputNames),a=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};st("metric",()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=r[t],s=e=>{const n="";let r,s,i;for(const o of e){if("string"===typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const e=this.internalOutputShapes[t];let a;1===e[e.length-1]||this.lossFunctions[t]===on?-1!==["accuracy","acc"].indexOf(o)?s=pn:-1!==["crossentropy","ce"].indexOf(o)&&(s=vn):this.lossFunctions[t]===an?-1!==["accuracy","acc"].indexOf(o)?s=wn:-1!==["crossentropy","ce"].indexOf(o)&&(s=En):-1!==["accuracy","acc"].indexOf(o)?s=fn:-1!==["crossentropy","ce"].indexOf(o)&&(s=jn),-1!==["accuracy","acc"].indexOf(o)?a="acc":-1!==["crossentropy","ce"].indexOf(o)&&(a="ce"),i=s,r=n+a}else{const t=$n(o);i=t,r=n+Rn(o)}let e;st(r,()=>{e=i}),a(t,r,e)}};s(e)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const r=null==n.batchSize?32:n.batchSize;gr(r);const a=!0,s=this.standardizeUserDataXY(t,e,a,r);try{const a=s[0].concat(s[1]);this.makeTestFunction();const i=this.testFunction,o=this.testLoop(i,a,r,n.verbose,n.steps);return x(o)}finally{Ir(s[0],t),Ir(s[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),br(this,t,e)}checkNumSamples(t,e,n,r="steps"){let a;if(null!=n){if(a=null,null!=e)throw new p(`If ${r} is set, batchSize must be null or undefined.Got batchSize = `+e)}else{if(null==t)throw new p("Either the input data should have a defined shape, or "+r+" shoud be specified.");a=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return a}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new p("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),r=n?e:[e],a=this.retrieveSymbolicTensors(r),s=new Xn;if(t instanceof o["Tensor"]&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new p(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)s.add(this.inputs[e],t[e])}else for(const o of this.inputs){const e=t[o.name];if(null==e)throw new p("No value is provided for the model's input "+o.name);s.add(o,e)}const i=Jn(a,s);return n?i:i[0]}retrieveSymbolicTensors(t){const e=b(null,t.length);let n=t.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],s=a.map(t=>t.name);for(let r=0;r<t.length;++r){const i=s.indexOf(t[r]);if(-1!==i&&(e[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach((e,r)=>{null==e&&n.push(t[r])}),new p("Cannot find SymbolicTensors for output name(s): "+JSON.stringify(n))}return e}predictLoop(t,e=32,n=!1){return o["tidy"](()=>{const r=this.checkNumSamples(t);if(n)throw new f("Verbose predictLoop() is not implemented yet.");const a=vr(r,e),s=this.outputs.map(t=>[]);for(let e=0;e<a.length;++e){const n=o["tidy"](()=>{const n=a[e][0],r=a[e][1],s=yr(t,n,r),i=[];if(Array.isArray(s))for(let t=0;t<s.length;++t)i.push({key:this.inputs[t],value:s[t]});else i.push({key:this.inputs[0],value:s});const o=new Xn(i);return Jn(this.outputs,o)});n.forEach((t,e)=>s[e].push(t))}return x(s.map(t=>o["concat"](t,0)))})}predict(t,e={}){const n=Or(t);Ar(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==e.batchSize?32:e.batchSize;return gr(r),this.predictLoop(n,r)}finally{Ir(n,t)}}predictOnBatch(t){Ar(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,r){if(null==this.optimizer_)throw new h("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let s=0;s<this.feedOutputShapes.length;++s){const t=this.feedOutputShapes[s],e=this.feedLossFns[s];e===an?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(t=jr(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=jr(e,this.feedOutputNames,a,!1,"target"),Tr(t,e,null),Er(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&t[0].shape[0]%r!==0)throw new p(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,r,a=!0,s){const[i,o]=this.standardizeUserDataXY(t,e,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const t=sr(r,this.outputNames);u=[];for(let e=0;e<t.length;++e)u.push(await ir(o[e],null,t[e]))}return[i,o,u]}testLoop(t,e,n,r=0,a){return o["tidy"](()=>{const s=this.checkNumSamples(e,n,a,"steps"),i=[];if(r>0)throw new f("Verbose mode is not implemented yet.");if(null!=a)throw new f("steps mode in testLoop() is not implemented yet");{const r=vr(s,n),a=Object(o["tensor1d"])(bt(0,s));for(let n=0;n<r.length;++n){const s=r[n][0],u=r[n][1],c=kt(a,s,u-s),l=xr(e,c),d=t(l);if(0===n)for(let t=0;t<d.length;++t)i.push(Object(o["scalar"])(0));for(let t=0;t<d.length;++t){const e=d[t];i[t]=o["add"](i[t],o["mul"](u-s,e))}}for(let t=0;t<i.length;++t)i[t]=o["div"](i[t],s)}return i})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const r=t[n];let a=r;if(y(t,r)>1){const e=y(t.slice(0,n),r);a+="_"+e}e.push(a)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const i=new Xn(t),u=Jn(this.outputs,i,{training:!0});let c;for(let n=0;n<this.lossFunctions.length;++n){const t=this.lossFunctions[n];let s=t(r[n],u[n]);null!=a[n]&&(s=or(s,a[n]));const i=o["mean"](s);e.push(i),c=0===n?s:o["add"](c,s)}for(let n=0;n<this.metricsTensors.length;++n){let t;if(this.outputs.length>1&&n<this.outputs.length)t=e[n];else{const e=this.metricsTensors[n][0],a=this.metricsTensors[n][1];t=o["mean"](e(r[a],u[a]))}o["keep"](t),s.push(t)}return c=o["mean"](c),this.calculateLosses().forEach(t=>{c=o["add"](c,t)}),c},u=this.collectedTrainableWeights.map(t=>t.read()),c=!0,l=this.optimizer_.minimize(i,c,u);return[l].concat(s)}}makeTestFunction(){this.testFunction=t=>o["tidy"](()=>{const e=[];let n;const r=t.slice(0,this.inputs.length),a=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let t=0;t<this.inputs.length;++t)s.push({key:this.inputs[t],value:r[t]});const i=new Xn(s),u=Jn(this.outputs,i);for(let t=0;t<this.lossFunctions.length;++t){const r=this.lossFunctions[t],s=o["mean"](r(a[t],u[t]));n=0===t?s:o["add"](n,s),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],r=this.metricsTensors[t][1],s=o["mean"](n(a[r],u[r]));e.push(s)}return e})}async fit(t,e,n={}){return kr(this,t,e,n)}async fitDataset(t,e){return hr(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),r=n[0],a=n[1],s=this.makeTrainFunction(),i=s(r.concat(a)),u=[];for(const o of i){const t=await o.data();u.push(t[0])}return o["dispose"](i),x(u)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let s=0;s<r.length;++s)n&&!r[s].trainable||e.push({name:r[s].originalName,tensor:a[s]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=o["memory"]().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-o["memory"]().numTensors}return t}getLossIdentifiers(){let t;if("string"===typeof this.loss)t=w(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!==typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(t=>w(t))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const r of e){if("string"!==typeof n[r])throw new Error("Serialization of non-string loss is not supported.");t[r]=w(n[r])}}return t}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[w(Rn(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>w(Rn(t)));{const t={};for(const e in this.metrics)t[e]=w(Rn(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=Gn(t.optimizer_config),n=qe(e);let r,a;if("string"===typeof t.loss)r=k(t.loss);else if(Array.isArray(t.loss))r=t.loss.map(t=>k(t));else if(null!=t.loss){r={};for(const e in t.loss)r[e]=k(t.loss[e])}if(Array.isArray(t.metrics))a=t.metrics.map(t=>k(t));else if(null!=t.metrics){a={};for(const e in t.metrics)a[e]=k(t.metrics[e])}this.compile({loss:r,metrics:a,optimizer:n})}async save(t,e){if("string"===typeof t){const e=o["io"].getSaveHandlers(t);if(0===e.length)throw new p(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new p(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new p("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await o["io"].encodeWeights(this.getNamedWeights(e)),r=!1,a=null,s=this.toJSON(a,r),i={modelTopology:s,format:Rr,generatedBy:"TensorFlow.js tfjs-layers v"+qn,convertedBy:null},u=null!=e&&e.includeOptimizer;if(u&&null!=this.optimizer){i.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:r}=await o["io"].encodeWeights(await this.optimizer.getWeights(),t);n.specs.push(...r),n.data=o["io"].concatenateArrayBuffers([n.data,e])}if(null!=this.userDefinedMetadata){const t=!0;_n(this.userDefinedMetadata,this.name,t),i.userDefinedMetadata=this.userDefinedMetadata}return i.weightData=n.data,i.weightSpecs=n.specs,t.save(i)}setUserDefinedMetadata(t){_n(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Dr.className="Model",o["serialization"].registerClass(Dr);class Fr extends Dr{}async function _r(t,e){if(null==e&&(e={}),"string"===typeof t){const n=o["io"].getLoadHandlers(t,e);if(0===n.length)n.push(o["io"].browserHTTPRequest(t,e));else if(n.length>1)throw new p(`Found more than one (${n.length}) load handlers for URL '${t}'`);t=n[0]}return Mr(t,void 0,e)}async function Mr(t,e,n){if(null==n&&(n={}),null==t.load)throw new p("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await t.load();let a=r.modelTopology;null!=a["model_config"]&&(a=a["model_config"]);const s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,u=qe(Gn(a),e,i),c=r.trainingConfig;if(null!=c&&u.loadTrainingConfig(c),null!=r.userDefinedMetadata&&u.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new p("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:t,optimizerWeights:e}=zr(r.weightData,r.weightSpecs);u.loadWeights(t,s),null!=u.optimizer&&e.length>0&&await u.optimizer.setWeights(e),Object(o["dispose"])(t),Object(o["dispose"])(e.map(t=>t.tensor))}return u}function zr(t,e){const n=o["io"].decodeWeights(t,e),r={},a=[];return e.forEach(t=>{"optimizer"===t.group?a.push({name:t.name,tensor:n[t.name]}):r[t.name]=n[t.name]}),{modelWeights:r,optimizerWeights:a}}Fr.className="Functional",o["serialization"].registerClass(Fr);class Lr extends Dr{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:pe("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){const e=t.inboundNodes[0].outputTensors[0].shape;if(e.some(t=>t<0))throw new p("Negative dimension size caused by adding layer "+t.name+" with input shape ["+t.inboundNodes[0].inputTensors[0].shape+"]")}add(t){const e=t instanceof Lr||t instanceof Dr;let n;if(e){if(n=t,1!==n.outputs.length)throw new p("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new p("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new p("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=De({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new p(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new p("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=$e(this.outputs[0])}this.inboundNodes=[],new Ce({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:b(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(ge(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Dr({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new h("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new h("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new h("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new h("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},r=!1){let a,s={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0]["className"])throw new p("Legacy serialization format not supported yet.");a=e}else o["util"].assert(null!=e["layers"],()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),a=e["layers"],delete e["layers"],s=e;const i=new t(s);if(!(i instanceof Lr))throw new f("Sequential.fromConfig called on non-Sequential input: "+i);for(const o of a){const t=void 0,e=qe(o,t,r);r&&e.setFastWeightInitDuringBuild(!0),i.add(e)}return i}set stopTraining(t){if(null==this.model)throw new p("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new p("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n["className"]=e.getClassName(),n["config"]=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}function Pr(t){return new Lr(t)}function Br(t,e){return null==e&&(e={}),_r(t,e)}function Wr(t){return De(t)}Lr.className="Sequential",o["serialization"].registerClass(Lr);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Vr extends o["serialization"].Serializable{getConfig(){return{}}}class Ur extends Vr{apply(t,e=1){return Dt(t,e)}}Ur.className="elu",o["serialization"].registerClass(Ur);class Gr extends Vr{apply(t){return o["selu"](t)}}Gr.className="selu",o["serialization"].registerClass(Gr);class Hr extends Vr{apply(t){return o["relu"](t)}}Hr.className="relu",o["serialization"].registerClass(Hr);class qr extends Vr{apply(t){return Object(o["tidy"])(()=>o["minimum"](6,o["relu"](t)))}}qr.className="relu6",o["serialization"].registerClass(qr);class Kr extends Vr{apply(t){return t}}Kr.className="linear",o["serialization"].registerClass(Kr);class Xr extends Vr{apply(t){return o["sigmoid"](t)}}Xr.className="sigmoid",o["serialization"].registerClass(Xr);class Yr extends Vr{apply(t){return Mt(t)}}Yr.className="hardSigmoid",o["serialization"].registerClass(Yr);class Zr extends Vr{apply(t){return o["softplus"](t)}}Zr.className="softplus",o["serialization"].registerClass(Zr);class Jr extends Vr{apply(t){return Ft(t)}}Jr.className="softsign",o["serialization"].registerClass(Jr);class Qr extends Vr{apply(t){return o["tanh"](t)}}Qr.className="tanh",o["serialization"].registerClass(Qr);class ta extends Vr{apply(t,e=-1){return o["softmax"](t,e)}}ta.className="softmax",o["serialization"].registerClass(ta);class ea extends Vr{apply(t,e=-1){return o["logSoftmax"](t,e)}}ea.className="logSoftmax",o["serialization"].registerClass(ea);class na extends Vr{apply(t,e=1){return Object(o["tidy"])(()=>o["sigmoid"](t.mul(e)).mul(t))}}function ra(t){return t.getClassName()}function aa(t,e={}){return S(t,o["serialization"].SerializationMap.getMap().classNameMap,e,"activation")}function sa(t){if(null==t){const t={className:"linear",config:{}};return aa(t)}if("string"===typeof t){const e={};return e["className"]=t,e["config"]={},aa(e)}return t instanceof Vr?t:aa(t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ia(t){if(null!=t&&"object"!==typeof t)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an object, but received: "+t)}na.className="swish",o["serialization"].registerClass(na);class oa extends o["serialization"].Serializable{}class ua extends oa{constructor(t){super(),ia(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return Object(o["tidy"])(()=>{let e=Object(o["zeros"])([1]);return this.hasL1&&(e=Object(o["add"])(e,Object(o["sum"])(o["mul"](this.l1,Object(o["abs"])(t))))),this.hasL2&&(e=Object(o["add"])(e,Object(o["sum"])(o["mul"](this.l2,At(t))))),e.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e["l1"],l2:e["l2"]})}}ua.className="L1L2",o["serialization"].registerClass(ua);const ca={l1l2:"L1L2"};function la(t){return I(t)}function da(t,e={}){return S(t,o["serialization"].SerializationMap.getMap().classNameMap,e,"regularizer")}function ha(t){if(null==t)return null;if("string"===typeof t){const e=t in ca?ca[t]:t,n={className:e,config:{}};return da(n)}return t instanceof oa?t:da(t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class pa extends Te{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=be(t);let n=Object(o["relu"])(t);return null!=this.maxValue&&(n=Object(o["clipByValue"])(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}pa.className="ReLU",o["serialization"].registerClass(pa);class fa extends Te{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=be(t);return Object(o["leakyRelu"])(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}fa.className="LeakyReLU",o["serialization"].registerClass(fa);class ma extends Te{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=ce(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=ha(t.alphaRegularizer),this.alphaConstraint=H(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!==typeof t.sharedAxes)throw new p("Expected sharedAxes to be a number or an array of numbers, but got "+t.sharedAxes);this.sharedAxes=[t.sharedAxes]}}build(t){t=ge(t);const e=t.slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)e[r-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<t.length;++r)n[r]=t[r];this.inputSpec=[new Ie({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=be(t),Object(o["prelu"])(t,this.alpha.read())}getConfig(){const t={alphaInitializer:ue(this.alphaInitializer),alphaRegularizer:la(this.alphaRegularizer),alphaConstraint:U(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}ma.className="PReLU",o["serialization"].registerClass(ma);class ba extends Te{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new f(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=be(t);return Object(o["elu"])(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}ba.className="ELU",o["serialization"].registerClass(ba);class ga extends Te{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=be(t);return n.mul(gt(n.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}ga.className="ThresholdedReLU",o["serialization"].registerClass(ga);class ya extends Te{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new ta).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=be(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function xa(t,e,n){if("number"===typeof t)return b(t,e);if(t.length!==e)throw new p(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let r=0;r<e;++r){const a=t[r];if(!dt(a))throw new p(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number `+a)}return t}function va(t,e,n,r,a=1){if(null==t)return t;const s=e+(e-1)*(a-1);let i;return i="same"===n?t:t-s+1,Math.floor((i+r-1)/r)}function wa(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+mt([n-e,0]);else{if("same"!==r)throw new p(`Unsupport padding mode: ${r}.`);t*=e}return t}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ka(t,e){return Object(o["tidy"])(()=>(Q(e),"channelsFirst"===e?o["transpose"](t,[0,2,3,1]):t))}function Oa(t,e){return Object(o["tidy"])(()=>(Q(e),"channelsFirst"===e?o["transpose"](t,[0,2,3,4,1]):t))}function Ia(t,e,n,r=1,a="valid",s,i=1){return Object(o["tidy"])(()=>{if(null==s&&(s=l()),Q(s),3!==t.shape.length)throw new p("The input of a conv1dWithBias operation should be 3, but is "+t.shape.length+" instead.");if(3!==e.shape.length)throw new p("The kernel for a conv1dWithBias operation should be 3, but is "+e.shape.length+" instead");if(null!=n&&1!==n.shape.length)throw new p("The bias for a conv1dWithBias operation should be 1, but is "+e.shape.length+" instead");if("channelsFirst"===s&&(t=o["transpose"](t,[0,2,1])),"causal"===a)throw new f("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let u=o["conv1d"](t,e,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(u=Rt(u,n)),u})}function Na(t,e,n,r=[1,1],a="valid",s,i,u=null){return Object(o["tidy"])(()=>{if(null==s&&(s=l()),Q(s),3!==t.rank&&4!==t.rank)throw new p(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new p(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let c=ka(t,s);if("causal"===a)throw new f("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return c=o["fused"].conv2d({x:c,filter:e,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:u}),"channelsFirst"===s&&(c=o["transpose"](c,[0,3,1,2])),c})}function Sa(t,e,n,r=[1,1,1],a="valid",s,i){return Object(o["tidy"])(()=>{if(null==s&&(s=l()),Q(s),4!==t.rank&&5!==t.rank)throw new p("conv3dWithBias expects input to be of rank 4 or 5, but received "+t.rank+".");if(4!==e.rank&&5!==e.rank)throw new p("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+t.rank+".");let u=Oa(t,s);if("causal"===a)throw new f("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return u=o["conv3d"](u,e,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(u=Rt(u,n)),"channelsFirst"===s&&(u=o["transpose"](u,[0,4,1,2,3])),u})}ya.className="Softmax",o["serialization"].registerClass(ya);class Ca extends Te{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Ca.verifyArgs(e),this.rank=t,R(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new f(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=xa(e.kernelSize,t,"kernelSize"),this.strides=xa(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,et(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Q(this.dataFormat),this.activation=sa(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=ce(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=H(e.biasConstraint),this.biasRegularizer=ha(e.biasRegularizer),this.activityRegularizer=ha(e.activityRegularizer),this.dilationRate=xa(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new p("dilationRate must be a number or an array of a single number for 1D convolution, but received "+JSON.stringify(this.dilationRate));if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new p("dilationRate must be a number or array of two numbers for 2D convolution, but received "+JSON.stringify(this.dilationRate))}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new p("dilationRate must be a number or array of three numbers for 3D convolution, but received "+JSON.stringify(this.dilationRate))}static verifyArgs(t){if(g("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!==typeof t.kernelSize&&!$(t.kernelSize,"number",1,3))throw new p(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:ra(this.activation),useBias:this.useBias,biasInitializer:ue(this.biasInitializer),biasRegularizer:la(this.biasRegularizer),activityRegularizer:la(this.activityRegularizer),biasConstraint:U(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class ja extends Ca{constructor(t,e){super(t,e),this.kernel=null,ja.verifyArgs(e),this.filters=e.filters,R(this.filters,"filters"),this.kernelInitializer=ce(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=H(e.kernelConstraint),this.kernelRegularizer=ha(e.kernelRegularizer)}build(t){t=ge(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new p("The channel dimension of the input should be defined. Found "+t[e]);const n=t[e],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return Object(o["tidy"])(()=>{let e;t=be(t);const n=null==this.bias?null:this.bias.read(),r=_(this.activation.getClassName());if(null!=r&&2===this.rank)e=Na(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)e=Ia(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=Na(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new f("convolutions greater than 3D are not implemented yet.");e=Sa(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e})}computeOutputShape(t){t=ge(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let a=0;a<n.length;++a){const t=va(n[a],this.kernelSize[a],this.padding,this.strides[a],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[a]);e.push(t)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:ue(this.kernelInitializer),kernelRegularizer:la(this.kernelRegularizer),kernelConstraint:U(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!==typeof t.filters||t.filters<1)throw new p("Convolution layer expected config.filters to be a 'number' > 0 but got "+JSON.stringify(t.filters))}}class Ta extends ja{constructor(t){super(2,t),Ta.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t["rank"],t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&!$(t.kernelSize,"number",1,2))throw new p(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}Ta.className="Conv2D",o["serialization"].registerClass(Ta);class Ea extends ja{constructor(t){super(3,t),Ea.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t["rank"],t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new p(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}Ea.className="Conv3D",o["serialization"].registerClass(Ea);class Aa extends Ta{constructor(t){if(super(t),this.inputSpec=[new Ie({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new p("Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+this.padding)}build(t){if(t=ge(t),4!==t.length)throw new p("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new p("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ie({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return o["tidy"](()=>{let e=be(t);if(4!==e.shape.length)throw new p("Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+e.shape.length);const n=e.shape,r=n[0];let a,s;"channelsFirst"===this.dataFormat?(a=2,s=3):(a=1,s=2);const i=n[a],u=n[s],c=this.kernelSize[0],l=this.kernelSize[1],d=this.strides[0],h=this.strides[1],f=wa(i,d,c,this.padding),m=wa(u,h,l,this.padding),b=[r,f,m,this.filters];"channelsLast"!==this.dataFormat&&(e=o["transpose"](e,[0,2,3,1]));let g=o["conv2dTranspose"](e,this.kernel.read(),b,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(g=o["transpose"](g,[0,3,1,2])),null!=this.bias&&(g=Rt(g,this.bias.read(),this.dataFormat)),null!=this.activation&&(g=this.activation.apply(g)),g})}computeOutputShape(t){t=ge(t);const e=t.slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return e[n]=this.filters,e[r]=wa(e[r],o,s,this.padding),e[a]=wa(e[a],u,i,this.padding),e}getConfig(){const t=super.getConfig();return delete t["dilationRate"],t}}Aa.className="Conv2DTranspose",o["serialization"].registerClass(Aa);class $a extends ja{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new p("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new p("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new p(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received `+JSON.stringify(e.padding));this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=ce(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=ha(e.depthwiseRegularizer),this.depthwiseConstraint=H(e.depthwiseConstraint),this.pointwiseInitializer=ce(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=ha(e.pointwiseRegularizer),this.pointwiseConstraint=H(e.pointwiseConstraint)}build(t){if(t=ge(t),t.length<this.rank+2)throw new p(`Inputs to SeparableConv${this.rank}D should have rank `+(this.rank+2)+", but received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new p("The channel dimension of the inputs should be defined, but found "+JSON.stringify(t[e]));const n=t[e],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let i=0;i<this.rank;++i)a.push(1);a.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Ie({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return Object(o["tidy"])(()=>{let e;if(t=be(t),1===this.rank)throw new f("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=o["transpose"](t,[0,2,3,1])),e=o["separableConv2d"](t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=Rt(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=o["transpose"](e,[0,3,1,2])),e})}getConfig(){const t=super.getConfig();return delete t["rank"],delete t["kernelInitializer"],delete t["kernelRegularizer"],delete t["kernelConstraint"],t["depthwiseInitializer"]=ue(this.depthwiseInitializer),t["pointwiseInitializer"]=ue(this.pointwiseInitializer),t["depthwiseRegularizer"]=la(this.depthwiseRegularizer),t["pointwiseRegularizer"]=la(this.pointwiseRegularizer),t["depthwiseConstraint"]=U(this.depthwiseConstraint),t["pointwiseConstraint"]=U(this.pointwiseConstraint),t}}$a.className="SeparableConv";class Ra extends $a{constructor(t){super(2,t)}}Ra.className="SeparableConv2D",o["serialization"].registerClass(Ra);class Da extends ja{constructor(t){super(1,t),Da.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t["rank"],delete t["dataFormat"],t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&!$(t.kernelSize,"number",1,1))throw new p(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}Da.className="Conv1D",o["serialization"].registerClass(Da);class Fa extends Te{constructor(t){super(t),"number"===typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"===typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return Object(o["tidy"])(()=>{if(t=be(t),"channelsLast"===this.dataFormat){const e=It(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return It(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=It(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return It(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Fa.className="Cropping2D",o["serialization"].registerClass(Fa);class _a extends Te{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Q(this.dataFormat),this.interpolation=null==t.interpolation?"nearest":t.interpolation,tt(this.interpolation)}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return o["tidy"](()=>{let e=be(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=o["transpose"](e,[0,2,3,1]);const t=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?e.resizeNearestNeighbor([t,r]):e.resizeBilinear([t,r]);return o["transpose"](a,[0,3,1,2])}{const t=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?e.resizeNearestNeighbor([t,r]):e.resizeBilinear([t,r])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Ma(t,e,n=[1,1],r="valid",a,s){return Object(o["tidy"])(()=>{null==a&&(a=l()),Q(a);let i=ka(t,a);if(4!==t.rank)throw new p("Input for depthwiseConv2d is required to be 4-D, but is instead "+t.rank+"-D");if(4!==e.rank)throw new p("depthwiseKernel is required to be 4-D, but is instead "+e.rank+"-D");return i=o["depthwiseConv2d"](i,e,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=o["transpose"](i,[0,3,1,2])),i})}_a.className="UpSampling2D",o["serialization"].registerClass(_a);class za extends Ca{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=ce(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=H(t.depthwiseConstraint),this.depthwiseRegularizer=ha(t.depthwiseRegularizer)}build(t){if(t=ge(t),t.length<4)throw new p(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new p(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(o["tidy"])(()=>{t=be(t);let e=Ma(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=Rt(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e})}computeOutputShape(t){t=ge(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,a=va(e,this.kernelSize[0],this.padding,this.strides[0]),s=va(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],r,a,s]:[t[0],a,s,r]}getConfig(){const t=super.getConfig();return t["depthMultiplier"]=this.depthMultiplier,t["depthwiseInitializer"]=ue(this.depthwiseInitializer),t["depthwiseRegularizer"]=la(this.depthwiseRegularizer),t["depthwiseConstraint"]=U(this.depthwiseRegularizer),t}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function La(t,e,n,r){if(Array.isArray(t)){if(null!=e||null!=n)throw new p("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function a(t){return null==t||Array.isArray(t)?t:[t]}return e=a(e),n=a(n),{inputs:t,initialState:e,constants:n}}function Pa(t,e,n,r=!1,a,s,i=!1,u=!1){return o["tidy"](()=>{const c=e.shape.length;if(c<3)throw new p(`Input should be at least 3D, but is ${c}D.`);const l=[1,0].concat(bt(2,c));if(e=o["transpose"](e,l),null!=s)throw new f("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&(a=a.asType("bool").asType("float32"),a.rank===c-1&&(a=o["expandDims"](a,-1)),a=o["transpose"](a,l)),r&&(e=o["reverse"](e,0),null!=a&&(a=o["reverse"](a,0)));const d=[];let h,m=n;const b=e.shape[0],g=o["unstack"](e);let y,x;null!=a&&(y=o["unstack"](a));for(let e=0;e<b;++e){const n=g[e],r=o["tidy"](()=>t(n,m));if(null==a)h=r[0],m=r[1];else{const t=o["tidy"](()=>{const t=y[e],n=o["onesLike"](t).sub(t),a=r[0].mul(t).add(m[0].mul(n)),s=m.map((e,a)=>r[1][a].mul(t).add(e.mul(n)));return{output:a,newStates:s}});h=t.output,m=t.newStates}u&&d.push(h)}if(u){const t=1;x=o["stack"](d,t)}return[h,x,m]})}za.className="DepthwiseConv2D",o["serialization"].registerClass(za);class Ba extends Te{constructor(t){let e;if(super(t),null==t.cell)throw new p("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new Xa({cells:t.cell}):t.cell,null==e.stateSize)throw new p("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new Ie({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return bt(0,t).map(t=>null)}return this.states_}setStates(t){this.states_=t}computeOutputShape(t){fe(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let r;if(r=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const r of e)n.push([t[0],r]);return[r].concat(n)}return r}computeMask(t,e){return o["tidy"](()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map(t=>null);return[t].concat(e)}return t})}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){const e=null;if(null!=this.numConstants)throw new f("Constants support is not implemented in RNN yet.");fe(t)&&(t=t[0]),t=t;const n=this.stateful?t[0]:null,r=t.slice(2);this.inputSpec[0]=new Ie({shape:[n,null,...r]});const a=[t[0]].concat(t.slice(2));if(null!=e)throw new f("Constants support is not implemented in RNN yet.");let s;if(this.cell.build(a),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!o["util"].arraysEqual(this.stateSpec.map(t=>t.shape[t.shape.length-1]),s))throw new p(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is `+this.cell.stateSize)}else this.stateSpec=s.map(t=>new Ie({shape:[null,t]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){Object(o["tidy"])(()=>{if(!this.stateful)throw new d("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new p("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(t=>o["zeros"]([n,t])):this.states_=[o["zeros"]([n,this.cell.stateSize])];else if(null==t)o["dispose"](this.states_),null!=this.keptStates&&(o["dispose"](this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(t=>o["zeros"]([n,t])):this.states_[0]=o["zeros"]([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new p(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: `+t);!0===e?this.keptStates.push(this.states_.slice()):o["dispose"](this.states_);for(let e=0;e<this.states_.length;++e){const r=t[e],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,s=[n,a];if(!o["util"].arraysEqual(r.shape,s))throw new p(`State ${e} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[e]=r}}this.states_=this.states_.map(t=>o["keep"](t.clone()))})}apply(t,e){let n=null==e?null:e["initialState"],r=null==e?null:e["constants"];null==e&&(e={});const a=La(t,n,r,this.numConstants);t=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){e["initialState"]=n,s=s.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new Ie({shape:t.shape}));i=i.concat(this.stateSpec)}null!=r&&(e["constants"]=r,s=s.concat(r),this.numConstants=r.length);const o=s[0]instanceof Ne;if(o){const n=[t].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=a,o}return super.apply(t,e)}call(t,e){return Object(o["tidy"])(()=>{const n=null==e?null:e["mask"],r=null==e?null:e["training"];let a=null==e?null:e["initialState"];t=be(t),null==a&&(a=this.stateful?this.states_:this.getInitialState(t));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new p(`RNN Layer has ${s} state(s) but was passed `+a.length+" initial state(s).");this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=(t,e)=>{const n=this.cell.call([t].concat(e),i);return[n[0],n.slice(1)]},u=Pa(o,t,a,this.goBackwards,n,null,this.unroll,this.returnSequences),c=u[0],l=u[1],d=u[2];this.stateful&&this.resetStates(d,r);const h=this.returnSequences?l:c;return this.returnState?[h].concat(d):h})}getInitialState(t){return Object(o["tidy"])(()=>{let e=o["zeros"](t.shape);return e=o["sum"](e,[1,2]),e=yt(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(t=>t>1?Ct(e,[1,t]):e):this.cell.stateSize>1?[Ct(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e["numConstants"]=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Ba.className&&(e["cell"]={className:this.cell.getClassName(),config:n}),Object.assign({},n,t,e)}static fromConfig(t,e,n={}){const r=e["cell"],a=qe(r,n);return new t(Object.assign(e,{cell:a}))}}Ba.className="RNN",o["serialization"].registerClass(Ba);class Wa extends Te{}class Va extends Wa{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,R(this.units,"units"),this.activation=sa(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=ce(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ce(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ce(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ha(t.kernelRegularizer),this.recurrentRegularizer=ha(t.recurrentRegularizer),this.biasRegularizer=ha(t.biasRegularizer),this.kernelConstraint=H(t.kernelConstraint),this.recurrentConstraint=H(t.recurrentConstraint),this.biasConstraint=H(t.biasConstraint),this.dropout=ft([1,mt([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=ft([1,mt([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=ge(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(o["tidy"])(()=>{if(t=t,2!==t.length)throw new p(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const r=null!=e["training"]&&e["training"];let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ya({ones:()=>o["onesLike"](t),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ya({ones:()=>o["onesLike"](n),rate:this.recurrentDropout,training:r}));const s=this.dropoutMask,i=this.recurrentDropoutMask;a=Tt(null!=s?o["mul"](t,s):t,this.kernel.read()),null!=this.bias&&(a=Rt(a,this.bias.read())),null!=i&&(n=o["mul"](n,i));let u=o["add"](a,Tt(n,this.recurrentKernel.read()));return null!=this.activation&&(u=this.activation.apply(u)),[u,u]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:ra(this.activation),useBias:this.useBias,kernelInitializer:ue(this.kernelInitializer),recurrentInitializer:ue(this.recurrentInitializer),biasInitializer:ue(this.biasInitializer),kernelRegularizer:la(this.kernelRegularizer),recurrentRegularizer:la(this.recurrentRegularizer),biasRegularizer:la(this.biasRegularizer),activityRegularizer:la(this.activityRegularizer),kernelConstraint:U(this.kernelConstraint),recurrentConstraint:U(this.recurrentConstraint),biasConstraint:U(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}Va.className="SimpleRNNCell",o["serialization"].registerClass(Va);class Ua extends Ba{constructor(t){t.cell=new Va(t),super(t)}call(t,e){return Object(o["tidy"])(()=>{null!=this.cell.dropoutMask&&(o["dispose"](this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(o["dispose"](this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e["mask"],r=null==e?null:e["training"],a=null==e?null:e["initialState"];return super.call(t,{mask:n,training:r,initialState:a})})}static fromConfig(t,e){return new t(e)}}Ua.className="SimpleRNN",o["serialization"].registerClass(Ua);class Ga extends Wa{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new p("GRUCell does not support reset_after parameter set to true.");this.units=t.units,R(this.units,"units"),this.activation=sa(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=sa(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=ce(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ce(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ce(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ha(t.kernelRegularizer),this.recurrentRegularizer=ha(t.recurrentRegularizer),this.biasRegularizer=ha(t.biasRegularizer),this.kernelConstraint=H(t.kernelConstraint),this.recurrentConstraint=H(t.recurrentConstraint),this.biasConstraint=H(t.biasConstraint),this.dropout=ft([1,mt([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=ft([1,mt([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=ge(t);const e=t[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(o["tidy"])(()=>{if(t=t,2!==t.length)throw new p("GRUCell expects 2 input Tensors (inputs, h, c), got "+t.length+".");const n=null!=e["training"]&&e["training"];let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ya({ones:()=>o["onesLike"](t),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ya({ones:()=>o["onesLike"](r),rate:this.recurrentDropout,training:n,count:3}));const a=this.dropoutMask,s=this.recurrentDropoutMask;let i,u,c;0<this.dropout&&this.dropout<1&&(t=o["mul"](t,a[0]));let l=Tt(t,this.kernel.read());this.useBias&&(l=Rt(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=o["mul"](r,s[0]));const d=this.recurrentKernel.read(),[h,f]=o["split"](d,[2*this.units,this.units],d.rank-1),m=Tt(r,h),[b,g,y]=o["split"](l,3,l.rank-1),[x,v]=o["split"](m,2,m.rank-1);i=this.recurrentActivation.apply(o["add"](b,x)),u=this.recurrentActivation.apply(o["add"](g,v));const w=Tt(o["mul"](u,r),f);c=this.activation.apply(o["add"](y,w));const k=o["add"](o["mul"](i,r),o["mul"](o["add"](1,o["neg"](i)),c));return[k,k]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:ra(this.activation),recurrentActivation:ra(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ue(this.kernelInitializer),recurrentInitializer:ue(this.recurrentInitializer),biasInitializer:ue(this.biasInitializer),kernelRegularizer:la(this.kernelRegularizer),recurrentRegularizer:la(this.recurrentRegularizer),biasRegularizer:la(this.biasRegularizer),activityRegularizer:la(this.activityRegularizer),kernelConstraint:U(this.kernelConstraint),recurrentConstraint:U(this.recurrentConstraint),biasConstraint:U(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}Ga.className="GRUCell",o["serialization"].registerClass(Ga);class Ha extends Ba{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Ga(t),super(t)}call(t,e){return Object(o["tidy"])(()=>{null!=this.cell.dropoutMask&&(o["dispose"](this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(o["dispose"](this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e["mask"],r=null==e?null:e["training"],a=null==e?null:e["initialState"];return super.call(t,{mask:n,training:r,initialState:a})})}static fromConfig(t,e){return 0===e["implmentation"]&&(e["implementation"]=1),new t(e)}}Ha.className="GRU",o["serialization"].registerClass(Ha);class qa extends Wa{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,R(this.units,"units"),this.activation=sa(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=sa(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=ce(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ce(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ce(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=ha(t.kernelRegularizer),this.recurrentRegularizer=ha(t.recurrentRegularizer),this.biasRegularizer=ha(t.biasRegularizer),this.kernelConstraint=H(t.kernelConstraint),this.recurrentConstraint=H(t.recurrentConstraint),this.biasConstraint=H(t.biasConstraint),this.dropout=ft([1,mt([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=ft([1,mt([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;t=ge(t);const n=t[t.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;r=new(e=class extends Vt{apply(e,r){const a=t.apply([n]),s=(new Gt).apply([n]),i=t.apply([2*n]);return St(St(a,s),i)}},e.className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return Object(o["tidy"])(()=>{const n=null!=e["training"]&&e["training"];if(t=t,3!==t.length)throw new p("LSTMCell expects 3 input Tensors (inputs, h, c), got "+t.length+".");let r=t[1];const a=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ya({ones:()=>o["onesLike"](t),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ya({ones:()=>o["onesLike"](r),rate:this.recurrentDropout,training:n,count:4}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let u,c,l,d;0<this.dropout&&this.dropout<1&&(t=o["mul"](t,s[0]));let h=Tt(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=o["mul"](r,i[0])),h=o["add"](h,Tt(r,this.recurrentKernel.read())),this.useBias&&(h=Rt(h,this.bias.read()));const[f,m,b,g]=o["split"](h,4,h.rank-1);u=this.recurrentActivation.apply(f),c=this.recurrentActivation.apply(m),l=o["add"](o["mul"](c,a),o["mul"](u,this.activation.apply(b))),d=this.recurrentActivation.apply(g);const y=o["mul"](d,this.activation.apply(l));return[y,y,l]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:ra(this.activation),recurrentActivation:ra(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ue(this.kernelInitializer),recurrentInitializer:ue(this.recurrentInitializer),biasInitializer:ue(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:la(this.kernelRegularizer),recurrentRegularizer:la(this.recurrentRegularizer),biasRegularizer:la(this.biasRegularizer),activityRegularizer:la(this.activityRegularizer),kernelConstraint:U(this.kernelConstraint),recurrentConstraint:U(this.recurrentConstraint),biasConstraint:U(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}qa.className="LSTMCell",o["serialization"].registerClass(qa);class Ka extends Ba{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new qa(t),super(t)}call(t,e){return Object(o["tidy"])(()=>{null!=this.cell.dropoutMask&&(o["dispose"](this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(o["dispose"](this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e["mask"],r=null==e?null:e["training"],a=null==e?null:e["initialState"];return super.call(t,{mask:n,training:r,initialState:a})})}static fromConfig(t,e){return 0===e["implmentation"]&&(e["implementation"]=1),new t(e)}}Ka.className="LSTM",o["serialization"].registerClass(Ka);class Xa extends Wa{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return Object(o["tidy"])(()=>{t=t;let n=t.slice(1);const r=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?r.push(n.splice(0,t.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],s=0===i?[t[0]].concat(n):[s[0]].concat(n),s=o.call(s,e),a.push(s.slice(1))}n=[];for(const t of a.slice().reverse())n.push(...t);return[s[0]].concat(n)})}build(t){let e;fe(t)&&(t=t[0]),t=t,this.cells.forEach((n,r)=>{st("RNNCell_"+r,()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=super.getConfig(),e=t=>({className:t.getClassName(),config:t.getConfig()}),n=this.cells.map(e),r={cells:n};return Object.assign({},t,r)}static fromConfig(t,e,n={}){const r=[];for(const a of e["cells"])r.push(qe(a,n));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return ke(t)}setWeights(t){const e=[];for(const n of this.cells){const r=n.weights.length,a=t.splice(r);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],a[t]])}Oe(e)}}function Ya(t){const{ones:e,rate:n,training:r=!1,count:a=1}=t,s=()=>_t(e(),n),i=()=>zt(s,e,r);if(!a||a<=1)return o["keep"](i().clone());const u=Array(a).fill(void 0).map(i);return u.map(t=>o["keep"](t.clone()))}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */Xa.className="StackedRNNCells",o["serialization"].registerClass(Xa);var Za=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"===typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(t);a<r.length;a++)e.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(t,r[a])&&(n[r[a]]=t[r[a]])}return n};class Ja extends Ba{constructor(t){if(t.unroll)throw new f("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new f("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new Ie({ndim:5})]}call(t,e){return o["tidy"](()=>{if(null!=this.cell.dropoutMask&&(o["dispose"](this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(o["dispose"](this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e["constants"])throw new p("ConvRNN2D cell does not support constants");const n=null==e?null:e["mask"],r=null==e?null:e["training"],a=null==e?null:e["initialState"];return super.call(t,{mask:n,training:r,initialState:a})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return o["tidy"](()=>{const{stateSize:e}=this.cell,n=t.shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)],s=o["zeros"](a);return Array.isArray(e)?Array(e.length).fill(s):[s]})}resetStates(t,e=!1){o["tidy"](()=>{if(!this.stateful)throw new d("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)],s=n[0];if(null==s)throw new p("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>o["zeros"](a)):this.states_=[o["zeros"](a)];else if(null==t)o["dispose"](this.states_),null!=this.keptStates&&(o["dispose"](this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>o["zeros"](a)):this.states_[0]=o["zeros"](a);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new p(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: `+t);e?this.keptStates.push(this.states_.slice()):o["dispose"](this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],r=a;if(!o["util"].arraysEqual(n.shape,r))throw new p(`State ${e} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[e]=n}}this.states_=this.states_.map(t=>o["keep"](t.clone()))})}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===e,u=t[o?3:2],c=t[o?4:3],l=va(u,r[0],a,s[0],i[0]),d=va(c,r[1],a,s[1],i[1]),h=[...t.slice(0,2),...o?[n,l,d]:[l,d,n]];return h}}Ja.className="ConvRNN2D";class Qa extends qa{constructor(t){const{filters:e,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=t;super(Object.assign({},t,{units:e})),this.filters=e,R(this.filters,"filters"),this.kernelSize=xa(n,2,"kernelSize"),this.kernelSize.forEach(t=>R(t,"kernelSize")),this.strides=xa(r||1,2,"strides"),this.strides.forEach(t=>R(t,"strides")),this.padding=a||"valid",et(this.padding),this.dataFormat=s||"channelsLast",Q(this.dataFormat),this.dilationRate=xa(i||1,2,"dilationRate"),this.dilationRate.forEach(t=>R(t,"dilationRate"))}build(t){var e;t=ge(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new p("The channel dimension of the input should be defined. Found "+t[n]);const r=t[n],a=4,s=this.kernelSize.concat([r,this.filters*a]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,this.filters*a]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;t=new(e=class extends Vt{apply(t,e){const a=n.apply([r]),s=o["ones"]([r]),i=n.apply([2*r]);return Nt([a,s,i])}},e.className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*a],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return o["tidy"](()=>{if(3!==t.length)throw new p("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+t.length+".");const n=e["training"]||!1,r=t[0],a=t[1],s=t[2],i=4;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ya({ones:()=>o["onesLike"](r),rate:this.dropout,training:n,count:i}));const u=this.dropoutMask,c=(t,e,n)=>e&&e[n]?o["mul"](e[n],t):t;let l=c(r,u,0),d=c(r,u,1),h=c(r,u,2),f=c(r,u,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ya({ones:()=>o["onesLike"](a),rate:this.recurrentDropout,training:n,count:i}));const m=this.recurrentDropoutMask;let b=c(a,m,0),g=c(a,m,1),y=c(a,m,2),x=c(a,m,3);const v=3,[w,k,O,I]=o["split"](this.kernel.read(),i,v),[N,S,C,j]=this.useBias?o["split"](this.bias.read(),i):[null,null,null,null];l=this.inputConv(l,w,N,this.padding),d=this.inputConv(d,k,S,this.padding),h=this.inputConv(h,O,C,this.padding),f=this.inputConv(f,I,j,this.padding);const[T,E,A,$]=o["split"](this.recurrentKernel.read(),i,v);b=this.recurrentConv(b,T),g=this.recurrentConv(g,E),y=this.recurrentConv(y,A),x=this.recurrentConv(x,$);const R=this.recurrentActivation.apply(o["add"](l,b)),D=this.recurrentActivation.apply(o["add"](d,g)),F=o["add"](o["mul"](D,s),o["mul"](R,this.activation.apply(o["add"](h,y)))),_=o["mul"](this.recurrentActivation.apply(o["add"](f,x)),this.activation.apply(F));return[_,_,F]})}getConfig(){const t=super.getConfig(),{units:e}=t,n=Za(t,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(t,e,n,r){const a=o["conv2d"](t,e,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Rt(a,n,this.dataFormat):a}recurrentConv(t,e){const n=1;return o["conv2d"](t,e,n,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Qa.className="ConvLSTM2DCell",o["serialization"].registerClass(Qa);class ts extends Ja{constructor(t){const e=new Qa(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}ts.className="ConvLSTM2D",o["serialization"].registerClass(ts);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class es extends Te{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?e[r]:this.noiseShape[r]);return n}call(t,e){return Object(o["tidy"])(()=>{this.invokeCallHook(t,e);const n=be(t);if(0<this.rate&&this.rate<1){const t=null!=e["training"]&&e["training"],r=this.getNoiseShape(n),a=zt(()=>_t(n,this.rate,r,this.seed),()=>n,t);return a}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}es.className="Dropout",o["serialization"].registerClass(es);class ns extends es{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}ns.className="SpatialDropout1D",o["serialization"].registerClass(ns);class rs extends Te{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,R(this.units,"units"),this.activation=sa(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=ce(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=ce(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=H(t.kernelConstraint),this.biasConstraint=H(t.biasConstraint),this.kernelRegularizer=ha(t.kernelRegularizer),this.biasRegularizer=ha(t.biasRegularizer),this.activityRegularizer=ha(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=ge(t);const e=t[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){t=ge(t);const e=t.slice();return e[e.length-1]=this.units,e}call(t,e){return Object(o["tidy"])(()=>{this.invokeCallHook(t,e);const n=be(t),r=_(this.activation.getClassName());let a;return null!=r?a=Tt(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=Tt(n,this.kernel.read()),null!=this.bias&&(a=Rt(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a})}getConfig(){const t={units:this.units,activation:ra(this.activation),useBias:this.useBias,kernelInitializer:ue(this.kernelInitializer),biasInitializer:ue(this.biasInitializer),kernelRegularizer:la(this.kernelRegularizer),biasRegularizer:la(this.biasRegularizer),activityRegularizer:la(this.activityRegularizer),kernelConstraint:U(this.kernelConstraint),biasConstraint:U(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}rs.className="Dense",o["serialization"].registerClass(rs);class as extends Te{constructor(t){t=t||{},super(t),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=ge(t);for(const e of t.slice(1))if(null==e)throw new p(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],ht(t,1)]}call(t,e){return Object(o["tidy"])(()=>{this.invokeCallHook(t,e);let n=be(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=n.transpose(t)}return wt(n)})}getConfig(){const t={};null!=this.dataFormat&&(t["dataFormat"]=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}as.className="Flatten",o["serialization"].registerClass(as);class ss extends Te{constructor(t){super(t),this.supportsMasking=!0,this.activation=sa(t.activation)}call(t,e){return Object(o["tidy"])(()=>{this.invokeCallHook(t,e);const n=be(t);return this.activation.apply(n)})}getConfig(){const t={activation:ra(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}ss.className="Activation",o["serialization"].registerClass(ss);class is extends Te{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return Object(o["tidy"])(()=>(t=be(t),xt(t,this.n)))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}is.className="RepeatVector",o["serialization"].registerClass(is);class os extends Te{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",r=e.slice();let a=1,s=null;for(let o=0;o<r.length;++o){const t=r[o];if(this.isUnknown(t)){if(null!==s)throw new p("Can only specifiy one unknown dimension.");s=o}else a*=t}const i=ht(t);if(null!==s){if(0===a||i%a!==0)throw new p(n);r[s]=i/a}else if(i!==a)throw new p(n);return r}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return Object(o["tidy"])(()=>{this.invokeCallHook(t,e);const n=be(t),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(a)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}os.className="Reshape",o["serialization"].registerClass(os);class us extends Te{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+t.dims+" instead.");const e=bt(1,t.dims.length+1);if(!o["util"].arraysEqual(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Ie({ndim:this.dims.length+1})]}computeOutputShape(t){t=ge(t);const e=t.slice();return this.dims.forEach((n,r)=>{e[r+1]=t[n]}),e}call(t,e){return Object(o["transpose"])(be(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}us.className="Permute",o["serialization"].registerClass(us);class cs extends Te{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=be(t),r=-1;return Object(o["any"])(Object(o["notEqual"])(n,this.maskValue),r)}call(t,e){return Object(o["tidy"])(()=>{this.invokeCallHook(t,e);const n=be(t),r=-1,a=!0,s=Object(o["any"])(Object(o["notEqual"])(n,this.maskValue),r,a),i=n.mul(s.asType(n.dtype));return i})}}cs.className="Masking",o["serialization"].registerClass(cs);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class ls extends Te{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(v(t.inputLength))}this.inputDim=t.inputDim,R(this.inputDim,"inputDim"),this.outputDim=t.outputDim,R(this.outputDim,"outputDim"),this.embeddingsInitializer=ce(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=ha(t.embeddingsRegularizer),this.activityRegularizer=ha(t.activityRegularizer),this.embeddingsConstraint=H(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return Object(o["tidy"])(()=>this.maskZero?(t=be(t),Object(o["notEqual"])(t,Object(o["zerosLike"])(t))):null)}computeOutputShape(t){if(t=ge(t),null==this.inputLength)return[...t,this.outputDim];const e=v(this.inputLength);if(e.length!==t.length-1)throw new p(`"inputLength" is ${this.inputLength}, but received input shape has shape `+t);{let n=0;for(let r=0;r<e.length;++r){const a=e[r],s=t[r+1];if(null!=a&&null!=s&&a!==s)throw new p(`"inputLength" is ${this.inputLength}, but received input shape has shape `+t);null==a&&(e[n]=s),n++}}return[t[0],...e,this.outputDim]}call(t,e){return Object(o["tidy"])(()=>{this.invokeCallHook(t,e);let n=be(t);"int32"!==n.dtype&&(n=gt(n,"int32"));const r=Et(this.embeddings.read(),n.as1D());return r.reshape(ge(this.computeOutputShape(n.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:ue(this.embeddingsInitializer),embeddingsRegularizer:la(this.embeddingsRegularizer),activityRegularizer:la(this.activityRegularizer),embeddingsConstraint:U(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}ls.className="Embedding",o["serialization"].registerClass(ls);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class ds extends Te{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new f}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const a=t[t.length-e.length+r],s=e[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new p("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(a)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[ge(t)]),t=t,t.length<2)throw new p(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const a of t)null!=a&&null!==a[0]&&e.push(a[0]);if(e=T(e),e.length>1)throw new p(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let a=1;a<t.length;++a){const e=null==t[a]?null:t[a].slice(1);n=this.computeElementwiseOpOutputShape(n,e)}const r=t.map(t=>t.length);-1===t.indexOf(null)&&1===T(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return Object(o["tidy"])(()=>{if(t=t,this.reshapeRequired){const e=[],n=t.map(t=>t.rank);if(-1===n.indexOf(null)){const r=mt(n);for(let n of t){const t=n.rank;for(let e=0;e<r-t;++e)n=yt(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const s of t){const t=s.rank;if(null==t){const t=s.shape,r=t[0],a=t.slice(1).concat([r]);let i=s.reshape([r].concat(ht(t.slice(1))));i=o["transpose"](i,[1,0]),i=i.reshape(a),e.push(i),n=!0}else if(t>1){const r=bt(1,t).concat([0]);e.push(o["transpose"](s,r)),n=!0}else e.push(s)}let r=this.mergeFunction(e);const a=r.rank;if(n)if(null==a){const t=r.shape,e=t.length,n=t[e-1],a=[n].concat(t.slice(0,t.length-1));r=o["transpose"](r.reshape([-1,n]),[1,0]).reshape(a)}else if(a>1){const t=[a-1].concat(bt(0,a-1));r=o["transpose"](r,t)}return r}}return this.mergeFunction(t)})}computeOutputShape(t){let e;t=t,e=null==t[0]?null:t[0].slice(1);for(let r=1;r<t.length;++r){const n=null==t[r]?null:t[r].slice(1);e=this.computeElementwiseOpOutputShape(e,n)}let n=[];for(const r of t)null!=r&&null!==r[0]&&n.push(r[0]);return n=T(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return o["tidy"](()=>{if(null==e)return null;if(!Array.isArray(e))throw new p("`mask` should be an Array");if(!Array.isArray(t))throw new p("`inputs` should be an Array");if(e.length!==t.length)throw new p(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(t=>null==t))return null;e=e.map(t=>null==t?t:o["expandDims"](t,0));let n=e[0];for(let t=1;t<e.length-1;++t)n=o["logicalAnd"](n,e[t]);return n})}}class hs extends ds{constructor(t){super(t)}mergeFunction(t){return Object(o["tidy"])(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=o["add"](e,t[n]);return e})}}hs.className="Add",o["serialization"].registerClass(hs);class ps extends ds{constructor(t){super(t)}mergeFunction(t){return Object(o["tidy"])(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=o["mul"](e,t[n]);return e})}}ps.className="Multiply",o["serialization"].registerClass(ps);class fs extends ds{constructor(t){super(t)}mergeFunction(t){return Object(o["tidy"])(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=o["add"](e,t[n]);return o["mul"](1/t.length,e)})}}fs.className="Average",o["serialization"].registerClass(fs);class ms extends ds{constructor(t){super(t)}mergeFunction(t){return Object(o["tidy"])(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=o["maximum"](e,t[n]);return e})}}ms.className="Maximum",o["serialization"].registerClass(ms);class bs extends ds{constructor(t){super(t)}mergeFunction(t){return Object(o["tidy"])(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=o["minimum"](e,t[n]);return e})}}bs.className="Minimum",o["serialization"].registerClass(bs);class gs extends ds{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new p("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const r of t)if(null!=r){e=!1;break}if(e)return;const n=[];for(let r=0;r<t.length;++r){const e=t[r].slice();e.splice(this.axis,1);let a=!1;for(const t of n)if(o["util"].arraysEqual(t,e)){a=!0;break}a||n.push(e)}if(n.length>1)throw new p("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return Object(o["tidy"])(()=>Nt(t,this.axis))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new p("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const a of e.slice(1)){if(null==n[r]||null==a[r]){n[r]=null;break}n[r]+=a[r]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new p("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new p("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new p(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return o["tidy"](()=>{let n=!0;if(e.forEach(t=>{null==t||(n=!1)}),n)return null;const r=[];for(let s=0;s<t.length;++s)null==e[s]?r.push(o["onesLike"](t[s]).asType("bool")):e[s].rank<t[s].rank?r.push(o["expandDims"](e[s],-1)):r.push(e[s]);const a=o["concat"](r,this.axis);return o["all"](a,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function ys(t,e){while(t<0)t+=e;return t}function xs(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new f("batchDot is not implemented for tensors of 4D or higher rank yet");if(o["util"].assert(t.shape.length>=2,()=>"batchDot requires the rank of x to be >= 2, but got "+t.shape.length),o["util"].assert(t.shape.length>=2,()=>"batchDot requires the rank of y to be >= 2, but got "+e.shape.length),"number"===typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new f("batchDot is not implemented for complex64-type Tensors yet.");const r=t.shape.length,a=e.shape.length;null==n&&(n=[r-1,a-2]);const s=n;return o["tidy"](()=>{let n,i;if(r>a){n=r-a;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else if(a>r){n=a-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)i=s[0]===s[1]?t.mul(e).sum(s[0]):t.transpose([1,0]).mul(e).sum(s[1]);else{const n=s[0]!==t.shape.length-1,r=s[1]===e.shape.length-1;i=t.matMul(e,n,r)}if(n>0){let t;t=r>a?r+a-3:r-1;const e=[];for(let r=t;r<t+n;++r)e.push(r);i=i.squeeze(e)}return 1===i.shape.length&&(i=i.expandDims(1)),i})}gs.className="Concatenate",o["serialization"].registerClass(gs);class vs extends ds{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){o["util"].assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new f("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);if(e[r[0]]!==n[r[1]])throw new p(`Dimension incompatibility: ${e[r[0]]} !== ${n[r[1]]}`)}mergeFunction(t){if(2!==t.length)throw new p(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],r=t[1];return e=Array.isArray(this.axes)?this.axes.map((e,n)=>ys(e,t[n].shape.length)):[ys(this.axes,n.shape.length),ys(this.axes,r.shape.length)],this.normalize&&(n=Ke(n,e[0]),r=Ke(r,e[1])),xs(n,r,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[ys(this.axes,t.length),ys(this.axes,e.length)],n}computeOutputShape(t){o["util"].assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new f("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);e.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const a=e.concat(n);return 1===a.length&&a.push(1),a}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}vs.className="Dot",o["serialization"].registerClass(vs);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class ws extends Te{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return Object(o["tidy"])(()=>{this.invokeCallHook(t,e);const n=be(t),r=()=>jt(n.shape,0,this.stddev).add(n),a=zt(r,()=>n,e["training"]||!1);return a})}}ws.className="GaussianNoise",o["serialization"].registerClass(ws);class ks extends Te{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Object(o["tidy"])(()=>{this.invokeCallHook(t,e);const n=be(t);if(this.rate>0&&this.rate<1){const t=()=>{const t=Math.sqrt(this.rate/(1-this.rate));return n.mul(jt(n.shape,1,t))};return zt(t,()=>n,e["training"]||!1)}return n})}}ks.className="GaussianDropout",o["serialization"].registerClass(ks);class Os extends Te{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||be(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Object(o["tidy"])(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t),r=()=>{const e=be(t),r=1.6732632423543772,a=1.0507009873554805,s=-r*a;let i=Object(o["greaterEqual"])(Object(o["randomUniform"])(n),this.rate);i=gt(i,"float32");const u=((1-this.rate)*(1+this.rate*s**2))**-.5,c=-u*s*this.rate,l=e.mul(i).add(i.add(-1).mul(s));return l.mul(u).add(c)};return zt(r,()=>be(t),e["training"]||!1)}return t})}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Is(t,e,n,r,a,s=.001){let i;if(2===t.rank)i=o["batchNorm2d"](t,e,n,r,a,s);else if(3===t.rank)i=o["batchNorm3d"](t,e,n,r,a,s);else{if(4!==t.rank)throw new f(`batchNormalization is not implemented for array of rank ${t.rank} yet`);i=o["batchNorm4d"](t,e,n,r,a,s)}return i}function Ns(t,e,n,r,a=.001){return Object(o["tidy"])(()=>{const s=o["moments"](t,r),i=s.mean,u=s.variance,c=Is(t,i,u,n,e,a);return[c,i,u]})}function Ss(t,e,n,r,a=.001){return Object(o["tidy"])(()=>{const s=o["moments"](t,r),i=s.mean,u=s.variance,c=[];for(const e of bt(0,t.rank))-1!==r.indexOf(e)?c.push(1):c.push(t.shape[e]);const l=i.reshape(c),d=u.reshape(c),h=null==e?null:e.reshape(c),p=null==n?null:n.reshape(c),f=Is(t,l,d,p,h,a);return[f,i,u]})}function Cs(t,e,n,r,a=.001){return o["util"].arraysEqual(r.slice().sort(),bt(0,t.rank-1))?Ns(t,e,n,r,a):Ss(t,e,n,r,a)}Os.className="AlphaDropout",o["serialization"].registerClass(Os);class js extends Te{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=ce(t.betaInitializer||"zeros"),this.gammaInitializer=ce(t.gammaInitializer||"ones"),this.movingMeanInitializer=ce(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=ce(t.movingVarianceInitializer||"ones"),this.betaConstraint=H(t.betaConstraint),this.gammaConstraint=H(t.gammaConstraint),this.betaRegularizer=ha(t.betaRegularizer),this.gammaRegularizer=ha(t.gammaRegularizer)}build(t){t=ge(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new p(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape `+JSON.stringify(t)+".");this.inputSpec=[new Ie({ndim:t.length,axes:{[e]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return Object(o["tidy"])(()=>{const n=null!=e["training"]&&e["training"],r=be(t),a=r.shape,s=a.length,i=bt(0,s),u=this.axis>=0?this.axis:this.axis+s;i.splice(u,1);const c=b(1,s);c[u]=a[u];const l=i.slice();l.sort();const d=!o["util"].arraysEqual(l,bt(0,s).slice(0,s-1)),h=()=>{if(d){const t=this.movingMean.read().reshape(c),e=this.movingVariance.read().reshape(c),n=this.center?this.beta.read().reshape(c):null,a=this.scale?this.gamma.read().reshape(c):null;return Is(r,t,e,n,a,this.epsilon)}return Is(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)};if(!n)return h();const[p,f,m]=Cs(r,this.gamma.read(),this.beta.read(),i,this.epsilon),g=(t,e,n)=>{o["tidy"](()=>{const r=1-n,a=t.read(),s=a.sub(e).mul(r);t.write(a.sub(s))})},y=()=>{g(this.movingMean,f,this.momentum),g(this.movingVariance,m,this.momentum)};return y(),p})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ue(this.betaInitializer),gammaInitializer:ue(this.gammaInitializer),movingMeanInitializer:ue(this.movingMeanInitializer),movingVarianceInitializer:ue(this.movingVarianceInitializer),betaRegularizer:la(this.betaRegularizer),gammaRegularizer:la(this.gammaRegularizer),betaConstraint:U(this.betaConstraint),gammaConstraint:U(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}js.className="BatchNormalization",o["serialization"].registerClass(js);class Ts extends Te{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received "+this.axis)}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, but received "+JSON.stringify(this.axis));for(const t of this.axis)if(!Number.isInteger(t))throw new Error("Expected axis to be an array of integers, but received "+JSON.stringify(this.axis))}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=ce(t.betaInitializer||"zeros"),this.gammaInitializer=ce(t.gammaInitializer||"ones"),this.betaRegularizer=ha(t.betaRegularizer),this.gammaRegularizer=ha(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=ge(t);const e=t.length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let a=0;a<this.axis.length;++a)this.axis[a]<0&&(this.axis[a]+=e);for(const a of this.axis)if(a<0||a>=e)throw new Error("Invalid axis: "+a);if(this.axis.length!==T(this.axis).length)throw new Error("Found duplicate axes in: "+this.axis);const n=this.axis.map(e=>t[e]),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(t,e){const n=be(t),r=n.shape,a=r.length;return Object(o["tidy"])(()=>{const t=!0;let{mean:e,variance:s}=Object(o["moments"])(n,this.axis,t);const i=b(1,a);for(const n of this.axis)i[n]=r[n];const u=t=>null!=t&&t.shape.length!==a&&this.axis!==[a-1]?t.reshape(i):t;let c=u(this.gamma.read()),l=u(this.beta.read());const d=[],h=[];for(let n=0;n<a;++n)-1!==this.axis.indexOf(n)?(d.push(r[n]),h.push(1)):(d.push(1),h.push(r[n]));return e=e.tile(d),s=s.tile(d),c=c.tile(h),l=l.tile(h),Is(n,e,s,l,c,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ue(this.betaInitializer),gammaInitializer:ue(this.gammaInitializer),betaRegularizer:la(this.betaRegularizer),gammaRegularizer:la(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}function Es(t,e,n){return Object(o["tidy"])(()=>{if(4!==t.rank)throw new p("temporalPadding expects input tensor to be 4-D, but received a "+t.rank+"-D tensor.");if(null==e&&(e=[[1,1],[1,1]]),2!==e.length||2!==e[0].length||2!==e[1].length)throw new p("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n=l()),"channelsLast"!==n&&"channelsFirst"!==n)throw new p(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return r="channelsFirst"===n?[[0,0],[0,0],e[0],e[1]]:[[0,0],e[0],e[1],[0,0]],o["pad"](t,r)})}Ts.className="LayerNormalization",o["serialization"].registerClass(Ts);class As extends Te{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?l():t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new p(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"===typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new p(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new p(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new Ie({ndim:4})]}computeOutputShape(t){let e,n;return t=ge(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return Object(o["tidy"])(()=>Es(be(t),this.padding,this.dataFormat))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function $s(t,e,n,r,a,s){return Object(o["tidy"])(()=>{let i;Q(a),nt(s),et(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a=l()),null==s&&(s="max"),t=ka(t,a);const u="same"===r?"same":"valid";return i="max"===s?o["maxPool"](t,e,n,u):o["avgPool"](t,e,n,u),"channelsFirst"===a&&(i=o["transpose"](i,[0,3,1,2])),i})}function Rs(t,e,n,r,a,s){return Object(o["tidy"])(()=>{let i;Q(a),nt(s),et(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a=l()),null==s&&(s="max"),t=Oa(t,a);const u="same"===r?"same":"valid";return i="max"===s?o["maxPool3d"](t,e,n,u):o["avgPool3d"](t,e,n,u),"channelsFirst"===a&&(i=o["transpose"](i,[0,4,1,2,3])),i})}As.className="ZeroPadding2D",o["serialization"].registerClass(As);class Ds extends Te{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"===typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!==typeof t.poolSize[0])throw new p("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(t.poolSize));this.poolSize=t.poolSize}if(R(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"===typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!==typeof t.strides[0])throw new p("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(t.strides));this.strides=t.strides}R(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,et(this.padding),this.inputSpec=[new Ie({ndim:3})]}computeOutputShape(t){t=ge(t);const e=va(t[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return Object(o["tidy"])(()=>{this.invokeCallHook(t,e),t=yt(be(t),2);const n=this.poolingFunction(be(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return o["squeeze"](n,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class Fs extends Ds{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return Q(a),et(r),$s(t,e,n,r,a,"max")}}Fs.className="MaxPooling1D",o["serialization"].registerClass(Fs);class _s extends Ds{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return Q(a),et(r),$s(t,e,n,r,a,"avg")}}_s.className="AveragePooling1D",o["serialization"].registerClass(_s);class Ms extends Te{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new p("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+t.strides.length+".");this.strides=t.strides}else this.strides=[t.strides,t.strides];R(this.poolSize,"poolSize"),R(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Q(this.dataFormat),et(this.padding),this.inputSpec=[new Ie({ndim:4})]}computeOutputShape(t){t=ge(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=va(e,this.poolSize[0],this.padding,this.strides[0]),n=va(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return Object(o["tidy"])(()=>(this.invokeCallHook(t,e),this.poolingFunction(be(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class zs extends Ms{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return Q(a),et(r),$s(t,e,n,r,a,"max")}}zs.className="MaxPooling2D",o["serialization"].registerClass(zs);class Ls extends Ms{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return Q(a),et(r),$s(t,e,n,r,a,"avg")}}Ls.className="AveragePooling2D",o["serialization"].registerClass(Ls);class Ps extends Te{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new p("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+t.strides.length+".");this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];R(this.poolSize,"poolSize"),R(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Q(this.dataFormat),et(this.padding),this.inputSpec=[new Ie({ndim:5})]}computeOutputShape(t){t=ge(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=va(e,this.poolSize[0],this.padding,this.strides[0]),n=va(n,this.poolSize[1],this.padding,this.strides[1]),r=va(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,r]:[t[0],e,n,r,t[4]]}call(t,e){return Object(o["tidy"])(()=>(this.invokeCallHook(t,e),this.poolingFunction(be(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Bs extends Ps{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return Q(a),et(r),Rs(t,e,n,r,a,"max")}}Bs.className="MaxPooling3D",o["serialization"].registerClass(Bs);class Ws extends Ps{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return Q(a),et(r),Rs(t,e,n,r,a,"avg")}}Ws.className="AveragePooling3D",o["serialization"].registerClass(Ws);class Vs extends Te{constructor(t){super(t),this.inputSpec=[new Ie({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new f}}class Us extends Vs{constructor(t){super(t||{})}call(t,e){return Object(o["tidy"])(()=>{const e=be(t);return o["mean"](e,1)})}}Us.className="GlobalAveragePooling1D",o["serialization"].registerClass(Us);class Gs extends Vs{constructor(t){super(t||{})}call(t,e){return Object(o["tidy"])(()=>{const e=be(t);return o["max"](e,1)})}}Gs.className="GlobalMaxPooling1D",o["serialization"].registerClass(Gs);class Hs extends Te{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Q(this.dataFormat),this.inputSpec=[new Ie({ndim:4})]}computeOutputShape(t){return t=t,"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new f}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class qs extends Hs{call(t,e){return Object(o["tidy"])(()=>{const e=be(t);return"channelsLast"===this.dataFormat?o["mean"](e,[1,2]):o["mean"](e,[2,3])})}}qs.className="GlobalAveragePooling2D",o["serialization"].registerClass(qs);class Ks extends Hs{call(t,e){return Object(o["tidy"])(()=>{const e=be(t);return"channelsLast"===this.dataFormat?o["max"](e,[1,2]):o["max"](e,[2,3])})}}Ks.className="GlobalMaxPooling2D",o["serialization"].registerClass(Ks);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Xs extends Te{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const r=e["layer"],a=qe(r,n);delete e["layer"];const s={layer:a};return Object.assign(s,e),new t(s)}}class Ys extends Xs{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=ge(t),t.length<3)throw new p("TimeDistributed layer expects an input shape >= 3D, but received input shape "+JSON.stringify(t));this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=ge(t);const e=[t[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),r=t[1];return[n[0],r].concat(n.slice(1))}call(t,e){return Object(o["tidy"])(()=>{t=be(t);const n=(t,n)=>{const r=be(this.layer.call(t,e));return[r,[]]},r=Pa(n,t,[],!1,null,null,!1,!0),a=r[1];return a})}}function Zs(t){A(Z,"BidirectionalMergeMode",t)}Ys.className="TimeDistributed",o["serialization"].registerClass(Ys);const Js="concat";class Qs extends Xs{constructor(t){super(t);const e=t.layer.getConfig(),n={};n["className"]=t.layer.getClassName(),n["config"]=e,this.forwardLayer=qe(n),e["goBackwards"]=!0!==e["goBackwards"];const r={};if(r["className"]=t.layer.getClassName(),r["config"]=e,this.backwardLayer=qe(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?Js:t.mergeMode,Zs(this.mergeMode),t.weights)throw new f("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,r,a=this.forwardLayer.computeOutputShape(t);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState?(r=a.slice(1),e=a[0]):e=a[0],e=e,"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):x(n)}apply(t,e){let n=null==e?null:e["initialState"],r=null==e?null:e["constants"];null==e&&(e={});const a=La(t,n,r,this.numConstants);if(t=a.inputs,n=a.initialState,r=a.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==r)return super.apply(t,e);const s=[],i=[];if(null!=n){const t=n.length;if(t%2>0)throw new p("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e["initialState"]=n,s.push(...n);const r=n.map(t=>new Ie({shape:t.shape}));this.forwardLayer.stateSpec=r.slice(0,t/2),this.backwardLayer.stateSpec=r.slice(t/2),i.push(...r)}if(null!=r)throw new f("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof Ne;for(const u of s)if(u instanceof Ne!==o)throw new p("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[t].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=a,o}return super.apply(t,e)}call(t,e){return Object(o["tidy"])(()=>{const n=e["initialState"];let r,a,s,i;if(null==n)r=this.forwardLayer.call(t,e),a=this.backwardLayer.call(t,e);else{const s=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:s})),a=this.backwardLayer.call(t,Object.assign(e,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=o["reverse"](a,1)),"concat"===this.mergeMode?i=Nt([r,a]):"sum"===this.mergeMode?i=o["add"](r,a):"ave"===this.mergeMode?i=o["mul"](.5,o["add"](r,a)):"mul"===this.mergeMode?i=o["mul"](r,a):null==this.mergeMode&&(i=[r,a]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){st(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),st(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states,e=t.map(t=>null);return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=qe(e["layer"]);if(delete e["layer"],null!=e["numConstants"])throw new f("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r["layer"]=n,new t(r)}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function ti(t){return new Re(t)}function ei(t){return new ba(t)}function ni(t){return new pa(t)}function ri(t){return new fa(t)}function ai(t){return new ma(t)}function si(t){return new ya(t)}function ii(t){return new ga(t)}function oi(t){return new Da(t)}function ui(t){return new Ta(t)}function ci(t){return new Aa(t)}function li(t){return new Ea(t)}function di(t){return new Ra(t)}function hi(t){return new Fa(t)}function pi(t){return new _a(t)}function fi(t){return new za(t)}function mi(t){return new ss(t)}function bi(t){return new rs(t)}function gi(t){return new es(t)}function yi(t){return new ns(t)}function xi(t){return new as(t)}function vi(t){return new is(t)}function wi(t){return new os(t)}function ki(t){return new us(t)}function Oi(t){return new ls(t)}function Ii(t){return new hs(t)}function Ni(t){return new fs(t)}function Si(t){return new gs(t)}function Ci(t){return new ms(t)}function ji(t){return new bs(t)}function Ti(t){return new ps(t)}function Ei(t){return new vs(t)}function Ai(t){return new js(t)}function $i(t){return new Ts(t)}function Ri(t){return new As(t)}function Di(t){return new _s(t)}function Fi(t){return Di(t)}function _i(t){return Di(t)}function Mi(t){return new Ls(t)}function zi(t){return Mi(t)}function Li(t){return Mi(t)}function Pi(t){return new Ws(t)}function Bi(t){return Pi(t)}function Wi(t){return Pi(t)}function Vi(t){return new Us(t)}function Ui(t){return new qs(t)}function Gi(t){return new Gs(t)}function Hi(t){return new Ks(t)}function qi(t){return new Fs(t)}function Ki(t){return new zs(t)}function Xi(t){return new Bs(t)}function Yi(t){return new Ha(t)}function Zi(t){return new Ga(t)}function Ji(t){return new Ka(t)}function Qi(t){return new qa(t)}function to(t){return new Ua(t)}function eo(t){return new Va(t)}function no(t){return new ts(t)}function ro(t){return new Qa(t)}function ao(t){return new Ba(t)}function so(t){return new Xa(t)}function io(t){return new Qs(t)}function oo(t){return new Ys(t)}Qs.className="Bidirectional",o["serialization"].registerClass(Qs);const uo=Gi,co=Hi,lo=qi,ho=Ki;function po(t){return new ws(t)}function fo(t){return new ks(t)}function mo(t){return new Os(t)}function bo(t){return new cs(t)}function go(t,e){return pn(t,e)}function yo(t,e){return vn(t,e)}function xo(t,e){return wn(t,e)}function vo(t,e){return fn(t,e)}function wo(t,e){return jn(t,e)}function ko(t,e){return yn(t,e)}function Oo(t,e){return xn(t,e)}function Io(t,e){return ln(t,e)}function No(t,e){return Ye(t,e)}function So(t,e){return Ze(t,e)}function Co(t,e){return Ze(t,e)}function jo(t,e){return Ze(t,e)}function To(t,e){return Xe(t,e)}function Eo(t,e){return Xe(t,e)}function Ao(t,e){return Xe(t,e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
n("f8bb"),n("526c");n("d303"),n("9117"),n("4850"),n("4611"),n("a5aa"),n("c77c"),n("011b"),n("508f"),n("a009"),n("f0e5"),n("09f4"),n("c9f1"),n("4184");n("8ae0"),n("a374"),n("4615"),n("220f"),n("dc59"),n("7e36"),n("6002"),n("d1a8"),n("5960"),n("0777"),n("eff7"),n("c1a2"),n("9e38"),n("8e05"),n("4f20"),n("1ba2"),n("d369"),n("1359"),n("46b1"),n("24b0"),n("3bb7"),n("b500"),n("d7b0"),n("917a"),n("08a9"),n("b39e"),n("ffb3"),n("6932"),n("1df6"),n("5dc4"),n("9ffd"),n("163a"),n("93b2"),n("8888"),n("d30a"),n("c08f"),n("46a8"),n("5f2a"),n("f3ae"),n("6f37"),n("520f");n("7675"),n("dd7e"),n("132b"),n("cd1f"),n("838f"),n("1590"),n("9748"),n("9fe6"),n("8bc9"),n("ba53"),n("53fd"),n("c170");n("46b8"),n("5894"),n("3efc"),n("e22c"),n("c22a"),n("0db5"),n("8629"),n("84d6"),n("7e6a"),n("5a2c"),n("a09b");n("deb3"),n("a780"),n("f74c");n("5616"),n("853e");n("960f"),n("015f");n("b9b9"),n("d4de"),n("cef0"),n("bb2d"),n("e1fd"),n("b21c"),n("e333"),n("ef00"),n("f183"),n("6791");n("487b"),n("c912");n("71db"),n("e101"),n("5f87"),n("804a"),n("bc62");n("c021"),n("122e"),n("ae6d"),n("e053"),n("df81"),n("4516"),n("e89f"),n("db49"),n("1e68"),n("04c4"),n("2f2c");n("649e"),n("91a3"),n("d08e"),n("6d3c"),n("de1a"),n("d1f4"),n("35c9"),n("d54d"),n("3a44"),n("8d71"),n("45bb"),n("8bfa"),n("ba40");n("1ab7"),n("4c7a"),n("b61d"),n("69dc");n("dae8"),n("93db"),n("0eb5"),n("7580"),n("3b28"),n("364e"),n("48db");
/** @license See the LICENSE file. */
const $o="2.8.5";
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ro=n("6125"),Do=n("c388"),Fo=n("bdcf");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class _o{constructor(){this.size=null}batch(t,e=!0){const n=this;let r;return o["util"].assert(t>0,()=>"batchSize needs to be positive, but it is\n      "+t),r=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),Mo(async()=>(await n.iterator()).columnMajorBatch(t,e,Po),r)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,Mo(async()=>(await e.iterator()).concatenate(await t.iterator()),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,Mo(async()=>(await e.iterator()).filter(e=>o["tidy"](()=>t(e))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return Mo(async()=>(await e.iterator()).map(e=>o["tidy"](()=>t(e))),this.size)}mapAsync(t){const e=this;return Mo(async()=>(await e.iterator()).mapAsync(t),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return Mo(async()=>(await e.iterator()).prefetch(t),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,Mo(async()=>{const n=Object(Do["e"])(async()=>({value:await e.iterator(),done:!1}));return Object(Do["d"])(n.take(t))},n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,Mo(async()=>(await e.iterator()).skip(t),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,a=Ro["alea"](e||o["util"].now().toString());return Mo(async()=>{let e=a.int32();return n&&(e+=a.int32()),(await r.iterator()).shuffle(t,e.toString())},this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,Mo(async()=>(await e.iterator()).take(t),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Mo(t,e=null){return new class extends _o{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function zo(t){return Mo(async()=>Object(Do["f"])(t),t.length)}function Lo(t){if(!Object(Fo["e"])(t))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(t))for(let n=0;n<t.length;n++)e=null==e?t[n].size:Math.min(e,t[n].size);else if(t instanceof Object)for(const n in t)e=null==e?t[n].size:Math.min(e,t[n].size);return Mo(async()=>{const e=await Object(Fo["c"])(t,t=>{if(t instanceof _o)return{value:t.iterator(),recurse:!1};if(Object(Fo["e"])(t))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return Object(Do["g"])(e,Do["c"].SHORTEST)},e)}function Po(t){if(null===t)return null;const e=t[0];if(Object(Fo["a"])(e)){const e=Bo(t);return{value:e,recurse:!1}}return{value:null,recurse:!0}}function Bo(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof o["Tensor"]?o["stack"](t):o["tensor"](t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */_o.MAX_BUFFER_SIZE=1e4;class Wo extends _o{constructor(t){super(),this.input=t}async iterator(){const t=await this.input.iterator(),e=t.decodeUTF8(),n=e.split("\n").map(t=>(t.endsWith("\r")&&(t=t.slice(0,-1)),t));return n}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */const Vo='"',Uo=Symbol("out"),Go=Symbol("field"),Ho=Symbol("quote"),qo=Symbol("quoteafterquote"),Ko=Symbol("quoteinquote");class Xo extends _o{constructor(t,e){super(),this.input=t,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new Wo(t),e||(e={}),this.hasHeader=!1!==e.hasHeader,this.fullColumnNames=e.columnNames,this.columnConfigs=e.columnConfigs,this.configuredColumnsOnly=e.configuredColumnsOnly,e.delimWhitespace?(o["util"].assert(null==e.delimiter,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=e.delimiter?e.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const t=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!t)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&t&&o["util"].assert(t.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+t.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=t);const e=this.fullColumnNames.reduce((t,e)=>(t[e]=t[e]+1||1,t),{}),n=Object.keys(e).filter(t=>e[t]>1);if(o["util"].assert(0===n.length,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs)for(const r of Object.keys(this.columnConfigs)){const t=this.fullColumnNames.indexOf(r);if(-1===t)throw new Error('The key "'+r+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const t=await this.base.iterator(),e=await t.next();if(e.done)throw new Error("No data was found for CSV parsing.");const n=e.value,r=this.parseRow(n,!1);return r}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let t=await this.base.iterator();return this.hasHeader&&(t=t.skip(1)),t.map(t=>this.makeDataElement(t))}makeDataElement(t){const e=this.parseRow(t),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){const s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){const o=e[a];let u=null;if(""===o)if(i&&void 0!==i.default)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${t}`);u=void 0}else{const t=Number(o);if(isNaN(t))u=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":u=t;break;case"int32":u=Math.floor(t);break;case"bool":u=this.getBoolean(o);break;default:u=t}else u=t}i&&i.isLabel?r[s]=u:n[s]=u}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(t){return"1"===t||"true"===t.toLowerCase()?1:0}parseRow(t,e=!0){const n=[];let r=0;const a=t.length;let s=Uo;for(let i=0;i<a;i++)switch(s){case Uo:switch(t.charAt(i)){case Vo:r=i+1,s=Ho;break;case this.delimiter:if(r=i+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=Uo;break;default:s=Go,r=i;break}break;case Go:switch(t.charAt(i)){case this.delimiter:n.push(t.substring(r,i)),s=Uo,r=i+1;break;default:}break;case Ho:switch(t.charAt(i)){case Vo:s=qo;break;default:}break;case qo:switch(t.charAt(i)){case this.delimiter:n.push(t.substring(r,i-1)),s=Uo,r=i+1;break;case Vo:s=Ho;break;default:s=Ko;break}break;case Ko:switch(t.charAt(i)){case Vo:s=Ho;break;default:}break;default:}if(s===qo?n.push(t.substring(r,a-1)):n.push(t.substring(r)),e&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class Yo extends Do["a"]{constructor(t){super(),this.microphoneConfig=t,this.isClosed=!1,this.fftSize=t.fftSize||1024;const e=Math.log2(this.fftSize);if(this.fftSize<0||e<4||e>14||!Number.isInteger(e))throw new Error("Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got "+this.fftSize);if(this.numFrames=t.numFramesPerSpectrogram||43,this.sampleRateHz=t.sampleRateHz,this.columnTruncateLength=t.columnTruncateLength||this.fftSize,this.audioTrackConstraints=t.audioTrackConstraints,this.smoothingTimeConstant=t.smoothingTimeConstant||0,this.includeSpectrogram=!1!==t.includeSpectrogram,this.includeWaveform=!0===t.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(t={}){if(Object(o["env"])().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const e=new Yo(t);return await e.start(),e}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(n){throw new Error("Error thrown while initializing video stream: "+n.message)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const t=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new t,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: `+this.audioContext.sampleRate)}else this.sampleRateHz=this.audioContext.sampleRate;const e=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,e.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let t,e;const n=await this.getAudioData();if(this.includeSpectrogram){const e=this.flattenQueue(n.freqDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const t=this.flattenQueue(n.timeDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:t,waveform:e},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const t=[],e=[];let n=0;return new Promise(r=>{const a=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:t,timeDataQueue:e}),t.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),e.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:t,timeDataQueue:e}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(t){const e=t[0].length,n=new Float32Array(t.length*e);return t.forEach((t,r)=>n.set(t,r*e)),n}getTensorFromAudioDataArray(t,e){const n=new Float32Array(o["util"].sizeFromShape(e));return n.set(t,n.length-t.length),Object(o["tensor"])(n,e)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class Zo extends Do["a"]{constructor(t,e){if(super(),this.webcamVideoElement=t,this.webcamConfig=e,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Object(o["tensor1d"])([0],"int32"),this.webcamConfig.centerCrop){const t=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,e=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-t)/2,r=(1-e)/2,a=n+t,s=e+r;this.cropBox=Object(o["tensor2d"])([r,n,s,a],[1,4])}else this.cropBox=Object(o["tensor2d"])([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(t,e={}){if(Object(o["env"])().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!t){if(t=document.createElement("video"),!e.resizeWidth||!e.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");t.width=e.resizeWidth,t.height=e.resizeHeight}const n=new Zo(t,e);return await n.start(),n}async start(){this.webcamConfig.facingMode&&o["util"].assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(t){throw t.message="Error thrown while initializing video stream: "+t.message,t}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(t=>{this.webcamVideoElement.onloadedmetadata=()=>{t()}})}async next(){if(this.isClosed)return{value:null,done:!0};let t;try{t=o["browser"].fromPixels(this.webcamVideoElement)}catch(e){throw new Error("Error thrown converting video to pixels: "+JSON.stringify(e))}if(!this.resize)return{value:t,done:!1};try{return{value:this.cropAndResizeFrame(t),done:!1}}catch(e){throw new Error("Error thrown cropping the video: "+e.message)}finally{t.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(t){return Object(o["tidy"])(()=>{const e=t.toFloat().expandDims(0);let n;n=o["image"].cropAndResize(e,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return n.reshape(r.slice(1))})}async capture(){return(await this.next()).value}stop(){const t=this.stream.getTracks();t.forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class Jo{}var Qo=n("dc14");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class tu extends Qo["a"]{constructor(t,e={}){super(),this.file=t,this.options=e,o["util"].assert(t instanceof Uint8Array||!!Object(o["env"])().get("IS_BROWSER")&&(t instanceof File||t instanceof Blob),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=e.offset||0,this.chunkSize=e.chunkSize||1048576}summary(){return"FileChunks "+this.file}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const t=new Promise((t,e)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return e(new TypeError("FileReader returned unknown type."));t(a)},r.onabort=t=>e(new Error("Aborted")),r.onerror=t=>e(new Error(t.type));const a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n});return{value:await t,done:!1}}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */async function eu(t,e={}){let n,r;"string"===typeof t?n=t:(n=t.url,r=nu(t));const a=await o["util"].fetch(n,r);if(a.ok){const t=new Uint8Array(await a.arrayBuffer());return new tu(t,e)}throw new Error(a.statusText)}const nu=t=>{const e={method:t.method,headers:t.headers,body:t.body,mode:t.mode,credentials:t.credentials,cache:t.cache,redirect:t.redirect,referrer:t.referrer,integrity:t.integrity};return e};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function ru(t){return"string"===typeof t&&"file://"===t.substr(0,7)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class au extends Jo{constructor(t,e={}){super(),this.input=t,this.options=e}async iterator(){if(ru(this.input)&&Object(o["env"])().get("IS_NODE")){const t=n(5);this.input=t.readFileSync(this.input.substr(7))}return new tu(this.input,this.options)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class su extends Jo{constructor(t,e={}){super(),this.url=t,this.fileOptions=e}async iterator(){return ru(this.url)?new au(this.url,this.fileOptions).iterator():eu(this.url,this.fileOptions)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function iu(t,e={}){return new Xo(new su(t),e)}function ou(t){const e=Object(Do["e"])(t);return Mo(async()=>e)}function uu(t){return Mo(async()=>{const e=await t();return Object(Do["e"])(()=>e.next())})}async function cu(t,e){return Zo.create(t,e)}async function lu(t){return Yo.create(t)}
/** @license See the LICENSE file. */const du="2.8.5";
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hu(t,e){Array.isArray(t)||(t=[t]),t.forEach(t=>{null!=t&&o["util"].assert("complex64"!==t.dtype,()=>e+" does not support complex64 tensors in the CPU backend.")})}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pu=o["kernel_impls"].whereImpl;class fu extends o["KernelBackend"]{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new o["DataStorage"](this,Object(o["engine"])())}write(t,e,n){this.firstUse&&(this.firstUse=!1,Object(o["env"])().get("IS_NODE")&&o["backend_util"].warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={};return this.data.set(r,{values:t,dtype:n,refCount:1}),r}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&o["util"].isString(n[0])){const a=n.map(t=>o["util"].encodeString(t));r=this.write(a,t,e)}else r=this.write(n,t,e);return{dataId:r,shape:t,dtype:e}}incRef(t){const e=this.data.get(t);e.refCount++}decRef(t){if(this.data.has(t)){const e=this.data.get(t);e.refCount--}}move(t,e,n,r){this.data.set(t,{values:e,dtype:r,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);if("complex64"===e){const t=this.readSync(n.real.dataId),e=this.readSync(n.imag.dataId);return o["backend_util"].mergeRealAndImagArrays(t,e)}return this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map(t=>o["util"].decodeString(t))}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(o["buffer"])(t.shape,t.dtype,n)}makeOutput(t,e,n){const r=this.write(t,e,n);return Object(o["engine"])().makeTensorFromDataId(r,e,n,this)}disposeData(t){if(this.data.has(t)){const{complexTensorInfos:e}=this.data.get(t);null!=e&&(this.disposeData(e.real.dataId),this.disposeData(e.imag.dataId)),this.data.delete(t)}}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.data.has(e)){const t=this.data.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}async time(t){const e=o["util"].now();t();const n=o["util"].now()-e;return{kernelMs:n}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){hu([t],"where");const e=this.readSync(t.dataId);return pu(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}
/** @license See the LICENSE file. */const mu="2.8.5";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bu(t,e,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(hu(i,t),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const u=s,c=u.data.get(i.dataId).values,l=o["util"].sizeFromShape(i.shape),d=n||i.dtype,h=o["util"].getArrayFromDType(d,l);for(let t=0;t<l;++t)h[t]=e(c[t],a);return u.makeTensorInfo(i.shape,d,h)}}function gu(t,e,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(hu(i,t),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,c=n||i.dtype,l=e(u,c,a);return o.makeTensorInfo(i.shape,c,l)}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(o["registerBackend"])("cpu",()=>new fu,1);const yu=bu(o["Elu"],t=>t>=0?t:Math.exp(t)-1),xu={kernelName:o["Elu"],backendName:"cpu",kernelFunc:yu};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vu(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const wu={kernelName:o["Identity"],backendName:"cpu",kernelFunc:vu};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ku(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{alpha:s}=r;hu([a],"leakyRelu");const i=o["util"].sizeFromShape(a.shape),u=n.data.get(a.dataId).values,c=o["util"].getTypedArrayFromDType("float32",i);for(let o=0;o<u.length;o++)c[o]=u[o]<0?s*u[o]:u[o];return n.makeTensorInfo(a.shape,"float32",c)}const Ou={kernelName:o["LeakyRelu"],backendName:"cpu",kernelFunc:ku};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iu(t){return(e,n,r,a,s)=>{const i=o["backend_util"].assertAndGetBroadcastShape(e,n),u=i.length,c=o["util"].computeStrides(i),l=o["util"].sizeFromShape(i),d=o["util"].getTypedArrayFromDType(s,l),h=e.length,p=n.length,f=o["util"].computeStrides(e),m=o["util"].computeStrides(n),b=o["backend_util"].getBroadcastDims(e,i),g=o["backend_util"].getBroadcastDims(n,i);if(b.length+g.length===0)for(let o=0;o<d.length;++o)d[o]=t(r[o%r.length],a[o%a.length]);else for(let y=0;y<d.length;++y){const e=o["util"].indexToLoc(y,u,c),n=e.slice(-h);b.forEach(t=>n[t]=0);const s=o["util"].locToIndex(n,h,f),i=e.slice(-p);g.forEach(t=>i[t]=0);const l=o["util"].locToIndex(i,p,m);d[y]=t(r[s],a[l])}return[d,i]}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nu=Iu((t,e)=>t<0?e*t:t);function Su(t){const{inputs:e,backend:n}=t,{x:r,alpha:a}=e;hu([r,a],"prelu");const s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,u]=Nu(r.shape,a.shape,s,i,r.dtype);return n.makeTensorInfo(u,r.dtype,o)}const Cu={kernelName:o["Prelu"],backendName:"cpu",kernelFunc:Su},ju=bu(o["Relu"],t=>Math.max(0,t)),Tu={kernelName:o["Relu"],backendName:"cpu",kernelFunc:ju},Eu=bu(o["Relu6"],t=>Math.min(Math.max(0,t),6)),Au={kernelName:o["Relu6"],backendName:"cpu",kernelFunc:Eu};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $u(t,e,n,r,a){if("linear"===n)return vu({inputs:{x:e},backend:t});if("relu"===n)return ju({inputs:{x:e},backend:t});if("elu"===n)return yu({inputs:{x:e},backend:t});if("relu6"===n)return Eu({inputs:{x:e},backend:t});if("prelu"===n)return Su({inputs:{x:e,alpha:r},backend:t});if("leakyrelu"===n)return ku({inputs:{x:e},backend:t,attrs:{alpha:a}});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ru(t){const{inputs:e,backend:n}=t,{real:r,imag:a}=e,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64"),u=n.data.get(o.dataId);return u.complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}const Du={kernelName:o["Complex"],backendName:"cpu",kernelFunc:Ru};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fu(t,e,n="float32"){if("complex64"===n){const n=Fu(t,e,"float32"),r=Fu(t,e,"float32");return Ru({inputs:{real:n,imag:r},backend:t})}const r=o["util"].makeZerosTypedArray(o["util"].sizeFromShape(e),n);return t.makeTensorInfo(e,n,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _u(t){const{inputs:e,backend:n}=t,{input:r}=e,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const Mu={kernelName:o["Real"],backendName:"cpu",kernelFunc:_u};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zu(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return vu({inputs:{x:a},backend:n});const t=Fu(n,a.shape,a.dtype),e=zu({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=Ru({inputs:{real:e,imag:t},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),r}if("complex64"===a.dtype){const t=_u({inputs:{input:a},backend:n}),e=zu({inputs:{x:t},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(t),e}if(!o["util"].hasEncodingLoss(a.dtype,s)){const t=vu({inputs:{x:a},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:s}}if("int32"===s){const t=n.data.get(a.dataId).values,e=Int32Array.from(t);return n.makeTensorInfo(a.shape,"int32",e)}if("bool"===s){const t=n.data.get(a.dataId).values,e=o["util"].toTypedArray([0],a.dtype),[r,s]=Iu((t,e)=>t!==e?1:0)(a.shape,[],t,e,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}const Lu={kernelName:o["Cast"],backendName:"cpu",kernelFunc:zu};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pu(t,e,n,r){return null==n?({inputs:n,backend:a})=>{const{a:s,b:i}=n,o=a;hu([s,i],t);const u=o.data.get(s.dataId).values,c=o.data.get(i.dataId).values,l=r||s.dtype,[d,h]=e(s.shape,i.shape,u,c,l);return o.makeTensorInfo(h,l,d)}:({inputs:t,backend:a})=>{const{a:s,b:i}=t,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){const t=zu({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),e=o.data.get(t.dataId),r=e.complexTensorInfos.real,a=e.complexTensorInfos.imag,u=o.data.get(r.dataId).values,c=o.data.get(a.dataId).values,l=zu({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),d=o.data.get(l.dataId),h=d.complexTensorInfos.real,p=d.complexTensorInfos.imag,f=o.data.get(h.dataId).values,m=o.data.get(p.dataId).values,[b,g,y]=n(s.shape,i.shape,u,c,f,m),x=o.makeTensorInfo(y,"float32",b),v=o.makeTensorInfo(y,"float32",g),w=Ru({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(t),o.disposeIntermediateTensorInfo(l),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{const t=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[u,c]=e(s.shape,i.shape,t,n,a);return o.makeTensorInfo(c,a,u)}}}function Bu(t){return(e,n,r,a,s,i)=>{const u=o["backend_util"].assertAndGetBroadcastShape(e,n),c=o["util"].sizeFromShape(u),l=u.length,d=o["util"].computeStrides(u),h=o["util"].getTypedArrayFromDType("float32",c),p=o["util"].getTypedArrayFromDType("float32",c),f=o["backend_util"].getBroadcastDims(e,u),m=o["backend_util"].getBroadcastDims(n,u),b=o["backend_util"].mergeRealAndImagArrays(r,a),g=o["backend_util"].mergeRealAndImagArrays(s,i),y=e.length,x=o["util"].computeStrides(e),v=n.length,w=o["util"].computeStrides(n);if(f.length+m.length===0)for(let o=0;o<h.length;o++){const e=o%b.length,n=o%g.length,r=t(b[2*e],b[2*e+1],g[2*n],g[2*n+1]);h[o]=r.real,p[o]=r.imag}else for(let k=0;k<h.length;k++){const e=o["util"].indexToLoc(k,l,d),n=e.slice(-y);f.forEach(t=>n[t]=0);const r=o["util"].locToIndex(n,y,x),a=e.slice(-v);m.forEach(t=>a[t]=0);const s=o["util"].locToIndex(a,v,w),i=t(b[2*r],b[2*r+1],g[2*s],g[2*s+1]);h[k]=i.real,p[k]=i.imag}return[h,p,u]}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wu=Iu((t,e)=>t+e),Vu=Bu((t,e,n,r)=>({real:t+n,imag:e+r})),Uu=Pu(o["Add"],Wu,Vu),Gu={kernelName:o["Add"],backendName:"cpu",kernelFunc:Uu};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Hu(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{shape:s}=r,i=o["util"].sizeFromShape(a.shape),u=o["util"].inferFromImplicitShape(s,i),c=o["util"].sizeFromShape(u);o["util"].assert(i===c,()=>`The new shape (${u}) has ${c} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(a.dataId);const l=n.data.get(a.dataId);if(null!=l.complexTensorInfos){const t=l.complexTensorInfos.real,e=l.complexTensorInfos.imag;t.shape=u,e.shape=u}return{dataId:a.dataId,shape:u,dtype:a.dtype}}const qu={kernelName:o["Reshape"],backendName:"cpu",kernelFunc:Hu};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ku(t){const{inputs:e,backend:n,attrs:r}=t,{a:a,b:s}=e,{transposeA:i,transposeB:u}=r;hu([a,s],"matMul");const c=a.shape.length,l=s.shape.length,d=i?a.shape[c-2]:a.shape[c-1],h=u?s.shape[l-1]:s.shape[l-2],p=i?a.shape[c-1]:a.shape[c-2],f=u?s.shape[l-2]:s.shape[l-1],m=a.shape.slice(0,-2),b=s.shape.slice(0,-2),g=o["util"].sizeFromShape(m),y=o["util"].sizeFromShape(b),x=g===y||1===g||1===y;o["util"].assert(c>=2&&l>=2&&x,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${b}).`);const v=g>y?a.shape.slice(0,-2):s.shape.slice(0,-2),w=v.concat([p,f]);o["util"].assert(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${u} must match.`);const k=i?[g,d,p]:[g,p,d],O=u?[y,f,h]:[y,h,f],I=Hu({inputs:{x:a},backend:n,attrs:{shape:k}}),N=Hu({inputs:{x:s},backend:n,attrs:{shape:O}}),S=i?I.shape[1]:I.shape[2],C=i?I.shape[2]:I.shape[1],j=u?N.shape[1]:N.shape[2],T=Math.max(g,y),E=n.data.get(I.dataId).values,A=n.data.get(N.dataId).values,$=o["util"].computeStrides(I.shape),R=o["util"].computeStrides(N.shape),[D,F,_]=i?[$[0],1,$[1]]:[$[0],$[1],1],[M,z,L]=u?[1,R[1],R[0]]:[R[1],1,R[0]],P=C*j,B=Object(o["buffer"])([T,C,j],I.dtype),W=B.values,V=n.blockSize;for(let o=0;o<T;o++)for(let t=0;t<C;t+=V)for(let e=0;e<j;e+=V)for(let n=0;n<S;n+=V){const r=Math.min(t+V,C),a=Math.min(e+V,j),s=Math.min(n+V,S);for(let i=t;i<r;i++)for(let t=e;t<a;t++){let e=0;for(let r=n;r<s;r++){const n=Math.min(o,g-1)*D,a=Math.min(o,y-1)*L,s=E[n+i*F+r*_],u=A[r*M+t*z+a];e+=s*u}W[o*P+(i*j+t)]+=e}}return n.disposeIntermediateTensorInfo(I),n.disposeIntermediateTensorInfo(N),n.makeTensorInfo(w,B.dtype,B.values)}const Xu={kernelName:o["BatchMatMul"],backendName:"cpu",kernelFunc:Ku};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yu(t){const{inputs:e,backend:n,attrs:r}=t,{a:a,b:s,bias:i,preluActivationWeights:o}=e,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;let h,p,f;const m=[],b=Ku({inputs:{a:a,b:s},attrs:{transposeA:u,transposeB:c},backend:n});h=b,i&&(p=Uu({inputs:{a:h,b:i},backend:n}),m.push(h),h=p),l&&(f=$u(n,h,l,o,d),m.push(h),h=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return h}const Zu={kernelName:o["_FusedMatMul"],backendName:"cpu",kernelFunc:Yu};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ju(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const Qu=t=>{const{x:e}=t.inputs,n=t.backend;hu(e,"abs");let r=new Float32Array(o["util"].sizeFromShape(e.shape));const a=n.data.get(e.dataId).values;return r=Ju(a),n.makeOutput(r,e.shape,"float32")},tc={kernelName:o["Abs"],backendName:"cpu",kernelFunc:Qu},ec=bu(o["Acos"],t=>Math.acos(t)),nc={kernelName:o["Acos"],backendName:"cpu",kernelFunc:ec},rc=bu(o["Acosh"],t=>Math.acosh(t)),ac={kernelName:o["Acosh"],backendName:"cpu",kernelFunc:rc};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sc(t){const{inputs:e,backend:n}=t,r=e;hu(e,"addN");const a=r.map(t=>n.data.get(t.dataId).values),s=Object(o["buffer"])(r[0].shape,r[0].dtype),i=s.values;for(let o=0;o<r.length;o++){const t=a[o];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}const ic={kernelName:o["AddN"],backendName:"cpu",kernelFunc:sc};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oc(t,e,n,r,a){const s=e.length,i=o["util"].sizeFromShape(e),u=o["util"].computeStrides(e),c=o["util"].computeStrides(a),l=o["util"].getTypedArrayFromDType(n,o["util"].sizeFromShape(a));for(let d=0;d<i;++d){const e=o["util"].indexToLoc(d,s,u),n=new Array(e.length);for(let t=0;t<n.length;t++)n[t]=e[r[t]];const a=o["util"].locToIndex(n,s,c);l[a]=t[d]}return l}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uc(t){const{inputs:e,attrs:n,backend:r}=t,{x:a}=e,{perm:s}=n;hu(a,"transpose");const i=a.shape.length,o=new Array(i);for(let d=0;d<o.length;d++)o[d]=a.shape[s[d]];const u=r.data.get(a.dataId).values,c=oc(u,a.shape,a.dtype,s,o),l=r.write(c,o,a.dtype);return{dataId:l,shape:o,dtype:a.dtype}}const cc={kernelName:o["Transpose"],backendName:"cpu",kernelFunc:uc};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lc(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s,keepDims:i}=r;hu(a,"all");const u=o["util"].parseAxisParam(s,a.shape);let c=u;const l=o["backend_util"].getAxesPermutation(c,a.shape.length);let d=a;null!=l&&(d=uc({inputs:{x:a},backend:n,attrs:{perm:l}}),c=o["backend_util"].getInnerMostAxes(c.length,a.shape.length)),o["backend_util"].assertAxesAreInnerMostDims("all",c,d.shape.length);const[h,p]=o["backend_util"].computeOutAndReduceShapes(d.shape,c),f=o["util"].sizeFromShape(p),m=o["util"].makeZerosTypedArray(o["util"].sizeFromShape(h),d.dtype),b=n.data.get(d.dataId).values;for(let o=0;o<m.length;++o){const t=o*f;let e=b[t];for(let n=0;n<f;++n){const r=b[t+n];e=e&&r}m[o]=e}null!=l&&n.disposeIntermediateTensorInfo(d);const g=n.makeTensorInfo(h,d.dtype,m);if(i){const t=o["backend_util"].expandShapeToKeepDim(h,u),e=Hu({inputs:{x:g},backend:n,attrs:{shape:t}});return n.disposeIntermediateTensorInfo(g),e}return g}const dc={kernelName:o["All"],backendName:"cpu",kernelFunc:lc};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hc(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s,keepDims:i}=r;hu(a,"any");const u=o["util"].parseAxisParam(s,a.shape);let c=u;const l=o["backend_util"].getAxesPermutation(c,a.shape.length);let d=a;null!=l&&(d=uc({inputs:{x:a},backend:n,attrs:{perm:l}}),c=o["backend_util"].getInnerMostAxes(c.length,a.shape.length)),o["backend_util"].assertAxesAreInnerMostDims("any",c,d.shape.length);const[h,p]=o["backend_util"].computeOutAndReduceShapes(d.shape,c),f=o["util"].sizeFromShape(p),m=o["util"].makeZerosTypedArray(o["util"].sizeFromShape(h),d.dtype),b=n.data.get(d.dataId).values;for(let o=0;o<m.length;++o){const t=o*f;let e=b[t];for(let n=0;n<f;++n){const r=b[t+n];e=e||r}m[o]=e}null!=l&&n.disposeIntermediateTensorInfo(d);const g=n.makeTensorInfo(h,d.dtype,m);if(i){const t=o["backend_util"].expandShapeToKeepDim(h,u),e=Hu({inputs:{x:g},backend:n,attrs:{shape:t}});return n.disposeIntermediateTensorInfo(g),e}return g}const pc={kernelName:o["Any"],backendName:"cpu",kernelFunc:hc};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fc(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s}=r;hu(a,"argMax");let i=o["util"].parseAxisParam(s,a.shape);const u=o["backend_util"].getAxesPermutation(i,a.shape.length);let c=a;const l=[];null!=u&&(c=uc({inputs:{x:a},backend:n,attrs:{perm:u}}),l.push(c),i=o["backend_util"].getInnerMostAxes(i.length,c.shape.length)),i=[i[0]],o["backend_util"].assertAxesAreInnerMostDims("argMax",i,c.shape.length);const[d,h]=o["backend_util"].computeOutAndReduceShapes(c.shape,i),p=o["util"].sizeFromShape(d),f=o["util"].makeZerosTypedArray(p,"int32"),m=o["util"].sizeFromShape(h),b=n.data.get(c.dataId).values;for(let o=0;o<f.length;++o){const t=o*m;let e=b[t],n=0;for(let r=0;r<m;++r){const a=b[t+r];a>e&&(e=a,n=r)}f[o]=n}return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(d,"int32",f)}const mc={kernelName:o["ArgMax"],backendName:"cpu",kernelFunc:fc};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bc(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s}=r;hu(a,"argMin");let i=o["util"].parseAxisParam(s,a.shape);const u=o["backend_util"].getAxesPermutation(i,a.shape.length);let c=a;const l=[];null!=u&&(c=uc({inputs:{x:a},backend:n,attrs:{perm:u}}),l.push(c),i=o["backend_util"].getInnerMostAxes(i.length,c.shape.length)),i=[i[0]],o["backend_util"].assertAxesAreInnerMostDims("argMin",i,c.shape.length);const[d,h]=o["backend_util"].computeOutAndReduceShapes(c.shape,i),p=o["util"].sizeFromShape(d),f=o["util"].makeZerosTypedArray(p,"int32"),m=o["util"].sizeFromShape(h),b=n.data.get(c.dataId).values;for(let o=0;o<f.length;++o){const t=o*m;let e=b[t],n=0;for(let r=0;r<m;++r){const a=b[t+r];a<e&&(e=a,n=r)}f[o]=n}return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(d,"int32",f)}const gc={kernelName:o["ArgMin"],backendName:"cpu",kernelFunc:bc},yc=bu(o["Asin"],t=>Math.asin(t)),xc={kernelName:o["Asin"],backendName:"cpu",kernelFunc:yc},vc=bu(o["Asinh"],t=>Math.asinh(t)),wc={kernelName:o["Asinh"],backendName:"cpu",kernelFunc:vc},kc=bu(o["Atan"],t=>Math.atan(t)),Oc={kernelName:o["Atan"],backendName:"cpu",kernelFunc:kc},Ic=Iu((t,e)=>Math.atan2(t,e)),Nc=Pu(o["Atan2"],Ic),Sc={kernelName:o["Atan2"],backendName:"cpu",kernelFunc:Nc},Cc=bu(o["Atanh"],t=>Math.atanh(t)),jc={kernelName:o["Atanh"],backendName:"cpu",kernelFunc:Cc};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Tc(t,e,n,r,a,s){const i=a.strideHeight,u=a.strideWidth,c=a.dilationHeight,l=a.dilationWidth,d=a.effectiveFilterHeight,h=a.effectiveFilterWidth,p=a.padInfo.top,f=a.padInfo.left,m="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=Object(o["buffer"])(a.outShape,n),g=b.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],x=a.outShape[2]*a.outShape[3],v=a.outShape[3];for(let o=0;o<a.batchSize;++o){const e=o*y,n=o*r[0];for(let o=0;o<a.inChannels;++o)for(let b=0;b<a.outHeight;++b){const y=b*i-p,w=Math.max(0,y),k=Math.min(a.inHeight,d+y),O=e+b*x;for(let e=0;e<a.outWidth;++e){const i=e*u-f,d=Math.max(0,i),p=Math.min(a.inWidth,h+i);let b=m,y=0,x=0;for(let e=w;e<k;e+=c){const a=n+e*r[1];for(let e=d;e<p;e+=l){const n=a+e*r[2],i=t[n+o];"max"===s&&i>b?b=i:"avg"===s&&(y+=i,x++)}if(isNaN(b))break}const I=O+e*v+o;g[I]="avg"===s?y/x:b}}}return b}function Ec(t,e,n,r,a=!1,s=!1){const i=Object(o["buffer"])(r.outShape,"int32"),u=r.strideHeight,c=r.strideWidth,l=r.dilationHeight,d=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,f=r.padInfo.top,m=r.padInfo.left,b=Object(o["buffer"])(e,n,t);for(let o=0;o<r.batchSize;++o)for(let t=0;t<r.inChannels;++t)for(let e=0;e<r.outHeight;++e){const n=e*u-f;let g=n;while(g<0)g+=l;const y=Math.min(r.inHeight,h+n);for(let u=0;u<r.outWidth;++u){const h=u*c-m;let f=h;while(f<0)f+=d;const x=Math.min(r.inWidth,p+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let e=g;e<y;e+=l){const i=e-n;for(let n=f;n<x;n+=d){const u=n-h,c=b.get(o,e,n,t);c>v&&(v=c,w=a?s?((o*r.inHeight+e)*r.inWidth+n)*r.inChannels+t:(e*r.inWidth+n)*r.inChannels+t:i*p+u)}}i.set(w,o,e,u,t)}}return i}function Ac(t,e,n,r,a,s){const i=a.strideDepth,u=a.strideHeight,c=a.strideWidth,l=a.dilationDepth,d=a.dilationHeight,h=a.dilationWidth,p=a.effectiveFilterDepth,f=a.effectiveFilterHeight,m=a.effectiveFilterWidth,b=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,x="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=Object(o["buffer"])(a.outShape,n),w=v.values,k=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],O=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],N=a.outShape[4];for(let o=0;o<a.batchSize;++o){const e=o*k,n=o*r[0];for(let o=0;o<a.inChannels;++o)for(let v=0;v<a.outDepth;++v){const k=v*i-b;let S=k;while(S<0)S+=l;const C=Math.min(a.inDepth,p+k),j=e+v*O;for(let e=0;e<a.outHeight;++e){const i=e*u-g;let p=i;while(p<0)p+=d;const b=Math.min(a.inHeight,f+i),v=j+e*I;for(let e=0;e<a.outWidth;++e){const i=e*c-y;let u=i;while(u<0)u+=h;const f=Math.min(a.inWidth,m+i),g=v+e*N;let k=x,O=0,I=0;for(let e=S;e<C;e+=l){const a=n+e*r[1];for(let e=p;e<b;e+=d){const n=a+e*r[2];for(let e=u;e<f;e+=h){const a=n+e*r[3],i=t[a+o];if("max"===s&&i>k?k=i:"avg"===s&&(O+=i,I++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}const j=g+o;w[j]="avg"===s?O/I:k}}}}return v}function $c(t,e){const n=Object(o["buffer"])(e.outShape,"int32"),r=e.strideDepth,a=e.strideHeight,s=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.front,f=e.padInfo.top,m=e.padInfo.left;for(let o=0;o<e.batchSize;++o)for(let b=0;b<e.inChannels;++b)for(let g=0;g<e.outDepth;++g){const y=g*r-p;let x=y;while(x<0)x+=i;const v=Math.min(e.inDepth,l+y);for(let r=0;r<e.outHeight;++r){const l=r*a-f;let p=l;while(p<0)p+=u;const w=Math.min(e.inHeight,d+l);for(let a=0;a<e.outWidth;++a){const f=a*s-m;let k=f;while(k<0)k+=c;const O=Math.min(e.inWidth,h+f);let I=Number.NEGATIVE_INFINITY,N=-1;for(let e=x;e<v;e+=i){const n=e-y;for(let r=p;r<w;r+=u){const a=r-l;for(let s=k;s<O;s+=c){const i=s-f,u=t.get(o,e,r,s,b);u>=I&&(I=u,N=n*d*h+a*d+i)}}}n.set(N,o,g,r,a,b)}}}return n}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rc(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e;hu(a,"avgPool");const{filterSize:s,strides:i,pad:u,dimRoundingMode:c}=r,l=1;o["util"].assert(o["backend_util"].eitherStridesOrDilationsAreOne(i,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);const d=o["backend_util"].computePool2DInfo(a.shape,s,i,l,u,c);let h;if(1===d.filterWidth&&1===d.filterHeight&&o["util"].arraysEqual(d.inShape,d.outShape))h=vu({inputs:{x:a},backend:n});else{const t=n.data.get(a.dataId).values,e=o["util"].computeStrides(a.shape),r=Tc(t,a.shape,a.dtype,e,d,"avg");h=n.makeTensorInfo(d.outShape,a.dtype,r.values)}return h}const Dc={kernelName:o["AvgPool"],backendName:"cpu",kernelFunc:Rc};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fc(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{filterSize:s,strides:i,pad:u,dimRoundingMode:c,dataFormat:l,dilations:d}=r;hu(a,"avgPool3d");let h=d;null==h&&(h=[1,1,1]);const p=o["backend_util"].computePool3DInfo(a.shape,s,i,h,u,c,l),f=n.data.get(a.dataId).values,m=Ac(f,a.shape,a.dtype,o["util"].computeStrides(a.shape),p,"avg");return n.makeTensorInfo(m.shape,"float32",m.values)}const _c={kernelName:o["AvgPool3D"],backendName:"cpu",kernelFunc:Fc};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mc(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,input:s}=e,{filterSize:i,strides:u,pad:c,dilations:l,dimRoundingMode:d}=r;hu([a,s],"avgPool3DGrad");const h=o["backend_util"].computePool3DInfo(s.shape,i,u,l,c,d),p=h.strideDepth,f=h.strideHeight,m=h.strideWidth,b=h.filterDepth,g=h.filterHeight,y=h.filterWidth,x=h.dilationDepth,v=h.dilationHeight,w=h.dilationWidth,k=h.effectiveFilterDepth,O=h.effectiveFilterHeight,I=h.effectiveFilterWidth,N=k-1-h.padInfo.front,S=I-1-h.padInfo.left,C=O-1-h.padInfo.top,j=Object(o["buffer"])(s.shape,"float32"),T=1/(b*g*y),E=n.bufferSync(a);for(let o=0;o<h.batchSize;++o)for(let t=0;t<h.inChannels;++t)for(let e=0;e<h.inDepth;++e)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){const a=e-N,s=n-C,i=r-S;let u=0;for(let e=0;e<k;e+=x){const n=(a+e)/p;if(!(n<0||n>=h.outDepth||Math.floor(n)!==n))for(let e=0;e<O;e+=v){const r=(s+e)/f;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let e=0;e<I;e+=w){const a=(i+e)/m;if(a<0||a>=h.outWidth||Math.floor(a)!==a)continue;const s=E.get(o,n,r,a,t);u+=s}}}j.set(u*T,o,e,n,r,t)}return n.makeTensorInfo(j.shape,j.dtype,j.values)}const zc={kernelName:o["AvgPool3DGrad"],backendName:"cpu",kernelFunc:Mc};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lc(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,input:s}=e,i=s;hu([a,s],"avgPoolGrad");const{filterSize:u,strides:c,pad:l}=r,d=o["backend_util"].computePool2DInfo(i.shape,u,c,1,l),h=d.strideHeight,p=d.strideWidth,f=d.filterHeight,m=d.filterWidth,b=d.dilationHeight,g=d.dilationWidth,y=d.effectiveFilterHeight,x=d.effectiveFilterWidth,v=x-1-d.padInfo.left,w=y-1-d.padInfo.top,k=Object(o["buffer"])(i.shape,"float32"),O=1/(f*m),I=n.data.get(a.dataId).values,N=Object(o["buffer"])(a.shape,"float32",I);for(let o=0;o<d.batchSize;++o)for(let t=0;t<d.inChannels;++t)for(let e=0;e<d.inHeight;++e)for(let n=0;n<d.inWidth;++n){const r=e-w,a=n-v;let s=0;for(let e=0;e<y;e+=b){const n=(r+e)/h;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let e=0;e<x;e+=g){const r=(a+e)/p;if(r<0||r>=d.outWidth||Math.floor(r)!==r)continue;const i=N.get(o,n,r,t);s+=i}}k.set(s*O,o,e,n,t)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const Pc={kernelName:o["AvgPoolGrad"],backendName:"cpu",kernelFunc:Lc};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bc(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,scale:s,offset:i,mean:u,variance:c}=e;o["util"].assert(u.shape.length===c.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),o["util"].assert(null==i||u.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),o["util"].assert(null==s||u.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),hu([a,u,c,s,i],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const d=n.data.get(a.dataId).values,h=n.data.get(u.dataId).values,p=n.data.get(c.dataId).values,f=s?n.data.get(s.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),b=new Float32Array(d.length),g=m.length,y=f.length,x=p.length,v=h.length;let w=0,k=0,O=0,I=0;for(let o=0;o<d.length;++o)b[o]=m[w++]+(d[o]-h[k++])*f[O++]/Math.sqrt(p[I++]+l),w>=g&&(w=0),k>=v&&(k=0),O>=y&&(O=0),I>=x&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,b)}const Wc={kernelName:o["FusedBatchNorm"],backendName:"cpu",kernelFunc:Bc};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vc(t,e,n,r,a){const s=o["slice_util"].isSliceContinous(r,e,n),i=o["util"].sizeFromShape(n),u=o["util"].computeStrides(r);if(s){const n=o["slice_util"].computeFlatOffset(e,u);return"string"===a?t.slice(n,n+i):t.subarray(n,n+i)}const c="string"===a?o["backend_util"].fromUint8ToStringArray(t):t,l=Object(o["buffer"])(r,a,c),d=Object(o["buffer"])(n,a);for(let o=0;o<d.size;++o){const t=d.indexToLoc(o),n=t.map((t,n)=>t+e[n]);d.set(l.get(...n),...t)}return"string"===a?o["backend_util"].fromStringArrayToUint8(d.values):d.values}function Uc(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{begin:s,size:i}=r;hu(a,"slice");const[u,c]=o["slice_util"].parseSliceParams(a,s,i);o["slice_util"].assertParamsValid(a,u,c);const l=n.data.get(a.dataId).values,d=Vc(l,u,c,a.shape,a.dtype);return n.makeTensorInfo(c,a.dtype,d)}const Gc={kernelName:o["Slice"],backendName:"cpu",kernelFunc:Uc};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hc(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{blockShape:s,crops:i}=r;hu([a],"batchToSpaceND");const u=s.reduce((t,e)=>t*e),c=o["backend_util"].getReshaped(a.shape,s,u),l=o["backend_util"].getPermuted(c.length,s.length),d=o["backend_util"].getReshapedPermuted(a.shape,s,u),h=o["backend_util"].getSliceBeginCoords(i,s.length),p=o["backend_util"].getSliceSize(d,i,s.length),f=Hu({inputs:{x:a},backend:n,attrs:{shape:c}}),m=uc({inputs:{x:f},backend:n,attrs:{perm:l}}),b=Hu({inputs:{x:m},backend:n,attrs:{shape:d}}),g=Uc({inputs:{x:b},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),g}const qc={kernelName:o["BatchToSpaceND"],backendName:"cpu",kernelFunc:Hc};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kc(t,e,n,r,a){const s=o["util"].sizeFromShape(r),i=o["util"].makeZerosTypedArray(a,n);for(let o=0;o<t.length;o++){const n=t[o];if(n<0)throw new Error("Input x must be non-negative!");n>=a||(i[n]+=s>0?e[o]:1)}return i}function Xc(t,e,n,r=!1){const a=t.shape[0],s=t.shape[1],i=Object(o["buffer"])([a,n],e.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){const s=t.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,o,s):e.size>0?i.set(i.get(o,s)+e.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yc(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,weights:s}=e,{size:i}=r,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,c=Kc(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,c)}const Zc={kernelName:o["Bincount"],backendName:"cpu",kernelFunc:Yc};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jc(t){return(e,n,r)=>{const a=o["util"].getTypedArrayFromDType(n,e.length);for(let s=0;s<e.length;++s)a[s]=t(e[s],r);return a}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qc=Jc(t=>Math.ceil(t)),tl=gu(o["Ceil"],Qc),el={kernelName:o["Ceil"],backendName:"cpu",kernelFunc:tl},nl=bu(o["ClipByValue"],(t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t}),rl={kernelName:o["ClipByValue"],backendName:"cpu",kernelFunc:nl},al=t=>{const{x:e}=t.inputs,n=t.backend,r=new Float32Array(o["util"].sizeFromShape(e.shape)),a=n.data.get(e.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,u=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values;for(let o=0;o<u.length;o++){const t=u[o],e=c[o];r[o]=Math.hypot(t,e)}return n.makeOutput(r,e.shape,"float32")},sl={kernelName:o["ComplexAbs"],backendName:"cpu",kernelFunc:al};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function il(t,e,n,r){const a=o["util"].getArrayFromDType(n,o["util"].sizeFromShape(e));if(r&&"string"!==n){let e=0;t.forEach(t=>{const n=o["util"].sizeFromShape(t.shape);a.set(t.vals,e),e+=n})}else{let r=0;t.forEach(t=>{const s="string"===n?o["backend_util"].fromUint8ToStringArray(t.vals):t.vals;let i=0;for(let n=0;n<t.shape[0];++n){const o=n*e[1]+r;for(let e=0;e<t.shape[1];++e)a[o+e]=s[i++]}r+=t.shape[1]})}return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ol(t){const{inputs:e,backend:n}=t,{input:r}=e,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const ul={kernelName:o["Imag"],backendName:"cpu",kernelFunc:ol};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cl(t){const{inputs:e,backend:n,attrs:r}=t,{axis:a}=r,s=o["util"].parseAxisParam(a,e[0].shape)[0];let i=o["backend_util"].computeOutShape(e.map(t=>t.shape),s);if(0===o["util"].sizeFromShape(i))return n.makeTensorInfo(i,e[0].dtype,[]);const u=e.filter(t=>o["util"].sizeFromShape(t.shape)>0);if(1===u.length)return vu({inputs:{x:u[0]},backend:n});const c=u.map(t=>t.shape);if(o["backend_util"].assertParamsConsistent(c,s),"complex64"===u[0].dtype){const t=u.map(t=>_u({inputs:{input:t},backend:n})),e=u.map(t=>ol({inputs:{input:t},backend:n})),r=cl({inputs:t,backend:n,attrs:{axis:s}}),a=cl({inputs:e,backend:n,attrs:{axis:s}}),i=Ru({inputs:{real:r,imag:a},backend:n});return t.forEach(t=>n.disposeIntermediateTensorInfo(t)),e.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}const l=u.map(t=>{const e=o["util"].sizeFromShape(t.shape.slice(s)),r=[-1,e];return Hu({inputs:{x:t},backend:n,attrs:{shape:r}})}),d=l.map(t=>({vals:n.data.get(t.dataId).values,shape:t.shape}));i=o["backend_util"].computeOutShape(l.map(t=>t.shape),1);const h=1===l[0].shape[0],p=il(d,i,e[0].dtype,h),f=o["backend_util"].computeOutShape(u.map(t=>t.shape),s),m=n.makeTensorInfo(f,e[0].dtype,p);return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),m}const ll={kernelName:o["Concat"],backendName:"cpu",kernelFunc:cl};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dl(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s}=e,{strides:i,pad:u,dataFormat:c,dilations:l,dimRoundingMode:d}=r;hu([a,s],"conv2d");const h=o["backend_util"].convertConv2DDataFormat(c),p=o["backend_util"].computeConv2DInfo(a.shape,s.shape,i,l,u,d,!1,h),f=p.filterHeight,m=p.filterWidth,b=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,x=p.padInfo.top,v="channelsLast"===p.dataFormat,w=new o["TensorBuffer"](p.outShape,a.dtype),k=o["util"].computeStrides(a.shape),O=o["util"].computeStrides(s.shape),I=k[0],N=v?k[1]:k[2],S=v?k[2]:1,C=v?1:k[1],j=w.strides[0],T=v?w.strides[1]:w.strides[2],E=v?w.strides[2]:1,A=v?1:w.strides[1],$=n.data.get(a.dataId).values,R=n.data.get(s.dataId).values,D=w.values;for(let o=0;o<p.batchSize;++o){const t=o*I,e=o*j;for(let n=0;n<p.outHeight;++n){const r=e+n*T,a=n*p.strideHeight-x;for(let e=0;e<f;++e){const n=a+e*b;if(n<0||n>=p.inHeight)continue;const s=e*O[0],i=t+n*N;for(let t=0;t<p.outWidth;++t){const e=r+t*E,n=t*p.strideWidth-y;for(let t=0;t<m;++t){const r=n+t*g;if(r<0||r>=p.inWidth)continue;const a=s+t*O[1],o=i+r*S;let u=a;for(let t=0;t<p.inChannels;++t){const n=$[o+t*C];for(let t=0;t<p.outChannels;++t)D[e+t*A]+=n*R[u+t];u+=p.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,D)}const hl={kernelName:o["Conv2D"],backendName:"cpu",kernelFunc:dl};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pl(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,dy:s}=e,{strides:i,pad:u,dataFormat:c,dimRoundingMode:l,filterShape:d}=r;hu([a,s],"conv2dBackpropFilter");const h=o["backend_util"].convertConv2DDataFormat(c),p=o["backend_util"].computeConv2DInfo(a.shape,d,i,1,u,l,!1,h),{strideHeight:f,strideWidth:m,filterHeight:b,filterWidth:g}=p,y="channelsLast"===p.dataFormat,x=new o["TensorBuffer"](p.filterShape,"float32"),v=p.padInfo.left,w=p.padInfo.top,k=n.data.get(a.dataId).values,O=n.data.get(s.dataId).values,I=new o["TensorBuffer"](a.shape,a.dtype,k),N=new o["TensorBuffer"](s.shape,s.dtype,O);for(let o=0;o<b;++o){const t=Math.max(0,Math.ceil((w-o)/f)),e=Math.min(p.outHeight,(p.inHeight+w-o)/f);for(let n=0;n<g;++n){const r=Math.max(0,Math.ceil((v-n)/m)),a=Math.min(p.outWidth,(p.inWidth+v-n)/m);for(let s=0;s<p.inChannels;++s)for(let i=0;i<p.outChannels;++i){let u=0;for(let c=0;c<p.batchSize;++c)for(let l=t;l<e;++l){const t=o+l*f-w;for(let e=r;e<a;++e){const r=n+e*m-v;u+=y?I.get(c,t,r,s)*N.get(c,l,e,i):I.get(c,s,t,r)*N.get(c,i,l,e)}}x.set(u,o,n,s,i)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}const fl={kernelName:o["Conv2DBackpropFilter"],backendName:"cpu",kernelFunc:pl};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ml(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,filter:s}=e,{inputShape:i,strides:u,pad:c,dataFormat:l,dimRoundingMode:d}=r;hu([a,s],"conv2dBackpropInput");const h=o["util"].computeStrides(s.shape),p=o["util"].computeStrides(a.shape);let f=o["backend_util"].convertConv2DDataFormat(l);const m=o["backend_util"].computeConv2DInfo(i,s.shape,u,1,c,d,!1,f),b=new o["TensorBuffer"](m.inShape,"float32"),g=b.values,y=n.data.get(a.dataId).values,x=n.data.get(s.dataId).values,[v,w,k]=h,{batchSize:O,filterHeight:I,filterWidth:N,inChannels:S,inHeight:C,inWidth:j,outChannels:T,outHeight:E,outWidth:A,strideHeight:$,strideWidth:R}=m;f=m.dataFormat;const D=I-1-m.padInfo.top,F=N-1-m.padInfo.left,_="channelsLast"===f,M=b.strides[0],z=_?b.strides[1]:b.strides[2],L=_?b.strides[2]:1,P=_?1:b.strides[1],B=p[0],W=_?p[1]:p[2],V=_?p[2]:1,U=_?1:p[1];for(let o=0;o<O;++o)for(let t=0;t<S;++t)for(let e=0;e<C;++e){const n=e-D,r=Math.max(0,Math.ceil(n/$)),a=Math.min(E,(I+n)/$);for(let s=0;s<j;++s){const i=s-F,u=Math.max(0,Math.ceil(i/R)),c=Math.min(A,(N+i)/R);let l=0;for(let e=r;e<a;++e){const r=e*$-n;for(let n=u;n<c;++n){const a=n*R-i,s=B*o+W*e+V*n,u=v*(I-1-r)+w*(N-1-a)+k*t;for(let t=0;t<T;++t){const e=y[s+U*t],n=x[u+t];l+=e*n}}}const d=M*o+z*e+L*s+P*t;g[d]=l}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}const bl={kernelName:o["Conv2DBackpropInput"],backendName:"cpu",kernelFunc:ml};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gl(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s}=e,{strides:i,pad:u,dilations:c}=r;hu([a,s],"conv3d");const l=o["backend_util"].computeConv3DInfo(a.shape,s.shape,i,c,u),{filterDepth:d,filterHeight:h,filterWidth:p,dilationDepth:f,dilationHeight:m,dilationWidth:b,padInfo:g}=l,y=g.front,x=g.left,v=g.top,w=new o["TensorBuffer"](l.outShape,a.dtype),k=n.data.get(a.dataId).values,O=n.data.get(s.dataId).values,I=w.values,N=o["util"].computeStrides(a.shape),S=o["util"].computeStrides(s.shape);for(let o=0;o<l.batchSize;++o){const t=o*N[0],e=o*w.strides[0];for(let n=0;n<l.outDepth;++n){const r=e+n*w.strides[1],a=n*l.strideDepth-y;for(let e=0;e<d;++e){const n=a+e*f;if(n<0||n>=l.inDepth)continue;const s=e*S[0],i=t+n*N[1];for(let t=0;t<l.outHeight;++t){const e=r+t*w.strides[2],n=t*l.strideHeight-v;for(let t=0;t<h;++t){const r=n+t*m;if(r<0||r>=l.inHeight)continue;const a=s+t*S[1],o=i+r*N[2];for(let t=0;t<l.outWidth;++t){const n=e+t*l.outChannels,r=t*l.strideWidth-x;for(let t=0;t<p;++t){const e=r+t*b;if(e<0||e>=l.inWidth)continue;const s=a+t*S[2],i=o+e*l.inChannels;let u=s;for(let t=0;t<l.inChannels;++t){const e=k[i+t];for(let t=0;t<l.outChannels;++t)I[n+t]+=e*O[u+t];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}const yl={kernelName:o["Conv3D"],backendName:"cpu",kernelFunc:gl};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xl(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,dy:s}=e,{strides:i,pad:u,filterShape:c}=r;hu([a,s],"conv3dBackpropFilterV2");const l=o["util"].computeStrides(a.shape),d=o["util"].computeStrides(s.shape),h=o["backend_util"].computeConv3DInfo(a.shape,c,i,1,u),p=h.strideDepth,f=h.strideHeight,m=h.strideWidth,b=h.filterDepth,g=h.filterHeight,y=h.filterWidth,x=new o["TensorBuffer"](h.filterShape,"float32"),v=x.values,[w,k,O,I]=x.strides,N=n.data.get(s.dataId).values,[S,C,j,T]=d,E=n.data.get(a.dataId).values,[A,$,R,D]=l,F=h.padInfo.front,_=h.padInfo.left,M=h.padInfo.top;for(let o=0;o<b;++o){const t=Math.max(0,Math.ceil((F-o)/p)),e=Math.min(h.outDepth,(h.inDepth+F-o)/p),n=o*w;for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((M-r)/f)),s=Math.min(h.outHeight,(h.inHeight+M-r)/f),i=r*k+n;for(let n=0;n<y;++n){const u=Math.max(0,Math.ceil((_-n)/m)),c=Math.min(h.outWidth,(h.inWidth+_-n)/m),l=n*O+i;for(let i=0;i<h.inChannels;++i){const d=i*I+l;for(let l=0;l<h.outChannels;++l){let b=0;for(let d=0;d<h.batchSize;++d){const h=d*A,g=d*S;for(let d=t;d<e;++d){const t=o+d*p-F,e=t*$+h,y=d*C+g;for(let o=a;o<s;++o){const t=r+o*f-M,a=t*R+e,s=o*j+y;for(let e=u;e<c;++e){const t=n+e*m-_,r=t*D+a,o=e*T+s;b+=E[r+i]*N[o+l]}}}}v[d+l]=b}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}const vl={kernelName:o["Conv3DBackpropFilterV2"],backendName:"cpu",kernelFunc:xl};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wl(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,filter:s}=e,{pad:i,strides:u,inputShape:c}=r;hu([a],"conv3dBackpropInputV2");const l=o["util"].computeStrides(a.shape),d=o["util"].computeStrides(s.shape),h=o["backend_util"].computeConv3DInfo(c,s.shape,u,1,i),p=new o["TensorBuffer"](h.inShape,"float32"),f=p.values,[m,b,g,y]=p.strides,x=n.data.get(a.dataId).values,[v,w,k,O]=l,I=n.data.get(s.dataId).values,[N,S,C,j]=d,{batchSize:T,filterDepth:E,filterHeight:A,filterWidth:$,inChannels:R,inDepth:D,inHeight:F,inWidth:_,outChannels:M,outDepth:z,outHeight:L,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=h,U=E-1-h.padInfo.front,G=A-1-h.padInfo.top,H=$-1-h.padInfo.left;for(let o=0;o<T;++o)for(let t=0;t<R;++t)for(let e=0;e<D;++e){const n=e-U,r=Math.max(0,Math.ceil(n/B)),a=Math.min(z,(E+n)/B);for(let s=0;s<F;++s){const i=s-G,u=Math.max(0,Math.ceil(i/W)),c=Math.min(L,(A+i)/W);for(let l=0;l<_;++l){const d=l-H,h=Math.max(0,Math.ceil(d/V)),p=Math.min(P,($+d)/V);let T=0;for(let e=r;e<a;++e){const r=e*B-n;for(let n=u;n<c;++n){const a=n*W-i;for(let s=h;s<p;++s){const i=s*V-d,u=v*o+w*e+k*n+O*s,c=N*(E-1-r)+S*(A-1-a)+C*($-1-i)+j*t;for(let t=0;t<M;++t){const e=x[u+t],n=I[c+t];T+=e*n}}}}f[m*o+b*e+g*s+y*l+t]=T}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}const kl={kernelName:o["Conv3DBackpropInputV2"],backendName:"cpu",kernelFunc:wl},Ol=bu(o["Cos"],t=>Math.cos(t)),Il={kernelName:o["Cos"],backendName:"cpu",kernelFunc:Ol},Nl=bu(o["Cosh"],t=>Math.cosh(t)),Sl={kernelName:o["Cosh"],backendName:"cpu",kernelFunc:Nl};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Cl(t){const{inputs:e,backend:n,attrs:r}=t,{image:a,boxes:s,boxInd:i}=e,{cropSize:u,method:c,extrapolationValue:l}=r,[d,h,p,f]=a.shape,m=s.shape[0],[b,g]=u,y=Object(o["buffer"])([m,b,g,f],"float32"),x=n.data.get(s.dataId).values,v=n.data.get(i.dataId).values,w=n.data.get(a.dataId).values,k=o["util"].computeStrides(a.shape),O=o["util"].computeStrides(y.shape);for(let o=0;o<m;o++){const t=4*o,e=x[t],n=x[t+1],r=x[t+2],a=x[t+3],s=v[o];if(s>=d)continue;const i=b>1?(r-e)*(h-1)/(b-1):0,u=g>1?(a-n)*(p-1)/(g-1):0;for(let d=0;d<b;d++){const t=b>1?e*(h-1)+d*i:.5*(e+r)*(h-1);if(t<0||t>h-1)for(let e=0;e<g;e++)for(let t=0;t<f;t++){const n=t+e*O[2]+d*O[1]+o*O[0];y.values[n]=l}else if("bilinear"===c){const e=Math.floor(t),r=Math.ceil(t),i=t-e;for(let t=0;t<g;t++){const c=g>1?n*(p-1)+t*u:.5*(n+a)*(p-1);if(c<0||c>p-1){for(let e=0;e<f;e++){const n=e+t*O[2]+d*O[1]+o*O[0];y.values[n]=l}continue}const h=Math.floor(c),m=Math.ceil(c),b=c-h;for(let n=0;n<f;n++){let a=n+h*k[2]+e*k[1]+s*k[0];const u=w[a];a=n+m*k[2]+e*k[1]+s*k[0];const c=w[a];a=n+h*k[2]+r*k[1]+s*k[0];const l=w[a];a=n+m*k[2]+r*k[1]+s*k[0];const p=w[a],f=u+(c-u)*b,g=l+(p-l)*b;a=n+t*O[2]+d*O[1]+o*O[0],y.values[a]=f+(g-f)*i}}}else for(let e=0;e<g;++e){const r=g>1?n*(p-1)+e*u:.5*(n+a)*(p-1);if(r<0||r>p-1){for(let t=0;t<f;t++){const n=t+e*O[2]+d*O[1]+o*O[0];y.values[n]=l}continue}const i=Math.round(r),c=Math.round(t);for(let t=0;t<f;t++){const n=t+i*k[2]+c*k[1]+s*k[0],r=t+e*O[2]+d*O[1]+o*O[0];y.values[r]=w[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}const jl={kernelName:o["CropAndResize"],backendName:"cpu",kernelFunc:Cl};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tl(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s,exclusive:i,reverse:u}=r;hu(a,"cumsum");const c=o["backend_util"].getAxesPermutation([s],a.shape.length);let l=a;null!=c&&(l=uc({inputs:{x:a},backend:n,attrs:{perm:c}}));const d=o["backend_util"].getInnerMostAxes(1,a.shape.length)[0];if(d!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${d}`);const h=Object(o["upcastType"])(l.dtype,"int32"),p=o["util"].makeZerosTypedArray(o["util"].sizeFromShape(l.shape),h),f=n.data.get(l.dataId).values,m=l.shape[l.shape.length-1],b=u?(t,e)=>t+m-e-1:(t,e)=>t+e;for(let o=0;o<f.length;o+=m)for(let t=0;t<m;t++){const e=b(o,t);if(0===t)p[e]=i?0:f[e];else{const n=b(o,t-1);p[e]=i?f[n]+p[n]:f[e]+p[n]}}const g=n.makeTensorInfo(l.shape,h,p);if(null!=c){const t=o["backend_util"].getUndoAxesPermutation(c),e=uc({inputs:{x:g},backend:n,attrs:{perm:t}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}const El={kernelName:o["Cumsum"],backendName:"cpu",kernelFunc:Tl};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Al(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,weights:s}=e,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const t=n.data.get(a.dataId).values,e=n.data.get(s.dataId).values,r=Kc(t,e,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const t=n.bufferSync(a),e=n.bufferSync(s),r=Xc(t,e,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+a.shape.length+".")}const $l={kernelName:o["DenseBincount"],backendName:"cpu",kernelFunc:Al};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rl(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{blockSize:s,dataFormat:i}=r;o["util"].assert("NHWC"===i,()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+i),o["util"].assert(s>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+s);const u=a.shape[0],c=a.shape[1],l=a.shape[2],d=a.shape[3],h=c*s,p=l*s,f=d/(s*s),m=n.data.get(a.dataId).values,b=new Float32Array(u*h*p*f);let g=0;for(let o=0;o<u;++o)for(let t=0;t<h;++t){const e=Math.floor(t/s),n=t%s;for(let t=0;t<p;++t){const r=Math.floor(t/s),a=t%s,i=(n*s+a)*f;for(let t=0;t<f;++t){const n=t+i,a=n+d*(r+l*(e+c*o));b[g++]=m[a]}}}return n.makeTensorInfo([u,h,p,f],a.dtype,b)}const Dl={kernelName:o["DepthToSpace"],backendName:"cpu",kernelFunc:Rl};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fl(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s}=e,{strides:i,pad:u,dilations:c,dimRoundingMode:l}=r;hu([a,s],"depthwiseConv2DNative");const d=o["util"].computeStrides(a.shape),h=o["util"].computeStrides(s.shape);let p=c;null==p&&(p=[1,1]),o["util"].assert(o["backend_util"].eitherStridesOrDilationsAreOne(i,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);const f=o["backend_util"].computeConv2DInfo(a.shape,s.shape,i,p,u,l,!0),{filterHeight:m,filterWidth:b,dilationHeight:g,dilationWidth:y,padInfo:x}=f,v=x.left,w=x.top,k=f.outChannels/f.inChannels,O=new o["TensorBuffer"](f.outShape,a.dtype),I=n.data.get(a.dataId).values,N=n.data.get(s.dataId).values,S=O.values;for(let o=0;o<f.batchSize;++o){const t=o*d[0],e=o*O.strides[0];for(let n=0;n<f.outHeight;++n){const r=e+n*O.strides[1],a=n*f.strideHeight-v;for(let e=0;e<m;++e){const n=a+e*g;if(n<0||n>=f.inHeight)continue;const s=e*h[0],i=t+n*d[1];for(let t=0;t<f.outWidth;++t){const e=r+t*O.strides[2],n=t*f.strideWidth-w;for(let t=0;t<b;++t){const r=n+t*y;if(r<0||r>=f.inWidth)continue;const a=s+t*h[1],o=i+r*f.inChannels;let u=e,c=a;for(let t=0;t<f.inChannels;++t){const e=I[o+t];for(let t=0;t<k;++t)S[u+t]+=e*N[c+t];u+=k,c+=k}}}}}}return n.makeTensorInfo(O.shape,O.dtype,O.values)}const _l={kernelName:o["DepthwiseConv2dNative"],backendName:"cpu",kernelFunc:Fl};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ml(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,dy:s}=e,{strides:i,dilations:u,pad:c,dimRoundingMode:l,filterShape:d}=r;hu([a,s],"depthwiseConv2dNativeBackpropFilter");const h=o["backend_util"].computeConv2DInfo(a.shape,d,i,u,c,l,!0),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:b}=h,g=new o["TensorBuffer"](h.filterShape,"float32"),y=h.padInfo.left,x=h.padInfo.top,v=h.outChannels/h.inChannels,w=n.data.get(a.dataId).values,k=new o["TensorBuffer"](a.shape,a.dtype,w),O=n.data.get(s.dataId).values,I=new o["TensorBuffer"](s.shape,s.dtype,O);for(let o=0;o<m;++o){const t=Math.max(0,Math.ceil((x-o)/p)),e=Math.min(h.outHeight,(h.inHeight+x-o)/p);for(let n=0;n<b;++n){const r=Math.max(0,Math.ceil((y-n)/f)),a=Math.min(h.outWidth,(h.inWidth+y-n)/f);for(let s=0;s<h.outChannels;++s){const i=Math.trunc(s/v),u=s%v;let c=0;for(let l=0;l<h.batchSize;++l)for(let u=t;u<e;++u){const t=o+u*p-x;for(let e=r;e<a;++e){const r=n+e*f-y;c+=k.get(l,t,r,i)*I.get(l,u,e,s)}}g.set(c,o,n,i,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}const zl={kernelName:o["DepthwiseConv2dNativeBackpropFilter"],backendName:"cpu",kernelFunc:Ml};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ll(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,filter:s}=e,{strides:i,dilations:u,pad:c,dimRoundingMode:l,inputShape:d}=r;hu([a,s],"depthwiseConv2DNativeBackpropInput");const h=o["util"].computeStrides(a.shape),p=o["util"].computeStrides(s.shape),f=o["backend_util"].computeConv2DInfo(d,s.shape,i,u,c,l,!0),m=new o["TensorBuffer"](f.inShape,"float32"),b=m.values,[g,y,x]=m.strides,v=n.data.get(a.dataId).values,[w,k,O]=h,I=n.data.get(s.dataId).values,[N,S,C]=p,{batchSize:j,filterHeight:T,filterWidth:E,inChannels:A,inHeight:$,inWidth:R,outChannels:D,outHeight:F,outWidth:_,strideHeight:M,strideWidth:z}=f,L=T-1-f.padInfo.top,P=E-1-f.padInfo.left,B=D/A;for(let o=0;o<j;++o)for(let t=0;t<A;++t)for(let e=0;e<$;++e){const n=e-L,r=Math.max(0,Math.ceil(n/M)),a=Math.min(F,(T+n)/M);for(let s=0;s<R;++s){const i=s-P,u=Math.max(0,Math.ceil(i/z)),c=Math.min(_,(E+i)/z);let l=0;for(let e=r;e<a;++e){const r=e*M-n;for(let n=u;n<c;++n){const a=n*z-i,s=w*o+k*e+O*n,u=N*(T-1-r)+S*(E-1-a)+C*t;for(let e=0;e<B;++e){const n=t*B+e,r=v[s+n],a=I[u+e];l+=r*a}}}b[g*o+y*e+x*s+t]=l}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}const Pl={kernelName:o["DepthwiseConv2dNativeBackpropInput"],backendName:"cpu",kernelFunc:Ll};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bl(t){const{inputs:e,backend:n}=t,{x:r}=e,a=o["util"].sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=Object(o["buffer"])([a,a],r.dtype),u=i.values;for(let o=0;o<s.length;o++)u[o*a+o]=s[o];const c=[...r.shape,...r.shape];return n.makeTensorInfo(c,i.dtype,i.values)}const Wl={kernelName:o["Diag"],backendName:"cpu",kernelFunc:Bl},Vl={kernelName:o["Dilation2D"],backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:a}=t,{strides:s,pad:i,dilations:u}=n,c=e,l=c.data.get(r.dataId).values,d=r.shape.length,h=c.data.get(a.dataId).values,p=a.shape.length,{batchSize:f,inHeight:m,inWidth:b,inChannels:g,outHeight:y,outWidth:x,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:O,filterWidth:I,dilationHeight:N,dilationWidth:S,outShape:C}=o["backend_util"].computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",u),j=o["util"].sizeFromShape(C),T=C.length,E=o["util"].getArrayFromDType(r.dtype,j);for(let $=0;$<f;++$)for(let t=0;t<y;++t){const e=t*w-v.top;for(let n=0;n<x;++n){const s=n*k-v.left;for(let i=0;i<g;++i){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<O;++t){const n=e+t*N;if(n>=0&&n<m)for(let e=0;e<I;++e){const c=s+e*S;if(c>=0&&c<b){const s=o["util"].locToIndex([$,n,c,i],d,o["util"].computeStrides(r.shape)),f=o["util"].locToIndex([t,e,i],p,o["util"].computeStrides(a.shape)),m=l[s]+h[f];m>u&&(u=m)}}}const c=o["util"].locToIndex([$,t,n,i],T,o["util"].computeStrides(C));E[c]=u}}}const A=c.write(o["util"].toTypedArray(E,r.dtype),C,r.dtype);return{dataId:A,shape:C,dtype:r.dtype}}},Ul={kernelName:o["Dilation2DBackpropFilter"],backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:a,dy:s}=t,{strides:i,pad:u,dilations:c}=n,l=e,d=o["util"].toNestedArray(r.shape,l.data.get(r.dataId).values),h=o["util"].toNestedArray(a.shape,l.data.get(a.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:b,outHeight:g,outWidth:y,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:O,dilationHeight:I,dilationWidth:N,outShape:S}=o["backend_util"].computeDilation2DInfo(r.shape,a.shape,i,u,"NHWC",c);o["util"].assert(s.rank===S.length,()=>`Error in ${o["Dilation2DBackpropFilter"]}, dy must have the same rank as output ${S.length}, but got `+s.rank);const C=o["util"].toNestedArray(S,l.data.get(s.dataId).values),j=o["util"].makeZerosNestedTypedArray(a.shape,a.dtype);for(let o=0;o<p;++o)for(let t=0;t<g;++t){const e=t*v-x.top;for(let n=0;n<y;++n){const r=n*w-x.left;for(let a=0;a<b;++a){let s=Number.MIN_SAFE_INTEGER,i=0,u=0;for(let t=0;t<k;++t){const n=e+t*I;if(n>=0&&n<f)for(let e=0;e<O;++e){const c=r+e*N;if(c>=0&&c<m){const r=d[o][n][c][a]+h[t][e][a];r>s&&(s=r,i=t,u=e)}}}j[i][u][a]+=C[o][t][n][a]}}}const T=l.write(o["util"].toTypedArray(j,r.dtype),a.shape,a.dtype);return{dataId:T,shape:a.shape,dtype:a.dtype}}},Gl={kernelName:o["Dilation2DBackpropInput"],backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:a,dy:s}=t,{strides:i,pad:u,dilations:c}=n,l=e,d=o["util"].toNestedArray(r.shape,l.data.get(r.dataId).values),h=o["util"].toNestedArray(a.shape,l.data.get(a.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:b,outHeight:g,outWidth:y,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:O,dilationHeight:I,dilationWidth:N,outShape:S}=o["backend_util"].computeDilation2DInfo(r.shape,a.shape,i,u,"NHWC",c);o["util"].assert(s.rank===S.length,()=>`Error in ${o["Dilation2DBackpropInput"]}, dy must have the same rank as output ${S.length}, but got `+s.rank);const C=o["util"].toNestedArray(S,l.data.get(s.dataId).values),j=o["util"].makeZerosNestedTypedArray(r.shape,r.dtype);for(let o=0;o<p;++o)for(let t=0;t<g;++t){const e=t*v-x.top;for(let n=0;n<y;++n){const r=n*w-x.left;for(let a=0;a<b;++a){let s=Number.MIN_SAFE_INTEGER,i=e<0?0:e,u=r<0?0:r;for(let t=0;t<k;++t){const n=e+t*I;if(n>=0&&n<f)for(let e=0;e<O;++e){const c=r+e*N;if(c>=0&&c<m){const r=d[o][n][c][a]+h[t][e][a];r>s&&(s=r,i=n,u=c)}}}j[o][i][u][a]+=C[o][t][n][a]}}}const T=l.write(o["util"].toTypedArray(j,r.dtype),r.shape,r.dtype);return{dataId:T,shape:r.shape,dtype:r.dtype}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Hl(t){const{inputs:e,backend:n}=t,{dy:r,y:a}=e;hu([r,a],"eluGrad");const s=new Float32Array(o["util"].sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,u=n.data.get(r.dataId).values;for(let o=0;o<i.length;++o){const t=i[o];s[o]=t>=1?u[o]:u[o]*(t+1)}return n.makeTensorInfo(a.shape,"float32",s)}const ql={kernelName:o["EluGrad"],backendName:"cpu",kernelFunc:Hl},Kl=Iu((t,e)=>t===e?1:0),Xl=Pu(o["Equal"],Kl,null,"bool"),Yl={kernelName:o["Equal"],backendName:"cpu",kernelFunc:Xl},Zl=o["backend_util"].ERF_P,Jl=o["backend_util"].ERF_A1,Ql=o["backend_util"].ERF_A2,td=o["backend_util"].ERF_A3,ed=o["backend_util"].ERF_A4,nd=o["backend_util"].ERF_A5,rd=bu(o["Erf"],t=>{const e=Math.sign(t),n=Math.abs(t),r=1/(1+Zl*n);return e*(1-((((nd*r+ed)*r+td)*r+Ql)*r+Jl)*r*Math.exp(-n*n))}),ad={kernelName:o["Erf"],backendName:"cpu",kernelFunc:rd},sd=Jc(t=>Math.exp(t)),id=gu(o["Exp"],sd),od={kernelName:o["Exp"],backendName:"cpu",kernelFunc:id};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ud(t){const{inputs:e,backend:n,attrs:r}=t,{input:a}=e,{dim:s}=r,i=a.shape.length,u=a.shape.slice();let c=s;return s<0&&(o["util"].assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),c=i+s+1),u.splice(c,0,1),Hu({inputs:{x:a},backend:n,attrs:{shape:u}})}const cd={kernelName:o["ExpandDims"],backendName:"cpu",kernelFunc:ud},ld=Jc(t=>Math.expm1(t)),dd=gu(o["Expm1"],ld),hd={kernelName:o["Expm1"],backendName:"cpu",kernelFunc:dd},pd=Iu((t,e)=>t*e),fd=Bu((t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n})),md=Pu(o["Multiply"],pd,fd),bd={kernelName:o["Multiply"],backendName:"cpu",kernelFunc:md},gd=Iu((t,e)=>t/e),yd=Pu(o["RealDiv"],gd),xd={kernelName:o["RealDiv"],backendName:"cpu",kernelFunc:yd},vd=Iu((t,e)=>t-e),wd=Bu((t,e,n,r)=>({real:t-n,imag:e-r})),kd=Pu(o["Sub"],vd,wd),Od={kernelName:o["Sub"],backendName:"cpu",kernelFunc:kd};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Id(t,e,n){const r=t.shape,a=r[0],s=r[1],i=n.data.get(t.dataId),u=i.complexTensorInfos.real,c=i.complexTensorInfos.imag,l=[a,s],d=o["util"].sizeFromShape(l),h=o["util"].getTypedArrayFromDType("float32",d),p=o["util"].getTypedArrayFromDType("float32",d);for(let g=0;g<a;g++){const t=Uc({inputs:{x:u},backend:n,attrs:{begin:[g,0],size:[1,s]}}),r=Uc({inputs:{x:c},backend:n,attrs:{begin:[g,0],size:[1,s]}}),a=Ru({inputs:{real:t,imag:r},backend:n}),{real:i,imag:l}=Nd(a,e,n),d=o["backend_util"].mergeRealAndImagArrays(i,l);for(let e=0;e<s;e++){const t=o["backend_util"].getComplexWithIndex(d,e);h[g*s+e]=t.real,p[g*s+e]=t.imag}n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a)}const f=n.makeTensorInfo(l,"float32",h),m=n.makeTensorInfo(l,"float32",p),b=Ru({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),b}function Nd(t,e,n){const r=o["util"].sizeFromShape(t.shape),a=n.data.get(t.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(Sd(r)){const a=Cd(s,i,r,e,n),u=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(u,"float32",a.real),e=n.makeTensorInfo(u,"float32",a.imag),s=n.makeTensorInfo([],"float32",o["util"].createScalarValue(r,"float32")),i=vu({inputs:{x:s},backend:n}),c=xd.kernelFunc({inputs:{a:t,b:s},backend:n}),l=xd.kernelFunc({inputs:{a:e,b:i},backend:n}),d=n.data.get(c.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),{real:d,imag:h}}return a}{const t=o["backend_util"].mergeRealAndImagArrays(s,i),n=jd(t,r,e);return o["backend_util"].splitRealAndImagArrays(n)}}function Sd(t){return 0===(t&t-1)}function Cd(t,e,n,r,a){if(1===n)return{real:t,imag:e};const s=o["backend_util"].mergeRealAndImagArrays(t,e),i=n/2,u=o["backend_util"].complexWithEvenIndex(s),c=u.real,l=u.imag,d=[c.length],h=a.makeTensorInfo(d,"float32",c),p=a.makeTensorInfo(d,"float32",l),f=Ru({inputs:{real:h,imag:p},backend:a}),m=o["backend_util"].complexWithOddIndex(s),b=m.real,g=m.imag,y=[b.length],x=a.makeTensorInfo(y,"float32",b),v=a.makeTensorInfo(y,"float32",g),w=Ru({inputs:{real:x,imag:v},backend:a}),k=Cd(c,l,i,r,a),O=k.real,I=k.imag,N=[O.length],S=a.makeTensorInfo(N,"float32",O),C=a.makeTensorInfo(N,"float32",I),j=Ru({inputs:{real:S,imag:C},backend:a}),T=Cd(b,g,i,r,a),E=T.real,A=T.imag,$=[E.length],R=a.makeTensorInfo($,"float32",E),D=a.makeTensorInfo($,"float32",A),F=Ru({inputs:{real:R,imag:D},backend:a}),_=o["backend_util"].exponents(n,r),M=[_.real.length],z=a.makeTensorInfo(M,"float32",_.real),L=a.makeTensorInfo(M,"float32",_.imag),P=Ru({inputs:{real:z,imag:L},backend:a}),B=md({inputs:{a:P,b:F},backend:a}),W=Uu({inputs:{a:j,b:B},backend:a}),V=kd({inputs:{a:j,b:B},backend:a}),U=_u({inputs:{input:W},backend:a}),G=_u({inputs:{input:V},backend:a}),H=ol({inputs:{input:W},backend:a}),q=ol({inputs:{input:V},backend:a}),K=cl({inputs:[U,G],backend:a,attrs:{axis:0}}),X=cl({inputs:[H,q],backend:a,attrs:{axis:0}}),Y=a.data.get(K.dataId).values,Z=a.data.get(X.dataId).values;return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo(S),a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),a.disposeIntermediateTensorInfo(X),{real:Y,imag:Z}}function jd(t,e,n){const r=new Float32Array(2*e);for(let a=0;a<e;a++){let s=0,i=0;for(let r=0;r<e;r++){const u=o["backend_util"].exponent(a*r,e,n),c=o["backend_util"].getComplexWithIndex(t,r);s+=c.real*u.real-c.imag*u.imag,i+=c.real*u.imag+c.imag*u.real}n&&(s/=e,i/=e),o["backend_util"].assignToTypedArray(r,s,i,a)}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Td(t){const{inputs:e,backend:n}=t,{input:r}=e,a=o["util"].sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=a/s,u=Hu({inputs:{x:r},backend:n,attrs:{shape:[i,s]}}),c=Id(u,!1,n),l=Hu({inputs:{x:c},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),l}const Ed={kernelName:o["FFT"],backendName:"cpu",kernelFunc:Td};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ad(t){const{backend:e,attrs:n}=t,{shape:r,value:a,dtype:s}=n,i=s||o["util"].inferDtype(a),u=o["util"].getArrayFromDType(i,o["util"].sizeFromShape(r));return Rd(u,a,i),e.makeTensorInfo(r,i,u)}const $d={kernelName:o["Fill"],backendName:"cpu",kernelFunc:Ad};function Rd(t,e,n){t.fill(e)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dd={kernelName:o["FlipLeftRight"],backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,a=n,s=o["util"].getTypedArrayFromDType(r.dtype,o["util"].sizeFromShape(r.shape)),[i,u,c,l]=r.shape,d=a.data.get(r.dataId).values;for(let o=0;o<i;o++){const t=o*c*u*l;for(let e=0;e<u;e++){const n=e*(c*l);for(let r=0;r<c;r++){const a=r*l;for(let o=0;o<l;o++){const u=[i,e,r,o],h=u[2],p=Math.round(c-h),f=t+n+a+o;let m=d[f];if(p>=0&&p<c){const e=p*l,r=t+n+e+o;m=d[r]}s[f]=m}}}}const h=a.write(s,r.shape,r.dtype);return{dataId:h,shape:r.shape,dtype:r.dtype}}},Fd=Jc(t=>Math.floor(t)),_d=gu(o["Floor"],Fd),Md={kernelName:o["Floor"],backendName:"cpu",kernelFunc:_d},zd=Iu((t,e)=>Math.floor(t/e)),Ld=Pu(o["FloorDiv"],zd,null,"int32"),Pd={kernelName:o["FloorDiv"],backendName:"cpu",kernelFunc:Ld};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Bd(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s,bias:i,preluActivationWeights:o}=e,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=dl({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}});if(i){const t=m;m=Uu({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=m;m=$u(n,m,p,o,f),n.disposeIntermediateTensorInfo(t)}return m}const Wd={kernelName:o["FusedConv2D"],backendName:"cpu",kernelFunc:Bd};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vd(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s,bias:i,preluActivationWeights:o}=e,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=Fl({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}});if(i){const t=m;m=Uu({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=m;m=$u(n,m,p,o,f),n.disposeIntermediateTensorInfo(t)}return m}const Ud={kernelName:o["FusedDepthwiseConv2D"],backendName:"cpu",kernelFunc:Vd};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gd(t){const{inputs:e,backend:n}=t,{params:r,indices:a}=e,s=o["util"].sizeFromShape(r.shape),i=a.shape,u=i[i.length-1],[c,l,d,h]=o["backend_util"].prepareAndValidate(r,a);if(0===l)return n.makeTensorInfo(c,r.dtype,[]);const p=Object(o["buffer"])([l,d],r.dtype),f=n.data.get(a.dataId).values,m=n.data.get(r.dataId).values;for(let o=0;o<l;o++){const t=[];let e=0;for(let n=0;n<u;n++){const r=f[o*u+n];e+=r*h[n],t.push(r)}if(e<0||e>=s/d)throw new Error(`Invalid indices: ${t} does not index into ${r.shape}`);for(let n=0;n<d;n++)p.values[o*d+n]=m[e*d+n]}return n.makeTensorInfo(c,p.dtype,p.values)}const Hd={kernelName:o["GatherNd"],backendName:"cpu",kernelFunc:Gd};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qd(t,e,n){const r=Object(o["buffer"])(n,t.dtype);for(let a=0;a<r.size;++a){const n=r.indexToLoc(a),s=n.slice(),i=s[0],o=s[2],u=e.locToIndex([i,o]);s[2]=e.values[u];const c=t.locToIndex(s);r.values[a]=t.values[c]}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kd(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,indices:s}=e,{axis:i,batchDims:u}=r;hu([a,s],"gatherV2");let c=u;null==u&&(c=0);const l=o["util"].sizeFromShape(s.shape),d=o["util"].parseAxisParam(i,a.shape)[0],h=o["backend_util"].segment_util.collectGatherOpShapeInfo(a,s,d,c),p=Hu({inputs:{x:a},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),f=Hu({inputs:{x:s},backend:n,attrs:{shape:[h.batchSize,l/h.batchSize]}}),m=[h.batchSize,h.outerSize,l/h.batchSize,h.sliceSize],b=n.bufferSync(f),g=n.bufferSync(p),y=qd(g,b,m);return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.makeTensorInfo(h.outputShape,y.dtype,y.values)}const Xd={kernelName:o["GatherV2"],backendName:"cpu",kernelFunc:Kd},Yd=Iu((t,e)=>t>e?1:0),Zd=Pu(o["Greater"],Yd,null,"bool"),Jd={kernelName:o["Greater"],backendName:"cpu",kernelFunc:Zd},Qd=Iu((t,e)=>t>=e?1:0),th=Pu(o["GreaterEqual"],Qd,null,"bool"),eh={kernelName:o["GreaterEqual"],backendName:"cpu",kernelFunc:th};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nh(t){const{inputs:e,backend:n}=t,{input:r}=e,a=o["util"].sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=a/s,u=Hu({inputs:{x:r},backend:n,attrs:{shape:[i,s]}}),c=Id(u,!0,n),l=Hu({inputs:{x:c},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),l}const rh={kernelName:o["IFFT"],backendName:"cpu",kernelFunc:nh},ah=bu(o["IsFinite"],t=>Number.isFinite(t)?1:0,"bool"),sh={kernelName:o["IsFinite"],backendName:"cpu",kernelFunc:ah},ih=bu(o["IsInf"],t=>Math.abs(t)===1/0?1:0,"bool"),oh={kernelName:o["IsInf"],backendName:"cpu",kernelFunc:ih},uh=bu(o["IsNan"],t=>Number.isNaN(t)?1:0,"bool"),ch={kernelName:o["IsNan"],backendName:"cpu",kernelFunc:uh},lh=Iu((t,e)=>t<e?1:0),dh=Pu(o["Less"],lh,null,"bool"),hh={kernelName:o["Less"],backendName:"cpu",kernelFunc:dh},ph=Iu((t,e)=>t<=e?1:0),fh=Pu(o["LessEqual"],ph,null,"bool"),mh={kernelName:o["LessEqual"],backendName:"cpu",kernelFunc:fh};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bh(t,e,n){const r=(e-t)/(n-1),a=o["util"].makeZerosTypedArray(n,"float32");a[0]=t;for(let s=1;s<a.length;s++)a[s]=a[s-1]+r;return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gh(t){const{backend:e,attrs:n}=t,{start:r,stop:a,num:s}=n,i=bh(r,a,s);return e.makeTensorInfo([i.length],"float32",i)}const yh={kernelName:o["LinSpace"],backendName:"cpu",kernelFunc:gh},xh=Jc(t=>Math.log(t)),vh=gu(o["Log"],xh),wh={kernelName:o["Log"],backendName:"cpu",kernelFunc:vh},kh=bu(o["Log1p"],t=>Math.log1p(t)),Oh={kernelName:o["Log1p"],backendName:"cpu",kernelFunc:kh},Ih=Iu((t,e)=>t&&e),Nh=Pu(o["LogicalAnd"],Ih,null,"bool"),Sh={kernelName:o["LogicalAnd"],backendName:"cpu",kernelFunc:Nh},Ch=bu(o["LogicalNot"],t=>t?0:1,"bool"),jh={kernelName:o["LogicalNot"],backendName:"cpu",kernelFunc:Ch},Th=Iu((t,e)=>t||e),Eh=Pu(o["LogicalOr"],Th,null,"bool"),Ah={kernelName:o["LogicalOr"],backendName:"cpu",kernelFunc:Eh};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $h(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{depthRadius:s,bias:i,alpha:u,beta:c}=r;hu(a,"LRN");const l=a.shape[3],d=l-1,h=n.data.get(a.dataId).values,p=o["util"].sizeFromShape(a.shape),f=new Float32Array(p);function m(t){const e=t%l;let n=t-e+Math.max(0,e-s);const r=t-e+Math.min(e+s,d);let a=0;for(;n<=r;n++){const t=h[n];a+=t*t}return a}for(let o=0;o<p;o++){const t=m(o),e=h[o]*Math.pow(i+u*t,-c);f[o]=e}return n.makeTensorInfo(a.shape,a.dtype,f)}const Rh={kernelName:o["LRN"],backendName:"cpu",kernelFunc:$h};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dh(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,y:s,dy:i}=e,{depthRadius:u,bias:c,alpha:l,beta:d}=r;hu(i,"LRNGrad");const h=o["util"].sizeFromShape(i.shape),p=i.shape[3],f=n.data.get(i.dataId).values,m=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,g=new Float32Array(h),y=h;for(let o=0;o<y;o++){const t=o%p,e=o-t+Math.max(0,t-u),n=o-t+Math.min(p,t+u+1);let r=0;for(let a=e;a<n;a++)r+=Math.pow(m[a],2);r=l*r+c;for(let a=e;a<n;a++){let t=-2*l*d*m[a]*b[o]/r;o===a&&(t+=Math.pow(r,-d)),t*=f[o],g[a]+=t}}return n.makeTensorInfo(i.shape,a.dtype,g)}const Fh={kernelName:o["LRNGrad"],backendName:"cpu",kernelFunc:Dh};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _h(t,e,n,r){const a=o["util"].getTypedArrayFromDType(r,o["util"].sizeFromShape(n));for(let s=0;s<a.length;++s){const n=s*e;let r=t[n];for(let a=0;a<e;++a){const e=t[n+a];e>r&&(r=e)}a[s]=r}return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mh(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{reductionIndices:s,keepDims:i}=r,u=n;let c=a.shape;const l=c.length,d=o["util"].parseAxisParam(s,c);let h=d;const p=o["backend_util"].getAxesPermutation(h,l);let f=u.data.get(a.dataId).values;if(null!=p){const t=new Array(l);for(let e=0;e<t.length;e++)t[e]=c[p[e]];f=oc(f,c,a.dtype,p,t),h=o["backend_util"].getInnerMostAxes(h.length,l),c=t}hu(a,"max"),o["backend_util"].assertAxesAreInnerMostDims("max",h,l);const[m,b]=o["backend_util"].computeOutAndReduceShapes(c,h),g=o["util"].sizeFromShape(b),y=_h(f,g,m,a.dtype),x=u.write(y,m,a.dtype);let v=m;if(i){const t=o["backend_util"].expandShapeToKeepDim(m,d);v=t}return{dataId:x,shape:v,dtype:a.dtype}}const zh={kernelName:o["Max"],backendName:"cpu",kernelFunc:Mh},Lh=Iu((t,e)=>Math.max(t,e)),Ph=Pu(o["Maximum"],Lh),Bh={kernelName:o["Maximum"],backendName:"cpu",kernelFunc:Ph};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Wh(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e;hu(a,"maxPool");const{filterSize:s,strides:i,pad:u,dimRoundingMode:c}=r,l=1;o["util"].assert(o["backend_util"].eitherStridesOrDilationsAreOne(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);const d=o["backend_util"].computePool2DInfo(a.shape,s,i,l,u,c);let h;if(1===d.filterWidth&&1===d.filterHeight&&o["util"].arraysEqual(d.inShape,d.outShape))h=vu({inputs:{x:a},backend:n});else{const t=n.data.get(a.dataId).values,e=o["util"].computeStrides(a.shape),r=Tc(t,a.shape,a.dtype,e,d,"max");h=n.makeTensorInfo(d.outShape,a.dtype,r.values)}return h}const Vh={kernelName:o["MaxPool"],backendName:"cpu",kernelFunc:Wh};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uh(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{filterSize:s,strides:i,pad:u,dimRoundingMode:c,dataFormat:l,dilations:d}=r;hu(a,"maxPool3d");let h=d;null==h&&(h=[1,1,1]);const p=o["backend_util"].computePool3DInfo(a.shape,s,i,h,u,c,l),f=n.data.get(a.dataId).values,m=Ac(f,a.shape,a.dtype,o["util"].computeStrides(a.shape),p,"max");return n.makeTensorInfo(m.shape,"float32",m.values)}const Gh={kernelName:o["MaxPool3D"],backendName:"cpu",kernelFunc:Uh};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hh(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,input:s}=e,{filterSize:i,strides:u,pad:c,dilations:l,dimRoundingMode:d}=r;hu([a,s],"maxPool3DGrad");const h=o["backend_util"].computePool3DInfo(s.shape,i,u,l,c,d),p=n.bufferSync(s),f=$c(p,h),m=h.strideDepth,b=h.strideHeight,g=h.strideWidth,y=h.dilationDepth,x=h.dilationHeight,v=h.dilationWidth,w=h.effectiveFilterDepth,k=h.effectiveFilterHeight,O=h.effectiveFilterWidth,I=w-1-h.padInfo.front,N=O-1-h.padInfo.left,S=k-1-h.padInfo.top,C=Object(o["buffer"])(s.shape,"float32"),j=n.bufferSync(a);for(let o=0;o<h.batchSize;++o)for(let t=0;t<h.inChannels;++t)for(let e=0;e<h.inDepth;++e)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){const a=e-I,s=n-S,i=r-N;let u=0;for(let e=0;e<w;e+=y){const n=(a+e)/m;if(!(n<0||n>=h.outDepth||Math.floor(n)!==n))for(let r=0;r<k;r+=x){const a=(s+r)/b;if(!(a<0||a>=h.outHeight||Math.floor(a)!==a))for(let s=0;s<O;s+=v){const c=(i+s)/g;if(c<0||c>=h.outWidth||Math.floor(c)!==c)continue;const l=w*k*O-1-f.get(o,n,a,c,t),d=e*k*O+r*O+s,p=l===d?1:0;if(0===p)continue;const m=j.get(o,n,a,c,t);u+=m*p}}}C.set(u,o,e,n,r,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}const qh={kernelName:o["MaxPool3DGrad"],backendName:"cpu",kernelFunc:Hh};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kh(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,input:s,output:i}=e,u=s;hu([s,i],"maxPoolGrad");const{filterSize:c,strides:l,pad:d,dimRoundingMode:h}=r,p=o["backend_util"].computePool2DInfo(u.shape,c,l,1,d,h),f=n.data.get(u.dataId).values,m=Object(o["buffer"])(p.outShape,u.dtype,Ec(f,u.shape,u.dtype,p).values),b=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,x=p.dilationWidth,v=p.effectiveFilterHeight,w=p.effectiveFilterWidth,k=w-1-p.padInfo.left,O=v-1-p.padInfo.top,I=Object(o["buffer"])(u.shape,"float32"),N=n.data.get(a.dataId).values,S=Object(o["buffer"])(a.shape,"float32",N);for(let o=0;o<p.batchSize;++o)for(let t=0;t<p.inChannels;++t)for(let e=0;e<p.inHeight;++e)for(let n=0;n<p.inWidth;++n){const r=e-O,a=n-k;let s=0;for(let e=0;e<v;e+=y){const n=(r+e)/b;if(!(n<0||n>=p.outHeight||Math.floor(n)!==n))for(let r=0;r<w;r+=x){const i=(a+r)/g;if(i<0||i>=p.outWidth||Math.floor(i)!==i)continue;const u=v*w-1-m.get(o,n,i,t),c=e*w+r,l=u===c?1:0;if(0===l)continue;const d=S.get(o,n,i,t);s+=d*l}}I.set(s,o,e,n,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const Xh={kernelName:o["MaxPoolGrad"],backendName:"cpu",kernelFunc:Kh};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yh(t,e,n,r,a){const s=o["util"].computeStrides(e),i=Tc(t,e,n,s,a,"max"),u=Ec(t,e,n,a,!0,r);return[i.values,u.values]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zh={kernelName:o["MaxPoolWithArgmax"],backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:a,strides:s,pad:i,includeBatchInIndex:u}=e,c=n;hu(r,"MaxPoolWithArgmax");const l=c.data.get(r.dataId).values,d=o["backend_util"].computePool2DInfo(r.shape,a,s,[1,1],i),[h,p]=Yh(l,r.shape,r.dtype,u,d),f=c.write(h,d.outShape,r.dtype),m=c.write(p,d.outShape,r.dtype);return[{dataId:f,shape:d.outShape,dtype:r.dtype},{dataId:m,shape:d.outShape,dtype:"int32"}]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jh(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s,keepDims:i}=r;let u;hu(a,"sum"),u="bool"===a.dtype?zu({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):vu({inputs:{x:a},backend:n});const c=u.shape.length,l=o["util"].parseAxisParam(s,u.shape),d=o["backend_util"].getAxesPermutation(l,c);let h=l,p=u;null!=d&&(p=uc({inputs:{x:u},backend:n,attrs:{perm:d}}),h=o["backend_util"].getInnerMostAxes(h.length,c)),o["backend_util"].assertAxesAreInnerMostDims("sum",h,p.shape.length);const[f,m]=o["backend_util"].computeOutAndReduceShapes(p.shape,h),b=o["backend_util"].upcastType(p.dtype,"int32");let g=Fu(n,f,b);const y=o["util"].sizeFromShape(m),x=n.data.get(g.dataId).values,v=n.data.get(p.dataId).values;for(let o=0;o<x.length;++o){const t=o*y;let e=0;for(let n=0;n<y;++n)e+=v[t+n];x[o]=e}if(i){const t=o["backend_util"].expandShapeToKeepDim(g.shape,l),e=g;g=Hu({inputs:{x:g},backend:n,attrs:{shape:t}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(u),null!=d&&n.disposeIntermediateTensorInfo(p),g}const Qh={kernelName:o["Sum"],backendName:"cpu",kernelFunc:Jh};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tp(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s,keepDims:i}=r,u=o["util"].parseAxisParam(s,a.shape),c=o["backend_util"].computeOutAndReduceShapes(a.shape,u),l=c[1],d=o["util"].sizeFromShape(l),h=[],p=n.makeTensorInfo([],"float32",new Float32Array([d]));h.push(p);const f=zu({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});h.push(f);const m=yd({inputs:{a:f,b:p},backend:n});h.push(m);const b=Jh({inputs:{x:m},backend:n,attrs:{axis:s,keepDims:i}});return h.forEach(t=>n.disposeIntermediateTensorInfo(t)),b}const ep={kernelName:o["Mean"],backendName:"cpu",kernelFunc:tp};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function np(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s,keepDims:i}=r;hu(a,"min");const u=o["util"].parseAxisParam(s,a.shape);let c=u;const l=o["backend_util"].getAxesPermutation(c,a.shape.length);let d=a;null!=l&&(d=uc({inputs:{x:a},backend:n,attrs:{perm:l}}),c=o["backend_util"].getInnerMostAxes(c.length,a.shape.length)),o["backend_util"].assertAxesAreInnerMostDims("min",c,d.shape.length);const[h,p]=o["backend_util"].computeOutAndReduceShapes(d.shape,c),f=o["util"].sizeFromShape(p),m=o["util"].makeZerosTypedArray(o["util"].sizeFromShape(h),d.dtype),b=n.data.get(d.dataId).values;for(let o=0;o<m.length;++o){const t=o*f;let e=b[t];for(let n=0;n<f;++n){const r=b[t+n];r<e&&(e=r)}m[o]=e}null!=l&&n.disposeIntermediateTensorInfo(d);const g=n.makeTensorInfo(h,d.dtype,m);if(i){const t=o["backend_util"].expandShapeToKeepDim(h,u),e=Hu({inputs:{x:g},backend:n,attrs:{shape:t}});return n.disposeIntermediateTensorInfo(g),e}return g}const rp={kernelName:o["Min"],backendName:"cpu",kernelFunc:np},ap=Iu((t,e)=>Math.min(t,e)),sp=Pu(o["Minimum"],ap),ip={kernelName:o["Minimum"],backendName:"cpu",kernelFunc:sp};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function op(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{paddings:s,mode:i}=r;hu(a,"mirrorPad");const u=s.map((t,e)=>t[0]+a.shape[e]+t[1]),c=s.map(t=>t[0]),l=s.map((t,e)=>t[0]+a.shape[e]),d="reflect"===i?0:1,h=n.data.get(a.dataId).values,p=a.shape.length,f=o["util"].computeStrides(a.shape),m=o["util"].sizeFromShape(u),b=u.length,g=o["util"].computeStrides(u),y=o["util"].getTypedArrayFromDType(a.dtype,m);for(let v=0;v<m;v++){let t=o["util"].indexToLoc(v,b,g);for(let n=0;n<b;n++)t[n]<c[n]?t[n]=2*c[n]-t[n]-d:t[n]>=l[n]&&(t[n]=2*(l[n]-1)-t[n]+d);t=t.map((t,e)=>t-c[e]);const e=o["util"].locToIndex(t,p,f);y[v]=h[e]}const x=n.write(y,u,a.dtype);return{dataId:x,shape:u,dtype:a.dtype}}const up={kernelName:o["MirrorPad"],backendName:"cpu",kernelFunc:op},cp=Iu((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e}),lp=Pu(o["Mod"],cp),dp={kernelName:o["Mod"],backendName:"cpu",kernelFunc:lp};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hp(t){const{inputs:e,backend:n,attrs:r}=t,{logits:a}=e,{dim:s}=r,i=a.shape.length;let u=s;if(-1===u&&(u=i-1),u!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${u}`);const c=o["util"].parseAxisParam([u],a.shape),l=Mh({inputs:{x:a},backend:n,attrs:{reductionIndices:c,keepDims:!1}}),d=o["backend_util"].expandShapeToKeepDim(l.shape,c),h=Hu({inputs:{x:l},backend:n,attrs:{shape:d}}),p=kd({inputs:{a:a,b:h},backend:n}),f=id({inputs:{x:p},backend:n}),m=Jh({inputs:{x:f},backend:n,attrs:{axis:c,keepDims:!1}}),b=Hu({inputs:{x:m},backend:n,attrs:{shape:d}}),g=yd({inputs:{a:f,b:b},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),g}const pp={kernelName:o["Softmax"],backendName:"cpu",kernelFunc:hp};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fp(t){const{inputs:e,backend:n,attrs:r}=t,{logits:a}=e,{numSamples:s,seed:i,normalized:u}=r;hu(a,"multinomial");const c=u?a:hp({inputs:{logits:a},backend:n,attrs:{dim:-1}}),l=c.shape[0],d=c.shape[1],h=n.data.get(c.dataId).values,p=[l,s],f=o["util"].makeZerosTypedArray(o["util"].sizeFromShape(p),"int32");for(let o=0;o<l;++o){const t=o*d,e=new Float32Array(d-1);e[0]=h[t];for(let a=1;a<e.length;++a)e[a]=e[a-1]+h[t+a];const n=Ro["alea"](i.toString()),r=o*s;for(let a=0;a<s;++a){const t=n();f[r+a]=e.length;for(let n=0;n<e.length;n++)if(t<e[n]){f[r+a]=n;break}}}return u||n.disposeIntermediateTensorInfo(c),n.makeTensorInfo(p,"int32",f)}const mp={kernelName:o["Multinomial"],backendName:"cpu",kernelFunc:fp};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bp(t,e,n){const r=o["util"].createScalarValue(-1,n);return pd([],e,r,t,n)}function gp(t){const{inputs:e,backend:n}=t,{x:r}=e;hu(r,"neg");const a=n.data.get(r.dataId).values,[s,i]=bp(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}const yp={kernelName:o["Neg"],backendName:"cpu",kernelFunc:gp},xp=o["kernel_impls"].nonMaxSuppressionV3Impl;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vp(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:a,scores:s}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;hu(a,"NonMaxSuppression");const c=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,{selectedIndices:d}=xp(c,l,i,o,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}const wp={kernelName:o["NonMaxSuppressionV3"],backendName:"cpu",kernelFunc:vp},kp=o["kernel_impls"].nonMaxSuppressionV4Impl;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Op(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:a,scores:s}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:c}=r;hu(a,"NonMaxSuppressionPadded");const l=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:h,validOutputs:p}=kp(l,d,i,o,u,c);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}const Ip={kernelName:o["NonMaxSuppressionV4"],backendName:"cpu",kernelFunc:Op},Np=o["kernel_impls"].nonMaxSuppressionV5Impl;
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sp(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:a,scores:s}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:c}=r;hu(a,"NonMaxSuppressionWithScore");const l=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,h=i,p=o,f=u,m=c,{selectedIndices:b,selectedScores:g}=Np(l,d,h,p,f,m);return[n.makeTensorInfo([b.length],"int32",new Int32Array(b)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}const Cp={kernelName:o["NonMaxSuppressionV5"],backendName:"cpu",kernelFunc:Sp},jp=Iu((t,e)=>t!==e?1:0),Tp=Pu(o["NotEqual"],jp,null,"bool"),Ep={kernelName:o["NotEqual"],backendName:"cpu",kernelFunc:Tp};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ap(t){const{inputs:e,backend:n,attrs:r}=t,{indices:a}=e,{depth:s,onValue:i,offValue:u}=r;hu(a,"oneHot");const c=o["util"].sizeFromShape(a.shape),l=new Float32Array(c*s);l.fill(u);const d=n.data.get(a.dataId).values;for(let o=0;o<c;++o)d[o]>=0&&d[o]<s&&(l[o*s+d[o]]=i);return n.makeTensorInfo([...a.shape,s],"int32",l)}const $p={kernelName:o["OneHot"],backendName:"cpu",kernelFunc:Ap};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rp(t){const{inputs:e,backend:n}=t,{x:r}=e;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const t=_u({inputs:{input:r},backend:n}),e=Rp({inputs:{x:t},backend:n}),a=ol({inputs:{input:r},backend:n}),s=Rp({inputs:{x:a},backend:n}),i=Ru({inputs:{real:e,imag:s},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return Ad({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const Dp={kernelName:o["ZerosLike"],backendName:"cpu",kernelFunc:Rp};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fp(t){const{inputs:e,backend:n}=t,{x:r}=e;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=_u({inputs:{input:r},backend:n}),e=Fp({inputs:{x:t},backend:n}),a=ol({inputs:{input:r},backend:n}),s=Rp({inputs:{x:a},backend:n}),i=Ru({inputs:{real:e,imag:s},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return Ad({backend:n,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}const _p={kernelName:o["OnesLike"],backendName:"cpu",kernelFunc:Fp};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mp(t){const{inputs:e,backend:n,attrs:r}=t,{axis:a}=r;if(1===e.length)return ud({inputs:{input:e[0]},backend:n,attrs:{dim:a}});const s=e[0].shape,i=e[0].dtype;e.forEach(t=>{o["util"].assertShapesMatch(s,t.shape,"All tensors passed to stack must have matching shapes"),o["util"].assert(i===t.dtype,()=>"All tensors passed to stack must have matching dtypes")});const u=[],c=e.map(t=>{const e=ud({inputs:{input:t},backend:n,attrs:{dim:a}});return u.push(e),e}),l=cl({inputs:c,backend:n,attrs:{axis:a}});return u.forEach(t=>n.disposeIntermediateTensorInfo(t)),l}const zp={kernelName:o["Pack"],backendName:"cpu",kernelFunc:Mp};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lp(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{paddings:s,constantValue:i}=r;hu(a,"pad");const u=s.map((t,e)=>t[0]+a.shape[e]+t[1]),c=s.map(t=>t[0]),l=n.data.get(a.dataId).values,d=o["util"].sizeFromShape(a.shape),h=a.shape.length,p=o["util"].computeStrides(a.shape),f=o["util"].sizeFromShape(u),m=u.length,b=o["util"].computeStrides(u),g=o["util"].getTypedArrayFromDType(a.dtype,f);0!==i&&g.fill(i);for(let x=0;x<d;x++){const t=o["util"].indexToLoc(x,h,p),e=t.map((t,e)=>t+c[e]),n=o["util"].locToIndex(e,m,b);g[n]=l[x]}const y=n.write(g,u,a.dtype);return{dataId:y,shape:u,dtype:a.dtype}}const Pp={kernelName:o["PadV2"],backendName:"cpu",kernelFunc:Lp},Bp=Iu((t,e)=>Math.pow(t,e)),Wp=Pu(o["Pow"],Bp),Vp={kernelName:o["Pow"],backendName:"cpu",kernelFunc:Wp};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Up(t,e,n,r){const[a,s]=o["backend_util"].computeOutAndReduceShapes(t,r),i=Object(o["upcastType"])(e,"int32"),u=o["util"].makeZerosTypedArray(o["util"].sizeFromShape(a),i),c=o["util"].sizeFromShape(s);for(let o=0;o<u.length;++o){const t=o*c;let e=1;for(let r=0;r<c;++r)e*=n[t+r];u[o]=e}return{outVals:u,outShape:a,outDtype:i}}function Gp(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s,keepDims:i}=r;hu(a,"prod");const u=a.shape.length,c=o["util"].parseAxisParam(s,a.shape),l=o["backend_util"].getAxesPermutation(c,u);let d=c,h=a;const p=[];null!=l&&(h=uc({inputs:{x:a},backend:n,attrs:{perm:l}}),p.push(h),d=o["backend_util"].getInnerMostAxes(d.length,u));const f=n.data.get(h.dataId).values,{outVals:m,outShape:b,outDtype:g}=Up(h.shape,h.dtype,f,d);let y=b;return i&&(y=o["backend_util"].expandShapeToKeepDim(b,c)),p.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(y,g,m)}const Hp={kernelName:o["Prod"],backendName:"cpu",kernelFunc:Gp};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qp(t,e,n,r){const a=t===e,s=t<e&&n<0,i=e<t&&n>1;if(a||s||i)return o["util"].makeZerosTypedArray(0,r);const u=Math.abs(Math.ceil((e-t)/n)),c=o["util"].makeZerosTypedArray(u,r);e<t&&1===n&&(n=-1),c[0]=t;for(let o=1;o<c.length;o++)c[o]=c[o-1]+n;return c}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kp(t){const{backend:e,attrs:n}=t,{start:r,stop:a,dtype:s,step:i}=n,o=qp(r,a,i,s);return e.makeTensorInfo([o.length],s,o)}const Xp={kernelName:o["Range"],backendName:"cpu",kernelFunc:Kp},Yp=bu(o["Reciprocal"],t=>1/t),Zp={kernelName:o["Reciprocal"],backendName:"cpu",kernelFunc:Yp};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Jp(t){const{inputs:e,backend:n,attrs:r}=t,{images:a}=e,{alignCorners:s,halfPixelCenters:i,size:u}=r;hu(a,"resizeBilinear");const c=o["util"].computeStrides(a.shape),[l,d]=u,[h,p,f,m]=a.shape,b=n.data.get(a.dataId).values,g=new Float32Array(o["util"].sizeFromShape([h,l,d,m])),y=[s&&l>1?p-1:p,s&&d>1?f-1:f],x=[s&&l>1?l-1:l,s&&d>1?d-1:d];let v=0;const w=y[0]/x[0],k=y[1]/x[1];for(let o=0;o<h;o++)for(let t=0;t<l;t++){let e;e=i?w*(t+.5)-.5:w*t;const n=Math.max(0,Math.floor(e)),r=e-n,a=Math.min(p-1,Math.ceil(e)),s=o*c[0]+n*c[1],u=o*c[0]+a*c[1];for(let t=0;t<d;t++){let e;e=i?k*(t+.5)-.5:k*t;const n=Math.max(0,Math.floor(e)),a=e-n,o=Math.min(f-1,Math.ceil(e)),l=s+n*c[2],d=u+n*c[2],h=s+o*c[2],p=u+o*c[2];for(let t=0;t<m;t++){const e=b[l+t],n=b[d+t],s=b[h+t],i=b[p+t],o=e+(s-e)*a,u=n+(i-n)*a,c=o+(u-o)*r;g[v++]=c}}}return n.makeTensorInfo([h,l,d,m],"float32",g)}const Qp={kernelName:o["ResizeBilinear"],backendName:"cpu",kernelFunc:Jp};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tf(t){const{inputs:e,backend:n,attrs:r}=t,{images:a,dy:s}=e,{alignCorners:i}=r;hu([s,a],"resizeBilinearGrad");const u=o["util"].computeStrides(a.shape),[c,l,d,h]=a.shape,[,p,f]=s.shape,m=new Float32Array(c*l*d*h),b=[i&&p>1?l-1:l,i&&f>1?d-1:d],g=[i&&p>1?p-1:p,i&&f>1?f-1:f],y=b[0]/g[0],x=b[1]/g[1],v=n.data.get(s.dataId).values;let w=0;for(let o=0;o<c;o++){const t=o*u[0];for(let e=0;e<p;e++){const n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),l-1),s=t+r*u[1],i=t+a*u[1],o=n-r,c=1-o;for(let t=0;t<f;t++){const e=t*x,n=Math.floor(e),r=Math.min(Math.ceil(e),d-1),a=e-n,l=1-a,p=s+n*u[2],f=s+r*u[2],b=i+n*u[2],g=i+r*u[2],y=c*l,k=c*a,O=o*l,I=o*a;for(let t=0;t<h;t++){const e=v[w++];m[p+t]+=e*y,m[f+t]+=e*k,m[b+t]+=e*O,m[g+t]+=e*I}}}}return n.makeTensorInfo([c,d,l,h],"float32",m)}const ef={kernelName:o["ResizeBilinearGrad"],backendName:"cpu",kernelFunc:tf};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nf(t){const{inputs:e,backend:n,attrs:r}=t,{images:a}=e,{alignCorners:s,halfPixelCenters:i,size:u}=r;hu(a,"resizeNearestNeighbor");const c=o["util"].computeStrides(a.shape),[l,d]=u,[h,p,f,m]=a.shape,b=n.data.get(a.dataId).values,g=new Float32Array(h*l*d*m),y=[s&&l>1?p-1:p,s&&d>1?f-1:f],x=[s&&l>1?l-1:l,s&&d>1?d-1:d],v=y[0]/x[0],w=y[1]/x[1];let k=0;for(let o=0;o<h;o++){const t=o*c[0];for(let e=0;e<l;e++){const n=i?v*(e+.5):v*e;let r=Math.min(p-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const a=t+r*c[1];for(let t=0;t<d;t++){const e=i?w*(t+.5):w*t;let n=Math.min(f-1,s?Math.round(e):Math.floor(e));i&&(n=Math.max(0,n));const r=a+n*c[2];for(let t=0;t<m;t++){const e=b[r+t];g[k++]=e}}}}return n.makeTensorInfo([h,l,d,m],a.dtype,g)}const rf={kernelName:o["ResizeNearestNeighbor"],backendName:"cpu",kernelFunc:nf};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function af(t){const{inputs:e,backend:n,attrs:r}=t,{images:a,dy:s}=e,{alignCorners:i}=r;hu([s,a],"resizeNearestNeighborGrad");const u=o["util"].computeStrides(a.shape),c=o["util"].computeStrides(s.shape),[l,d,h,p]=a.shape,[,f,m]=s.shape,b=new Float32Array(l*d*h*p),g=n.data.get(s.dataId).values,y=[i&&f>1?d-1:d,i&&m>1?h-1:h],x=[i&&f>1?f-1:f,i&&m>1?m-1:m],v=y[0]/x[0],w=y[1]/x[1],k=1/v,O=1/w,I=2*Math.ceil(k)+2,N=2*Math.ceil(O)+2;for(let o=0;o<l;o++){const t=o*u[0];for(let e=0;e<d;e++){const n=t+e*u[1],r=Math.floor(e*k),a=Math.floor(r-I/2);for(let s=0;s<h;s++){const r=n+s*u[2],o=Math.floor(s*O),l=Math.floor(o-N/2);for(let n=0;n<p;n++){let o=0;for(let r=0;r<I;r++){const u=r+a;if(u<0||u>=f)continue;const p=t+u*c[1],b=u*v,y=Math.min(d-1,i?Math.round(b):Math.floor(b));if(e===y)for(let t=0;t<N;t++){const e=t+l;if(e<0||e>=m)continue;const r=p+e*c[2],a=e*w,u=Math.min(h-1,i?Math.round(a):Math.floor(a));s===u&&(o+=g[r+n])}}b[r+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,b)}const sf={kernelName:o["ResizeNearestNeighborGrad"],backendName:"cpu",kernelFunc:af};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function of(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{dims:s}=r;hu(a,"reverse");const i=a.shape.length,u=o["util"].parseAxisParam(s,a.shape);if(0===i)return vu({inputs:{x:a},backend:n});const c=new o["TensorBuffer"](a.shape,a.dtype),l=n.bufferSync(a);for(let o=0;o<c.size;o++){const t=c.indexToLoc(o),e=t.slice();u.forEach(t=>e[t]=a.shape[t]-1-e[t]),c.set(l.get(...e),...t)}return n.makeTensorInfo(c.shape,c.dtype,c.values)}const uf={kernelName:o["Reverse"],backendName:"cpu",kernelFunc:of},cf={kernelName:o["RotateWithOffset"],backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:a,fillValue:s,center:i}=e,u=n,c=o["util"].getTypedArrayFromDType(r.dtype,o["util"].sizeFromShape(r.shape)),[l,d,h,p]=r.shape,[f,m]=o["backend_util"].getImageCenter(i,d,h),b=255,g=Math.sin(a),y=Math.cos(a),x=u.data.get(r.dataId).values;for(let o=0;o<l;o++){const t=o*h*d*p;for(let e=0;e<d;e++){const n=e*(h*p);for(let r=0;r<h;r++){const a=r*p;for(let i=0;i<p;i++){const o=[l,e,r,i],u=o[2],v=o[1];let w=(u-f)*y-(v-m)*g,k=(u-f)*g+(v-m)*y;w=Math.round(w+f),k=Math.round(k+m);let O=s;if("number"!==typeof s&&(O=3===i?b:s[i]),w>=0&&w<h&&k>=0&&k<d){const e=k*(h*p),n=w*p,r=t+e+n+i;O=x[r]}const I=t+n+a+i;c[I]=O}}}}const v=u.write(c,r.shape,r.dtype);return{dataId:v,shape:r.shape,dtype:r.dtype}}},lf=bu(o["Round"],t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2===0?e:e+1}),df={kernelName:o["Round"],backendName:"cpu",kernelFunc:lf},hf=Jc(t=>1/Math.sqrt(t)),pf=gu(o["Rsqrt"],hf),ff={kernelName:o["Rsqrt"],backendName:"cpu",kernelFunc:pf};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mf(t,e,n,r,a,s,i,u,c,l){const d=[r/a,a],h=t.values,p=e.values;if(0===r)return Object(o["buffer"])(n,e.dtype);const f=Object(o["buffer"])(d,e.dtype);f.values.fill(c);for(let o=0;o<s;o++){const t=[];let s=0;for(let e=0;e<i;e++){const n=h[o*i+e];t.push(n),s+=n*u[e]}if(s<0||s>=r/a)throw new Error(`Invalid indices: ${t} does not index into ${n}`);for(let n=0;n<a;n++)l?f.values[s*a+n]+=p[o*a+n]:f.values[s*a+n]=0===e.rank?p[0]:p[o*a+n]}return f}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bf(t){const{inputs:e,backend:n,attrs:r}=t,{indices:a,updates:s}=e,{shape:i}=r,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=o["backend_util"].calculateShapes(s,a,i),p=!0,f=n.bufferSync(a),m=n.bufferSync(s),b=mf(f,m,i,h,l,c,u,d,0,p);return n.makeTensorInfo(i,b.dtype,b.values)}const gf={kernelName:o["ScatterNd"],backendName:"cpu",kernelFunc:bf};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yf(t){const{inputs:e,backend:n}=t,{condition:r,t:a,e:s}=e;hu([r,a,s],"select");const i=r.shape.length,u=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,d=Object(o["upcastType"])(a.dtype,s.dtype),h=o["util"].makeZerosTypedArray(o["util"].sizeFromShape(a.shape),d);let p=0;const f=0===i||i>1||1===a.shape.length?1:o["util"].sizeFromShape(a.shape.slice(1));for(let o=0;o<u.length;o++)for(let t=0;t<f;t++)1===u[o]?h[p++]=c[o]:h[p++]=l[o];return n.makeTensorInfo(a.shape,d,h)}const xf={kernelName:o["Select"],backendName:"cpu",kernelFunc:yf},vf=o["backend_util"].SELU_SCALEALPHA,wf=o["backend_util"].SELU_SCALE,kf=bu(o["Selu"],t=>t>=0?wf*t:vf*(Math.exp(t)-1)),Of={kernelName:o["Selu"],backendName:"cpu",kernelFunc:kf},If=bu(o["Sigmoid"],t=>1/(1+Math.exp(-t))),Nf={kernelName:o["Sigmoid"],backendName:"cpu",kernelFunc:If},Sf=bu(o["Sign"],t=>t<0?-1:t>0?1:0),Cf={kernelName:o["Sign"],backendName:"cpu",kernelFunc:Sf},jf=bu(o["Sin"],t=>Math.sin(t)),Tf={kernelName:o["Sin"],backendName:"cpu",kernelFunc:jf},Ef=bu(o["Sinh"],t=>Math.sinh(t)),Af={kernelName:o["Sinh"],backendName:"cpu",kernelFunc:Ef},$f=1.1920928955078125e-7,Rf=Math.log($f)+2,Df=bu(o["Softplus"],t=>{const e=t>-Rf,n=t<Rf,r=Math.exp(t);let a;return a=n?r:e?t:Math.log(1+r),a}),Ff={kernelName:o["Softplus"],backendName:"cpu",kernelFunc:Df};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _f(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{blockShape:s,paddings:i}=r;hu([a],"spaceToBatchND");const u=o["util"].sizeFromShape(s),c=[[0,0]];c.push(...i);for(let o=1+s.length;o<a.shape.length;++o)c.push([0,0]);const l=Pp.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:c,constantValue:0}}),d=o["backend_util"].getReshaped(l.shape,s,u,!1),h=o["backend_util"].getPermuted(d.length,s.length,!1),p=o["backend_util"].getReshapedPermuted(l.shape,s,u,!1),f={x:l},m={shape:d},b=Hu({inputs:f,backend:n,attrs:m}),g={x:b},y={perm:h},x=uc({inputs:g,backend:n,attrs:y}),v={x:x},w={shape:p},k=Hu({inputs:v,backend:n,attrs:w});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(x),k}const Mf={kernelName:o["SpaceToBatchND"],backendName:"cpu",kernelFunc:_f};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zf(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:a,sparseValues:s,defaultValue:i}=e,{outputShape:u}=r,{sliceRank:c,numUpdates:l,sliceSize:d,strides:h,outputSize:p}=o["backend_util"].calculateShapes(s,a,u),f=!1,m=n.bufferSync(a),b=n.bufferSync(s),g=n.data.get(i.dataId).values[0],y=mf(m,b,u,p,d,l,c,h,g,f);return n.makeTensorInfo(u,y.dtype,y.values)}const Lf={kernelName:o["SparseToDense"],backendName:"cpu",kernelFunc:zf};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pf(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{numOrSizeSplits:s,axis:i}=r,u=o["util"].parseAxisParam(i,a.shape)[0],c=o["backend_util"].prepareSplitSize(a,s,u),l=new Array(a.shape.length).fill(0),d=a.shape.slice();return c.map(t=>{const e=[...d];e[u]=t;const r=Uc({inputs:{x:a},backend:n,attrs:{begin:l,size:e}});return l[u]+=t,r})}const Bf={kernelName:o["SplitV"],backendName:"cpu",kernelFunc:Pf},Wf=bu(o["Sqrt"],t=>Math.sqrt(t)),Vf={kernelName:o["Sqrt"],backendName:"cpu",kernelFunc:Wf},Uf={kernelName:o["Square"],backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e;hu(n,"square");const a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let o=0;o<a.length;++o){const t=a[o];s[o]=t*t}const i=r.write(s,n.shape,n.dtype);return{dataId:i,shape:n.shape,dtype:n.dtype}}},Gf=Iu((t,e)=>{const n=t-e;return n*n}),Hf=Pu(o["SquaredDifference"],Gf),qf={kernelName:o["SquaredDifference"],backendName:"cpu",kernelFunc:Hf},Kf=bu(o["Step"],(t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha}),Xf={kernelName:o["Step"],backendName:"cpu",kernelFunc:Kf};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Yf(t,e,n,r){const a=Object(o["buffer"])(t,e.dtype);for(let s=0;s<a.size;s++){const t=a.indexToLoc(s),i=new Array(t.length);for(let e=0;e<i.length;e++)i[e]=t[e]*n[e]+r[e];a.set(e.get(...i),...t)}return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zf(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{begin:s,end:i,strides:u,beginMask:c,endMask:l,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=r;hu(a,"stridedSlice");const{nonStrided:f,$begin:m,$strides:b,size:g,newShape:y,outShape:x}=o["slice_util"].sliceInfo(a.shape,s,i,u,c,l,d,h,p),v=Hu({inputs:{x:a},backend:n,attrs:{shape:y}});let w;if(f){const t=Uc({inputs:{x:v},backend:n,attrs:{begin:m,size:g}});w=Hu({inputs:{x:t},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(t)}else if(x.some(t=>0===t))w=n.makeTensorInfo(x,a.dtype,[]);else{const t=n.bufferSync(v),e=Yf(x,t,b,m);w=n.makeTensorInfo(e.shape,e.dtype,e.values)}const k=Hu({inputs:{x:w},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),k}const Jf={kernelName:o["StridedSlice"],backendName:"cpu",kernelFunc:Zf},Qf=bu(o["Tan"],t=>Math.tan(t)),tm={kernelName:o["Tan"],backendName:"cpu",kernelFunc:Qf},em=bu(o["Tanh"],t=>Math.tanh(t)),nm={kernelName:o["Tanh"],backendName:"cpu",kernelFunc:em};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rm(t,e){const n=new Array(t.rank);for(let a=0;a<n.length;a++)n[a]=t.shape[a]*e[a];const r=Object(o["buffer"])(n,t.dtype);for(let a=0;a<r.values.length;++a){const e=r.indexToLoc(a),n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=e[r]%t.shape[r];const s=t.locToIndex(n);r.values[a]=t.values[s]}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function am(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{reps:s}=r;hu(a,"tile");const i=rm(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const sm={kernelName:o["Tile"],backendName:"cpu",kernelFunc:am};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function im(t,e,n,r,a){const s=e[e.length-1],[i,u]=[t.length/s,s],c=o["util"].getTypedArrayFromDType(n,i*r),l=o["util"].getTypedArrayFromDType("int32",i*r);for(let o=0;o<i;o++){const e=o*u,n=t.subarray(e,e+u),a=[];for(let t=0;t<n.length;t++)a.push({value:n[t],index:t});a.sort((t,e)=>e.value-t.value);const s=o*r,i=c.subarray(s,s+r),d=l.subarray(s,s+r);for(let t=0;t<r;t++)i[t]=a[t].value,d[t]=a[t].index}const d=e.slice();return d[d.length-1]=r,[Object(o["buffer"])(d,n,c),Object(o["buffer"])(d,"int32",l)]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function om(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{k:s,sorted:i}=r;hu(a,"topk");const o=n.data.get(a.dataId).values,[u,c]=im(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}const um={kernelName:o["TopK"],backendName:"cpu",kernelFunc:om};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cm(t,e,n,r){const a=o["util"].parseAxisParam(e,n)[0],s=[1,n[0],1];for(let o=0;o<a;o++)s[0]*=n[o];s[1]=n[a];for(let o=a+1;o<n.length;o++)s[2]*=n[o];const i={},u=new Int32Array(n[a]),c=new o["TensorBuffer"](s,r,t),l=[],d=1===s[0]&&1===s[2];for(let o=0;o<n[a];o++){let e;if(d)e=t[o].toString();else{const t=[];for(let e=0;e<s[0];e++)for(let n=0;n<s[2];n++)t.push(c.get(e,o,n));e=t.join(",")}if(void 0!==i[e])u[o]=i[e];else{const t=Object.keys(i).length;i[e]=t,u[o]=t,l.push(o)}}const h=s.slice();h[1]=Object.keys(i).length;const p=new o["TensorBuffer"](h,r);l.forEach((t,e)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)p.set(c.get(n,t,r),n,e,r)});const f=n.slice();return f[a]=h[1],{outputValues:p.values,outputShape:f,indices:u}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lm(t){const{inputs:e,attrs:n,backend:r}=t,{axis:a}=n,{x:s}=e;hu(s,"unique");const i=r.data.get(s.dataId).values,{outputValues:o,outputShape:u,indices:c}=cm(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([c.length],"int32",c)]}const dm={kernelName:o["Unique"],backendName:"cpu",kernelFunc:lm};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hm(t){const{inputs:e,backend:n,attrs:r}=t,{value:a}=e;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape.length,o=a.shape[s],u=new Array(i-1);let c=0;for(let p=0;p<i;p++)p!==s&&(u[c++]=a.shape[p]);const l=new Array(i).fill(0),d=a.shape.slice();d[s]=1;const h=new Array(o);for(let p=0;p<h.length;p++){l[s]=p;const t=Uc({inputs:{x:a},backend:n,attrs:{begin:l,size:d}});h[p]=Hu({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return h}const pm={kernelName:o["Unpack"],backendName:"cpu",kernelFunc:hm};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fm(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,segmentIds:s}=e,{numSegments:i}=r;hu(a,"unsortedSegmentSum");const u=a.shape.length,c=s.shape.length,l=[],d=[],h=u-c;let p=s;for(let o=0;o<h;++o){const t=ud({inputs:{input:p},backend:n,attrs:{dim:o+1}});p=t,d.push(t)}for(let m=0;m<i;++m){const t=o["util"].createScalarValue(m,"int32"),e=n.makeTensorInfo([],"int32",t),r=Xl({inputs:{a:e,b:p},backend:n}),s=zu({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),i=md({inputs:{a:s,b:a},backend:n}),u=Jh({inputs:{x:i},backend:n,attrs:{axis:0,keepDims:!1}});l.push(u),d.push(e),d.push(r),d.push(s),d.push(i),d.push(u)}const f=Mp({inputs:l,backend:n,attrs:{axis:0}});return d.forEach(t=>n.disposeIntermediateTensorInfo(t)),f}const mm={kernelName:o["UnsortedSegmentSum"],backendName:"cpu",kernelFunc:fm},bm=[Zu,tc,nc,ac,Gu,ic,dc,pc,mc,gc,xc,wc,Oc,Sc,jc,Dc,_c,zc,Pc,Xu,Wc,qc,Zc,Lu,el,rl,Du,sl,ll,fl,bl,hl,vl,kl,yl,Il,Sl,jl,El,$l,Dl,_l,zl,Pl,Wl,Vl,Gl,Ul,xd,xu,ql,Yl,ad,od,cd,hd,Ed,$d,Dd,Md,Pd,Wd,Ud,Hd,Xd,Jd,eh,wu,rh,ul,sh,oh,ch,Ou,hh,mh,yh,wh,Oh,Sh,jh,Ah,Rh,Fh,Bh,Vh,Gh,qh,Xh,Zh,zh,ep,rp,ip,up,dp,mp,bd,yp,wp,Ip,Cp,Ep,$p,_p,zp,Pp,Vp,Cu,Hp,Xp,Mu,Zp,Tu,Au,qu,Qp,ef,rf,sf,uf,cf,df,ff,gf,xf,Of,Nf,Cf,Tf,Af,Gc,pp,Ff,Mf,Lf,Bf,Vf,Uf,qf,Xf,Jf,Od,Qh,tm,nm,sm,um,cc,dm,pm,mm,Dp];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const Aj of bm)Object(o["registerKernel"])(Aj);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gm={},ym={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function xm(t,e){gm[t]=e}function vm(t){if(!(t in gm)){const e=km(t);if(null===e)return console.log("Could not get context for WebGL version",t),null;gm[t]=e}const e=gm[t];return e.isContextLost()?(delete gm[t],vm(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),gm[t])}function wm(t){if("undefined"!==typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function km(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=wm(t);return e.addEventListener("webglcontextlost",e=>{e.preventDefault(),delete gm[t]},!1),1===t?e.getContext("webgl",ym)||e.getContext("experimental-webgl",ym):e.getContext("webgl2",ym)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Om,Im,Nm;function Sm(t,e){return[e,t]}function Cm(t,e){return t*e}function jm(t){const e=o["util"].sizeFromShape(t),n=Math.ceil(e/4);return o["util"].sizeToSquarishShape(n)}function Tm(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function Em(t,e){const[n,r]=Tm(t,e);return n*r*4}function Am(t,e){const n=t;let r,a,s,i,u,c,l,d,h,p;return 2===Object(o["env"])().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,s=n.RGBA16F,i=n.RGBA32F,u=n.RED,l=4,d=1,h=n.HALF_FLOAT,p=n.FLOAT):(r=t.RGBA,a=t.RGBA,s=t.RGBA,i=n.RGBA,u=t.RGBA,l=4,d=4,h=null!=e?e.HALF_FLOAT_OES:null,p=t.FLOAT),c=t.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:u,downloadTextureFormat:c,downloadUnpackNumChannels:l,defaultNumChannels:d,textureTypeHalfFloat:h,textureTypeFloat:p}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $m(t,e){const n=e();return Object(o["env"])().getBool("DEBUG")&&Rm(t),n}function Rm(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+Mm(t,e))}(function(t){t[t["DENSE"]=0]="DENSE",t[t["SHARED_BATCH"]=1]="SHARED_BATCH"})(Om||(Om={})),function(t){t[t["RENDER"]=0]="RENDER",t[t["UPLOAD"]=1]="UPLOAD",t[t["PIXELS"]=2]="PIXELS",t[t["DOWNLOAD"]=3]="DOWNLOAD"}(Im||(Im={})),function(t){t[t["UNPACKED_FLOAT16"]=0]="UNPACKED_FLOAT16",t[t["UNPACKED_FLOAT32"]=1]="UNPACKED_FLOAT32",t[t["PACKED_4X1_UNSIGNED_BYTE"]=2]="PACKED_4X1_UNSIGNED_BYTE",t[t["PACKED_2X2_FLOAT32"]=3]="PACKED_2X2_FLOAT32",t[t["PACKED_2X2_FLOAT16"]=4]="PACKED_2X2_FLOAT16"}(Nm||(Nm={}));const Dm=5.96e-8,Fm=65504;function _m(t){return!!(Object(o["env"])().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||Dm<Math.abs(t)&&Math.abs(t)<Fm)}function Mm(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+e}}function zm(t,e){return ib(t,()=>t.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function Lm(t,e){const n=ib(t,()=>t.createShader(t.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if($m(t,()=>t.shaderSource(n,e)),$m(t,()=>t.compileShader(n)),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function Pm(t,e){const n=ib(t,()=>t.createShader(t.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if($m(t,()=>t.shaderSource(n,e)),$m(t,()=>t.compileShader(n)),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw Wm(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const Bm=/ERROR: [0-9]+:([0-9]+):/g;function Wm(t,e){const n=Bm.exec(e);if(null==n)return console.log("Couldn't parse line number in error: "+e),void console.log(t);const r=+n[1],a=t.split("\n"),s=a.length.toString().length+2,i=a.map((t,e)=>o["util"].rightPad((e+1).toString(),s)+t);let u=0;for(let o=0;o<i.length;o++)u=Math.max(i[o].length,u);const c=i.slice(0,r-1),l=i.slice(r-1,r),d=i.slice(r);console.log(c.join("\n")),console.log(e.split("\n")[0]),console.log("%c "+o["util"].rightPad(l[0],u),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}function Vm(t){return ib(t,()=>t.createProgram(),"Unable to create WebGLProgram.")}function Um(t,e){if($m(t,()=>t.linkProgram(e)),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function Gm(t,e){if($m(t,()=>t.validateProgram(e)),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function Hm(t,e){const n=ib(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return $m(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),$m(t,()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW)),n}function qm(t,e){const n=ib(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return $m(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n)),$m(t,()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW)),n}function Km(t){return ib(t,()=>t.createTexture(),"Unable to create WebGLTexture.")}function Xm(t,e){const n=Object(o["env"])().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0){const n=`[${t}x${e}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(t>n||e>n){const r=`[${t}x${e}]`,a=`[${n}x${n}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+a+".")}}function Ym(t){return ib(t,()=>t.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Zm(t,e,n,r,a,s,i){const o=t.getAttribLocation(e,n);return-1!==o&&($m(t,()=>t.bindBuffer(t.ARRAY_BUFFER,r)),$m(t,()=>t.vertexAttribPointer(o,a,t.FLOAT,!1,s,i)),$m(t,()=>t.enableVertexAttribArray(o)),!0)}function Jm(t,e,n){ob(t,n),$m(t,()=>t.activeTexture(t.TEXTURE0+n)),$m(t,()=>t.bindTexture(t.TEXTURE_2D,e))}function Qm(t,e,n){return ib(t,()=>t.getUniformLocation(e,n),'uniform "'+n+'" not present in program.')}function tb(t,e,n){return t.getUniformLocation(e,n)}function eb(t,e,n,r){$m(t,()=>Jm(t,e,r)),$m(t,()=>t.uniform1i(n,r))}function nb(t,e,n){$m(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,n)),$m(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0))}function rb(t,e){$m(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,e)),$m(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0))}function ab(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+sb(t,e))}function sb(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+e}}function ib(t,e,n){const r=$m(t,()=>e());if(null==r)throw new Error(n);return r}function ob(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n){const t=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${t}.`)}}function ub(t,e=2){return o["util"].sizeFromShape(t.slice(0,t.length-e))}function cb(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function lb(t){let e=[1,1,1];const n=0===t.length||1===t.length&&1===t[0];return n||(e=[ub(t),...cb(t)]),e}function db(t,e=!1){let n=Object(o["env"])().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,t=t.map((e,n)=>n>=t.length-2?o["util"].nearestLargerEven(t[n]):t[n]),1===t.length&&(t=[2,t[0]])),2!==t.length){const e=o["util"].squeezeShape(t);t=e.newShape}let r=o["util"].sizeFromShape(t);if(t.length<=1&&r<=n)return[1,r];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=ub(t);let n=2,a=2;return t.length&&([n,a]=cb(t)),r=e*(n/2)*(a/2),o["util"].sizeToSquarishShape(r).map(t=>2*t)}return o["util"].sizeToSquarishShape(r)}function hb(t){return t%2===0}function pb(t,e){if(t=t.slice(-2),e=e.slice(-2),o["util"].arraysEqual(t,e))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(hb(n)&&hb(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&hb(t[0])&&hb(e[0])}let fb,mb;function bb(t){if(null==fb){const e=vm(t);fb=e.getParameter(e.MAX_TEXTURE_SIZE)}return fb}function gb(t){if(null==mb){const e=vm(t);mb=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,mb)}function yb(t){if(0===t)return 0;let e;const n=vm(t);return e=xb(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:xb(n,"EXT_disjoint_timer_query")?1:0,e}function xb(t,e){const n=t.getExtension(e);return null!=n}function vb(t){try{const e=vm(t);if(null!=e)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function wb(t){if(0===t)return!1;const e=vm(t);if(1===t){if(!xb(e,"OES_texture_float"))return!1}else if(!xb(e,"EXT_color_buffer_float"))return!1;const n=Ob(e);return n}function kb(t){if(0===t)return!1;const e=vm(t);if(1!==t){if(xb(e,"EXT_color_buffer_float"))return Ob(e);const t="EXT_color_buffer_half_float";if(xb(e,t)){const n=e.getExtension(t);return Ib(e,n)}return!1}if(!xb(e,"OES_texture_float"))return!1;if(!xb(e,"WEBGL_color_buffer_float"))return!1;const n=Ob(e);return n}function Ob(t){const e=Am(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n);const r=1,a=1;t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,r,a,0,e.textureFormatFloat,e.textureTypeFloat,null);const s=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,s),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(s),i}function Ib(t,e){const n=Am(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r);const a=1,s=1;t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,a,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,i),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const o=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(i),o}function Nb(t){if(2!==t)return!1;const e=vm(t),n=null!=e.fenceSync;return n}function Sb(t,e){Array.isArray(t)||(t=[t]),t.forEach(t=>{null!=t&&o["util"].assert("complex64"!==t.dtype,()=>e+" does not support complex64 tensors in the WebGL backend.")})}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cb=Object(o["env"])();
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jb(){let t,e,n,r,a,s,i,u,c,l;return 2===Object(o["env"])().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",u="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",c="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",u="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",c="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:u,defineSpecialInf:c,defineRound:l}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tb(t,e,n="index"){const r=o["util"].computeStrides(e);return r.map((e,a)=>{const s=`int ${t[a]} = ${n} / ${e}`,i=a===r.length-1?`int ${t[a+1]} = ${n} - ${t[a]} * ${e}`:`index -= ${t[a]} * ${e}`;return`${s}; ${i};`}).join("")}function Eb(t){const e=o["util"].computeStrides(t).map(t=>t.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}Cb.registerFlag("HAS_WEBGL",()=>Cb.getNumber("WEBGL_VERSION")>0),Cb.registerFlag("WEBGL_VERSION",()=>vb(2)?2:vb(1)?1:0),Cb.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),Cb.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===Cb.get("WEBGL_VERSION")),Cb.registerFlag("WEBGL_CPU_FORWARD",()=>!0),Cb.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),Cb.registerFlag("WEBGL_PACK",()=>Cb.getBool("HAS_WEBGL")),Cb.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Cb.getBool("WEBGL_PACK")),Cb.registerFlag("WEBGL_PACK_CLIP",()=>Cb.getBool("WEBGL_PACK")),Cb.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1),Cb.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Cb.getBool("WEBGL_PACK")),Cb.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Cb.getBool("WEBGL_PACK")),Cb.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Cb.getBool("WEBGL_PACK")),Cb.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Cb.getBool("WEBGL_PACK")),Cb.registerFlag("WEBGL_PACK_REDUCE",()=>Cb.getBool("WEBGL_PACK")),Cb.registerFlag("WEBGL_LAZILY_UNPACK",()=>Cb.getBool("WEBGL_PACK")),Cb.registerFlag("WEBGL_CONV_IM2COL",()=>Cb.getBool("WEBGL_PACK")),Cb.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>bb(Cb.getNumber("WEBGL_VERSION"))),Cb.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>gb(Cb.getNumber("WEBGL_VERSION"))),Cb.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const t=Cb.getNumber("WEBGL_VERSION");return 0===t?0:yb(t)}),Cb.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Cb.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!o["device_util"].isMobile()),Cb.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>wb(Cb.getNumber("WEBGL_VERSION"))),Cb.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!Cb.getBool("WEBGL_FORCE_F16_TEXTURES")&&Cb.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),Cb.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>kb(Cb.getNumber("WEBGL_VERSION"))),Cb.registerFlag("WEBGL_FENCE_API_ENABLED",()=>Nb(Cb.getNumber("WEBGL_VERSION"))),Cb.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>{const t=Cb.getBool("WEBGL_RENDER_FLOAT32_ENABLED");return t?4:0}),Cb.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)});const Ab="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $b{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Om.DENSE;const e=jm(t),n=jb();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${Tb(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rb{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Om.DENSE;const e=jm(t),n=jb();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${Tb(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Db{constructor(t){this.variableNames=["A"],this.outTexUsage=Im.DOWNLOAD;const e=jb();this.outputShape=t,this.userCode=`\n      ${Ab}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fb{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Im.DOWNLOAD;const e=jb();this.outputShape=t,this.userCode=`\n      ${Ab}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _b{constructor(t,e,n=!1){this.variableNames=["A"];const r=jb(),[a,s]=e;this.outputShape=t;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${Eb(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${s};\n        int c = imod(flatIndex, ${s});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mb{constructor(t,e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=jb(),[a,s]=e;this.outputShape=t;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let u=0;u<=1;u++)for(let e=0;e<=1;e++){const n=2*u+e;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${e} < ${t[2]}) {\n            localCoords[2] += ${e};\n            if(localCoords[1] + ${u} < ${t[1]}) {\n              localCoords[1] += ${u};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${s};\n              c = imod(flatIndex, ${s});\n              uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${n}] = values[0];\n              } else if(offset == 1) {\n                result[${n}] = values[1];\n              } else if(offset == 2) {\n                result[${n}] = values[2];\n              } else {\n                result[${n}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${Eb(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zb(t){const e=jb(),n=`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`;return Lm(t,n)}function Lb(t){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return Hm(t,e)}function Pb(t){const e=new Uint16Array([0,1,2,2,1,3]);return qm(t,e)}function Bb(t,e,n,r,a,s){Xm(e,n);const i=Km(t),o=t.TEXTURE_2D;return $m(t,()=>t.bindTexture(o,i)),$m(t,()=>t.texParameteri(o,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE)),$m(t,()=>t.texParameteri(o,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)),$m(t,()=>t.texParameteri(o,t.TEXTURE_MIN_FILTER,t.NEAREST)),$m(t,()=>t.texParameteri(o,t.TEXTURE_MAG_FILTER,t.NEAREST)),$m(t,()=>t.texImage2D(o,0,r,e,n,0,a,s,null)),$m(t,()=>t.bindTexture(t.TEXTURE_2D,null)),i}function Wb(t){return t.internalFormatFloat}function Vb(t,e,n,r){const[a,s]=Sm(e,n);return Bb(t,a,s,Wb(r),r.textureFormatFloat,t.FLOAT)}function Ub(t){return t.internalFormatHalfFloat}function Gb(t,e,n,r){const[a,s]=Sm(e,n);return Bb(t,a,s,Ub(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function Hb(t){return t.downloadTextureFormat}function qb(t,e,n,r){const[a,s]=Sm(e,n);return Bb(t,a,s,Hb(r),t.RGBA,t.UNSIGNED_BYTE)}function Kb(t){return t.internalFormatPackedFloat}function Xb(t,e,n,r){const[a,s]=Tm(e,n);return Bb(t,a,s,Kb(r),t.RGBA,t.FLOAT)}function Yb(t){return t.internalFormatPackedHalfFloat}function Zb(t,e,n,r){const[a,s]=Tm(e,n);return Bb(t,a,s,Yb(r),t.RGBA,r.textureTypeHalfFloat)}function Jb(t,e,n){const r=0,a=12,s=20;$m(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n));const i=Zm(t,e,"clipSpacePos",n,3,s,r);return i&&Zm(t,e,"uv",n,2,s,a)}function Qb(t,e,n,r,a,s){let i,o,u;$m(t,()=>t.bindTexture(t.TEXTURE_2D,e)),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=t.UNSIGNED_BYTE,u=t.RGBA):(i=new Float32Array(n*r*4),o=t.FLOAT,u=s.internalFormatPackedFloat),i.set(a),$m(t,()=>t.texImage2D(t.TEXTURE_2D,0,u,n,r,0,t.RGBA,o,i)),$m(t,()=>t.bindTexture(t.TEXTURE_2D,null))}function tg(t,e,n){$m(t,()=>t.bindTexture(t.TEXTURE_2D,e)),n.data instanceof Uint8Array?$m(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data)):$m(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n)),$m(t,()=>t.bindTexture(t.TEXTURE_2D,null))}function eg(t,e,n,r){const a=t.createBuffer();$m(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,a));const s=4,i=4,o=s*i*e*n;return $m(t,()=>t.bufferData(t.PIXEL_PACK_BUFFER,o,t.STREAM_READ)),$m(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0)),$m(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null)),a}function ng(t,e,n){const r=t,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function rg(t,e,n,r){const[a,s]=Sm(e,n),i=4,o=new Uint8Array(Cm(e*n,i));return $m(t,()=>t.readPixels(0,0,a,s,r.downloadTextureFormat,t.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function ag(t,e,n,r,a,s,i,o){const u=t,c=new Float32Array(Em(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}function sg(t,e,n){const r=new Float32Array(e*n*4);return $m(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r)),r}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ig{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=Object(o["env"])().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,xm(e,t)):this.gl=vm(e);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===Object(o["env"])().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=zm(this.gl,t),xb(this.gl,e))this.textureHalfFloatExtension=zm(this.gl,e);else if(Object(o["env"])().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),xb(this.gl,r))this.colorBufferHalfFloatExtension=zm(this.gl,r);else if(Object(o["env"])().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",xb(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!xb(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=Lb(this.gl),this.indexBuffer=Pb(this.gl),this.framebuffer=Ym(this.gl),this.textureConfig=Am(this.gl,this.textureHalfFloatExtension)}get debug(){return Object(o["env"])().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;$m(t,()=>t.finish()),$m(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),$m(t,()=>t.deleteFramebuffer(this.framebuffer)),$m(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),$m(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),$m(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),Vb(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),Gb(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),qb(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),tg(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),Qb(this.gl,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),Zb(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),Xb(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(rb(this.gl,this.framebuffer),this.outputTexture=null),$m(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,()=>rg(this.gl,e,n,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,n,r,a,s){return ag(this.gl,t,e,n,r,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return ng(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=eg(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(Object(o["env"])().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(a,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=a}else Object(o["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,Object(o["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,()=>sg(this.gl,e,n))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=Pm(e,t),r=zb(e),a=Vm(e);return $m(e,()=>e.attachShader(a,r)),$m(e,()=>e.attachShader(a,n)),Um(e,a),this.debug&&Gm(e,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=Jb(e,this.program,this.vertexBuffer)),a}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&$m(this.gl,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&Gm(this.gl,this.program),$m(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?Qm(this.gl,t,e):tb(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),$m(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),eb(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,a]=Tm(e,n);this.setOutputMatrixTextureDriver(t,r,a)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&Gm(this.gl,this.program),ab(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),$m(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),$m(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=zm(this.gl,2===Object(o["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Object(o["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===Object(o["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await o["util"].repeatedTry(()=>this.disposed||this.isQueryAvailable(t,Object(o["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,Object(o["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl,n=e.getQueryParameter(t,e.QUERY_RESULT);return n/1e6}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT);return n/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=og(this.itemsToPoll.map(t=>t.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||o["util"].repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),nb(this.gl,t,this.framebuffer),this.debug&&ab(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(nb(this.gl,this.outputTexture,this.framebuffer),this.debug&&ab(this.gl)):rb(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;nb(r,t,this.framebuffer),this.debug&&ab(r),this.outputTexture=t,$m(r,()=>r.viewport(0,0,e,n)),$m(r,()=>r.scissor(0,0,e,n))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),$m(this.gl,()=>this.gl.scissor(t,e,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function og(t){let e=0;for(;e<t.length;++e){const n=t[e]();if(!n)break}return e-1}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:ug}=o["backend_util"];function cg(t,e,n,r){const a=[];t.forEach(t=>{const e=o["util"].sizeFromShape(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?a.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(a.push(`uniform sampler2D ${t.name};`),a.push(`uniform int offset${t.name};`))});const s=a.join("\n"),i=t.map(t=>hg(t,e,r)).join("\n"),u=e.texShape,c=jb(),l=mg(c);let d,h,p=yg(c);e.isPacked?(d=pg(e.logicalShape,u),h=gg(c)):(d=fg(e.logicalShape,u),h=bg(c)),r&&(p+=kg);const f=[p,l,h,s,d,i,n].join("\n");return f}function lg(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return _g(t);case 1:return zg(t);case 2:return Pg(t);case 3:return Wg(t);case 4:return Ug(t);case 5:return Gg(t);case 6:return Hg(t);default:throw new Error(e.length+"-D input sampling is not yet supported")}}function dg(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return Fg(t);case 1:return Mg(t);case 2:return Lg(t);case 3:return Bg(t);default:return Vg(t)}}function hg(t,e,n=!1){let r="";r+=n?dg(t):lg(t);const a=t.shapeInfo.logicalShape,s=e.logicalShape;return a.length<=s.length&&(r+=n?Kg(t,e):Xg(t,e)),r}function pg(t,e){switch(t.length){case 0:return Og();case 1:return Ig(t,e);case 2:return $g(t,e);case 3:return Sg(t,e);default:return jg(t,e)}}function fg(t,e){switch(t.length){case 0:return Og();case 1:return Ng(t,e);case 2:return Rg(t,e);case 3:return Cg(t,e);case 4:return Tg(t,e);case 5:return Eg(t,e);case 6:return Ag(t,e);default:throw new Error(t.length+"-D output sampling is not yet supported")}}function mg(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}function bg(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}function gg(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}function yg(t){const e=`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${xg}\n    ${vg}\n    ${wg}\n  `;return e}const xg="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",vg="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",wg="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",kg="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Og(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function Ig(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}function Ng(t,e){return 1===e[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${e[1]}.0);\n      }\n    `:1===e[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${e[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      return resTexRC.x * ${e[1]} + resTexRC.y;\n    }\n  `}function Sg(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[2]/2),a=r*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}function Cg(t,e){const n=Tb(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}function jg(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[t.length-1]/2),a=r*Math.ceil(t[t.length-2]/2);let s=a,i="",o="b, r, c";for(let u=2;u<t.length-1;u++)s*=t[t.length-u-1],i=`\n      int b${u} = index / ${s};\n      index -= b${u} * ${s};\n    `+i,o=`b${u}, `+o;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${t.length}(${o});\n    }\n  `}function Tg(t,e){const n=Tb(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}function Eg(t,e){const n=Tb(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}function Ag(t,e){const n=Tb(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}function $g(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(o["util"].arraysEqual(t,e))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(t[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}function Rg(t,e){return o["util"].arraysEqual(t,e)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `:1===t[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===t[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}function Dg(t){return"offset"+t}function Fg(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=jb();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${e}, halfCR);\n    }\n  `}function _g(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[r,a]=t.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${n}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const[s,i]=t.shapeInfo.texShape,o=Dg(e);return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${s}, ${i}, ${o});\n      return sampleTexture(${e}, uv);\n    }\n  `}function Mg(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],s=jb();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${s.texture2D}(${e}, uv);\n    }\n  `}function zg(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${qg(t)}\n      }\n    `;const r=t.shapeInfo.texShape,a=r[0],s=r[1];if(1===s&&1===a)return`\n      float ${n}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const i=Dg(e);return 1===s?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `:1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${s}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${s}, index + ${i});\n      return sampleTexture(${e}, uv);\n    }\n  `}function Lg(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t.shapeInfo.texShape,s=a[0],i=a[1],u=jb();if(null!=a&&o["util"].arraysEqual(e,a))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${s}.0);\n\n        return ${u.texture2D}(${n}, uv);\n      }\n    `;const c=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],l=Math.ceil(e[1]/2);return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${l}, ${c[0]}, ${c[1]}, row, col);\n      return ${u.texture2D}(${n}, uv);\n    }\n  `}function Pg(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t.shapeInfo.texShape;if(null!=a&&o["util"].arraysEqual(e,a)){const t=a[0],e=a[1];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${e}.0, ${t}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:s,keptDims:i}=o["util"].squeezeShape(e),u=s;if(u.length<e.length){const e=Zg(t,u),n=["row","col"];return`\n      ${lg(e)}\n      float ${r}(int row, int col) {\n        return ${r}(${Jg(n,i)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${qg(t)}\n      }\n    `;const c=a[0],l=a[1],d=Dg(n);return 1===l?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===c?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${d};\n    vec2 uv = uvFromFlat(${c}, ${l}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}function Bg(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t.shapeInfo.texShape,s=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===e[0]){const n=e.slice(1),a=[1,2],s=Zg(t,n),i=["b","row","col"];return`\n        ${dg(s)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${Jg(i,a)});\n        }\n      `}const i=s[0],o=s[1],u=Math.ceil(e[2]/2),c=u*Math.ceil(e[1]/2),l=jb();return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${c}, ${u}, b, row, col);\n      return ${l.texture2D}(${n}, uv);\n    }\n  `}function Wg(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e[1]*e[2],s=e[2],{newShape:i,keptDims:u}=o["util"].squeezeShape(e),c=i;if(c.length<e.length){const e=Zg(t,c),n=["row","col","depth"];return`\n        ${lg(e)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${Jg(n,u)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${s}, 1)));\n        ${qg(t)}\n      }\n    `;const l=t.shapeInfo.texShape,d=l[0],h=l[1],p=t.shapeInfo.flatOffset;if(h===a&&null==p)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${s}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${d}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===s&&null==p)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${d}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;const f=Dg(n);return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${s} + depth + ${f};\n        vec2 uv = uvFromFlat(${d}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}function Vg(t){const e=t.shapeInfo.logicalShape,n=e.length,r=t.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=t.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],o=i[0],u=i[1],c=Math.ceil(e[n-1]/2);let l=c*Math.ceil(e[n-2]/2),d="int b, int row, int col",h=`b * ${l} + (row / 2) * ${c} + (col / 2)`;for(let f=2;f<n-1;f++)d=`int b${f}, `+d,l*=e[n-f-1],h=`b${f} * ${l} + `+h;const p=jb();return`\n    vec4 ${a}(${d}) {\n      int index = ${h};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${o});\n      return ${p.texture2D}(${r}, uv);\n    }\n  `}function Ug(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e[3],s=e[2]*a,i=e[1]*s,{newShape:u,keptDims:c}=o["util"].squeezeShape(e);if(u.length<e.length){const e=Zg(t,u),n=["row","col","depth","depth2"];return`\n      ${lg(e)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${Jg(n,c)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${s}, ${a}, 1)));\n        ${qg(t)}\n      }\n    `;const l=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,h=d[0],p=d[1];if(p===i&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===a&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=Dg(n);return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${s} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${p}, index + ${f});\n      return sampleTexture(${n}, uv);\n    }\n  `}function Gg(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e[4],s=e[3]*a,i=e[2]*s,u=e[1]*i,{newShape:c,keptDims:l}=o["util"].squeezeShape(e);if(c.length<e.length){const e=Zg(t,c),n=["row","col","depth","depth2","depth3"];return`\n      ${lg(e)}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${Jg(n,l)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${u}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${qg(t)}\n      }\n    `;const d=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,p=h[0],f=h[1];if(f===u&&null==d)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==d)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=Dg(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${m};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function Hg(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=o["util"].squeezeShape(e);if(a.length<e.length){const e=Zg(t,a),n=["row","col","depth","depth2","depth3","depth4"];return`\n      ${lg(e)}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${Jg(n,s)});\n      }\n    `}const i=e[5],u=e[4]*i,c=e[3]*u,l=e[2]*c,d=e[1]*l;if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${d}, ${l}, ${c}, ${u})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${qg(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,f=p[0],m=p[1];if(m===d&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${c}, ${u}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const b=Dg(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${l} + depth * ${c} +\n          depth2 * ${u} + depth3 * ${i} + depth4 + ${b};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function qg(t){const e=t.name,n=o["util"].sizeFromShape(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function Kg(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.shapeInfo.logicalShape.length,i=e.logicalShape.length,u=ug(t.shapeInfo.logicalShape,e.logicalShape),c=Yg(i),l=i-s;let d;const h=["x","y","z","w","u","v"];d=0===s?"":i<2&&u.length>=1?"coords = 0;":u.map(t=>`coords.${h[t+l]} = 0;`).join("\n");let p="";p=i<2&&s>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>"coords."+h[e+l]).join(", ");let f="return outputValue;";const m=o["util"].sizeFromShape(t.shapeInfo.logicalShape),b=1===m,g=o["util"].sizeFromShape(e.logicalShape),y=1===g;if(1!==s||b||y){if(b&&!y)f=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(u.length){const t=s-2,e=s-1;u.indexOf(t)>-1&&u.indexOf(e)>-1?f="return vec4(outputValue.x);":u.indexOf(t)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":u.indexOf(e)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${c} coords = getOutputCoords();\n      ${d}\n      vec4 outputValue = get${r}(${p});\n      ${f}\n    }\n  `}function Xg(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.texShape,i=t.shapeInfo.texShape,u=t.shapeInfo.logicalShape.length,c=e.logicalShape.length;if(!t.shapeInfo.isUniform&&u===c&&null==t.shapeInfo.flatOffset&&o["util"].arraysEqual(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=Yg(c),d=ug(t.shapeInfo.logicalShape,e.logicalShape),h=c-u;let p;const f=["x","y","z","w","u","v"];p=0===u?"":c<2&&d.length>=1?"coords = 0;":d.map(t=>`coords.${f[t+h]} = 0;`).join("\n");let m="";return m=c<2&&u>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>"coords."+f[e+h]).join(", "),`\n    float ${a}() {\n      ${l} coords = getOutputCoords();\n      ${p}\n      return get${r}(${m});\n    }\n  `}function Yg(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function Zg(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function Jg(t,e){return e.map(e=>t[e]).join(", ")}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qg(t,e,n,r){const a=e.userCode,s=n.map((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}}),i=s.map(t=>t.shapeInfo),u={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},c=cg(s,u,a,e.packedInputs),l=t.createProgram(c);let d=null;const h=t.getUniformLocation(l,"NAN",!1);1===Object(o["env"])().getNumber("WEBGL_VERSION")&&(d=t.getUniformLocation(l,"INFINITY",!1));const p={};for(let o=0;o<e.variableNames.length;o++){const n=e.variableNames[o],r=!1;p[n]=t.getUniformLocation(l,n,r),p["offset"+n]=t.getUniformLocation(l,"offset"+n,r)}return{program:e,source:c,webGLProgram:l,uniformLocations:p,inShapeInfos:i,outShapeInfo:u,infLoc:d,nanLoc:h}}function ty(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach((t,n)=>{const r=t.logicalShape,a=e[n],s=a.shape;if(!o["util"].arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(t.isUniform&&a.isUniform)return;const i=t.texShape,u=a.isUniform?null:a.texData.texShape;if(!o["util"].arraysEqual(i,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${u} must match`)})}function ey(t,e,n,r,a){ty(e.inShapeInfos,n),ty([e.outShapeInfo],[r]);const s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(s,i[0],i[1]):t.setOutputMatrixTexture(s,i[0],i[1]),t.setProgram(e.webGLProgram),1===Object(o["env"])().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach((n,r)=>{const a=e.program.variableNames[r],s=e.uniformLocations[a],i=e.uniformLocations["offset"+a];if(null!=s)if(n.isUniform)if(o["util"].sizeFromShape(n.shape)<2)t.gl.uniform1f(s,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(s,e)}else null!=n.texData.slice&&null!=i&&t.gl.uniform1i(i,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,s,r)}),null!=a&&a(t,e.webGLProgram),t.executeProgram()}function ny(t,e,n){let r="";e.concat(n).forEach(t=>{const e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${n}_${e}`});const a=t.userCode;let s=t.constructor.name;return s+="_"+r+"_"+a,s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:ry,bincountImpl:ay,bincountReduceImpl:sy,ceilImpl:iy,concatImpl:oy,expImpl:uy,expm1Impl:cy,floorImpl:ly,gatherV2Impl:dy,greaterImpl:hy,lessImpl:py,linSpaceImpl:fy,logImpl:my,maxImpl:by,maximumImpl:gy,minimumImpl:yy,multiplyImpl:xy,negImpl:vy,prodImpl:wy,rangeImpl:ky,rsqrtImpl:Oy,simpleAbsImpl:Iy,sliceImpl:Ny,stridedSliceImpl:Sy,subImpl:Cy,tileImpl:jy,topKImpl:Ty,transposeImpl:Ey,uniqueImpl:Ay}=i;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $y(t,e){return["x","y","z","w","u","v"].slice(0,e).map(e=>`${t}.${e}`)}function Ry(t,e){return 1===e?[t]:$y(t,e)}function Dy(t,e){if(1===t)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fy{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=Ry("rc",e),r=Yg(e),a=My(e,t,n),s=zy(e,t[t.length-1],t[t.length-2],n),i=Ly(t,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}function _y(t,e){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let s=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<t;n++)s=e[e.length-1-n]+","+s;n.push(s)}return n}function My(t,e,n){if(1===t)return"rc > "+e[0];let r="";for(let a=t-2;a<t;a++)r+=`${n[a]} >= ${e[a]}`,a<t-1&&(r+="||");return r}function zy(t,e,n,r){if(1===t)return"";const a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${e};\n    bool rEdge = rp1 >= ${n};\n  `}function Ly(t,e){const n=t.length,r=_y(n,e);return 1===n?`getA(rc),\n            rc + 1 >= ${t[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Py{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let r=0;r<4;r++){let t="thisRC = rc;";r%2===1&&(t+="thisRC.z += 1;"),r>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${r}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${r>0?"}":""}\n      `}this.userCode=`\n      ${By(e)}\n      ${Eb(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${t[1]};\n        int cols = ${t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}function By(t){const e=Tb(["r","c","d"],t);return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${e}\n      return ivec3(r, c, d);\n    }\n  `}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wy{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=qy(e,n),a=Ky(t,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=Uy(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const t=this.freeTextures[a].shift();return this.usedTextures[a].push(t),t}let i;return r===Nm.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===Nm.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===Nm.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===Nm.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===Nm.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(t,e,n,r){if(null==this.freeTextures)return;const a=qy(n,r),s=Ky(e,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);const i=Uy(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),u=Object(o["env"])().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==u&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=i):(this.freeTextures[s].push(t),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const c=this.usedTextures[s],l=c.indexOf(t);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: "+this._numBytesAllocated),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(const t in this.usedTextures)this.usedTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Vy(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;throw new Error("Unknown internal format "+e)}function Uy(t,e,n,r,a){const s=Gy(e,r);let i;if(a){const[e,n]=Tm(t[0],t[1]);i=e*n}else{const[e,n]=Sm(t[0],t[1]);i=e*n}const o=Vy(n,s);return i*o}function Gy(t,e){switch(t){case Nm.PACKED_2X2_FLOAT32:return Kb(e);case Nm.PACKED_2X2_FLOAT16:return Yb(e);case Nm.UNPACKED_FLOAT32:return Wb(e);case Nm.UNPACKED_FLOAT16:return Ub(e);case Nm.PACKED_4X1_UNSIGNED_BYTE:return Hb(e);default:throw new Error("Unknown physical texture type "+t)}}function Hy(t){return Object(o["env"])().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?Nm.PACKED_2X2_FLOAT32:Nm.UNPACKED_FLOAT32:t?Nm.PACKED_2X2_FLOAT16:Nm.UNPACKED_FLOAT16}function qy(t,e){if(t===Im.UPLOAD)return Nm.PACKED_2X2_FLOAT32;if(t===Im.RENDER||null==t)return Hy(e);if(t===Im.DOWNLOAD||t===Im.PIXELS)return Nm.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+t)}function Ky(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xy{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Yy="if (isnan(x)) return x;",Zy="return x;",Jy="return abs(x);";const Qy="return (x >= 0.0) ? x : (exp(x) - 1.0);",tx=Yy+"\n  return (x < 0.0) ? 0.0 : x;\n",ex=Yy+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",nx="return x;",rx="return x;",ax="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",sx="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",ix="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n";class ox{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ux{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=Ry("rc",e),r=Yg(e),a=Dy(e,n),s=n.slice(-2),i=e<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cx=o["kernel_impls"].whereImpl,lx=1e-7,dx=1e-4,hx={};function px(t){return t in hx||(hx[t]={}),hx[t]}const fx=128,mx=600;function bx(){return null==Object(o["env"])().global.screen?1024:Object(o["env"])().global.screen.height*Object(o["env"])().global.screen.width*window.devicePixelRatio*mx/1024/1024}class gx extends o["KernelBackend"]{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!Object(o["env"])().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=vm(Object(o["env"])().getNumber("WEBGL_VERSION"));this.binaryCache=px(Object(o["env"])().getNumber("WEBGL_VERSION")),this.gpgpu=new ig(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;this.textureManager=new Wy(this.gpgpu),this.numMBBeforeWarning=bx(),this.texData=new o["DataStorage"](this,Object(o["engine"])())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,n){if((Object(o["env"])().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Object(o["env"])().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={};return this.texData.set(r,{shape:e,dtype:n,values:t,usage:Im.UPLOAD,refCount:1,complexParentRefCount:0}),r}incRef(t){const e=this.texData.get(t);e.refCount++}decRef(t){if(this.texData.has(t)){const e=this.texData.get(t);e.refCount--}}decComplexRef(t){if(this.texData.has(t)){const e=this.texData.get(t);e.complexParentRefCount>0&&e.refCount--}}move(t,e,n,r){if(Object(o["env"])().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:e,usage:Im.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}readSync(t){const e=this.texData.get(t),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:u}=e;if(null!=s){let e;e=u?new ox(i,nx):new Xy(i,nx);const n=this.runWebGLProgram(e,[{dataId:t,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;const c=null!=this.activeTimers;let l,d;if(c&&(l=o["util"].now()),"complex64"===r){const t=this.readSync(a.real.dataId),e=this.readSync(a.imag.dataId);d=o["backend_util"].mergeRealAndImagArrays(t,e)}else d=this.getValuesFromTexture(t);return c&&(this.downloadWaitMs+=o["util"].now()-l),this.convertAndCacheOnCPU(t,d)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise(t=>e.push(t))}const e=this.texData.get(t),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:u}=e;if(null!=a){let e;e=u?new ox(r,nx):new Xy(r,nx);const n=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(t);if(!Object(o["env"])().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Object(o["env"])().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c,l,d=null;if("complex64"!==s&&Object(o["env"])().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(t);const e=this.texData.get(c.dataId);d=this.gpgpu.createBufferFromTexture(e.texture,...jm(r))}if(this.pendingRead.set(t,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const t=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),e=t[0],n=t[1];l=o["backend_util"].mergeRealAndImagArrays(e,n)}else if(null==d)l=this.getValuesFromTexture(t);else{const t=o["util"].sizeFromShape(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(d,t)}null!=c&&this.disposeIntermediateTensorInfo(c);const h=this.convertAndCacheOnCPU(t,l),p=this.pendingRead.get(t);return this.pendingRead.delete(t),p.forEach(t=>t(h)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t),this.pendingDeletes--),h}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map(t=>o["util"].decodeString(t))}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(o["buffer"])(t.shape,t.dtype,n)}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!_m(n)){if(Object(o["env"])().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:r}=this.texData.get(t),a=o["util"].sizeFromShape(e);if(Object(o["env"])().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...jm(e)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const s=Object(o["env"])().getBool("WEBGL_PACK")&&!0===r,i=s?lb(e):e,u=s?new Fb(i):new Db(i),c=this.runWebGLProgram(u,[{shape:i,dtype:n,dataId:t}],"float32"),l=this.texData.get(c.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(c),d}async time(t){const e=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();const a=o["util"].flatten(this.activeTimers.map(t=>t.query)).filter(t=>null!=t),s=o["util"].flatten(this.activeTimers.map(t=>t.name)).filter(t=>null!=t);this.activeTimers=e,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Object(o["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(a);i["kernelMs"]=o["util"].sum(t),i["getExtraProfileInfo"]=()=>t.map((t,e)=>({name:s[e],ms:t})).map(t=>`${t.name}: ${t.ms}`).join(", ")}else i["kernelMs"]={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Object(o["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:o["util"].now(),endMs:null}}endTimer(t){return Object(o["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=o["util"].now(),t)}async getQueryTime(t){if(Object(o["env"])().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t){if(this.pendingDisposal.has(t))return;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),void this.pendingDeletes++;if(!this.texData.has(t))return;if(this.texData.get(t).complexParentRefCount>0)return void this.texData.get(t).refCount--;this.releaseGPUData(t);const{complexTensorInfos:e}=this.texData.get(t);null!=e&&(this.texData.get(e.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.real),this.texData.get(e.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.imag)),this.texData.delete(t)}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(t),o=i&&i.origDataId||t,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,a,s)));const c=this.texData.get(t);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return Object(o["env"])().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=Object(o["engine"])().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t,e=fx){const n=this.getCPUBackend();return Object(o["env"])().getBool("IS_TEST")||this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&t.every(t=>null==this.texData.get(t.dataId).texture&&o["util"].sizeFromShape(t.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){o["backend_util"].warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return cx(t.shape,e)}packedUnaryOp(t,e,n){const r=new ox(t.shape,e);return this.compileAndRun(r,[t],n)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=Iy(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(Object(o["env"])().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Jy,t.dtype);const e=new Xy(t.shape,Jy);return this.compileAndRun(e,[t])}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&o["util"].isString(n[0])){const a=n.map(t=>o["util"].encodeString(t));r=this.write(a,t,e)}else r=this.write(n,t,e);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:e}}makeOutput(t,e,n){const{dataId:r}=this.makeTensorInfo(t,e,n);return Object(o["engine"])().makeTensorFromDataId(r,t,e,this)}unpackTensor(t){const e=new ux(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new Fy(t.shape),n=!0;return this.runWebGLProgram(e,[t],t.dtype,null,n)}packedReshape(t,e){const n=[ub(t.shape),...cb(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},a=[ub(e),...cb(e)],s=new Py(a,n),i=!0,o=this.runWebGLProgram(s,[r],t.dtype,null,i);return{dataId:o.dataId,shape:e,dtype:o.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:r,dtype:a}=e,s=lb(r);let i;i=n?new Rb(s):new $b(s);const o=!0,u=this.runWebGLProgram(i,[{shape:s,dtype:a,dataId:t}],a,null,o);return{dtype:a,shape:r,dataId:u.dataId}}runWebGLProgram(t,e,n,r,a=!1){const s=this.makeTensorInfo(t.outputShape,n),i=this.texData.get(s.dataId);if(t.packedOutput&&(i.isPacked=!0),t.outPackingScheme===Om.DENSE){const e=jm(t.outputShape);i.texShape=e.map(t=>2*t)}if(null!=t.outTexUsage&&(i.usage=t.outTexUsage),0===o["util"].sizeFromShape(s.shape))return i.values=o["util"].getTypedArrayFromDType(s.dtype,0),s;const u=[],c=e.map(e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&o["util"].sizeFromShape(e.shape)<=Object(o["env"])().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!==!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),u.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!pb(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),u.push(e),n=this.texData.get(e.dataId),t.shape=r}return this.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}});this.uploadToGPU(s.dataId);const l={shape:s.shape,texData:i,isUniform:!1},d=ny(t,c,l),h=this.getAndSaveBinary(d,()=>Qg(this.gpgpu,t,c,l)),p=null!=this.activeTimers;let f;if(p&&(f=this.startTimer()),ey(this.gpgpu,h,c,l,r),u.forEach(t=>this.disposeIntermediateTensorInfo(t)),p&&(f=this.endTimer(f),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(f)})),!Object(o["env"])().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===a){const t=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),t}return s}compileAndRun(t,e,n,r,a=!1){n=n||e[0].dtype;const s=this.runWebGLProgram(t,e,n,r,a);return Object(o["engine"])().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Object(o["env"])().getBool("IS_TEST")){const t=Object.keys(this.binaryCache);t.forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]})}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Object(o["tidy"])(()=>{if(!Object(o["env"])().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=Object(o["env"])().getBool("DEBUG");Object(o["env"])().set("DEBUG",!1);const e=this.abs(Object(o["scalar"])(1e-8)).dataSync()[0];if(Object(o["env"])().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?lx:dx}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:u}=e;if(null!=s)return;const c=null!=this.activeTimers;let l;c&&(l=o["util"].now());let d=e.texShape;if(null==d&&(d=db(n,u),e.texShape=d),null!=a){const t=lb(n);let s,i=d[1],h=d[0];const p=a instanceof Uint8Array;u?([i,h]=Tm(d[0],d[1]),s=new Mb(t,[h,i],p)):s=new _b(t,[h,i],p);const f=this.makeTensorInfo([h,i],r);this.texData.get(f.dataId).usage=p?Im.PIXELS:Im.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,a);const m=!0,b=this.runWebGLProgram(s,[f],r,null,m),g=this.texData.get(b.dataId);e.texture=g.texture,e.texShape=g.texShape,e.isPacked=g.isPacked,e.usage=g.usage,this.disposeIntermediateTensorInfo(f),this.texData.delete(b.dataId),e.values=null,c&&(this.uploadWaitMs+=o["util"].now()-l)}else{const t=this.acquireTexture(d,i,r,u);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=yx(e,r)),n.values}acquireTexture(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*o["util"].bytesPerElement(e)}}function yx(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error("Unknown dtype "+e)}
/** @license See the LICENSE file. */const xx="2.8.5";
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
o["device_util"].isBrowser()&&Object(o["registerBackend"])("webgl",()=>new gx,2);const vx="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wx{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=o["backend_util"].assertAndGetBroadcastShape(e,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kx="\n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n";class Ox{constructor(t,e,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o["backend_util"].assertAndGetBroadcastShape(e,n);const a=this.outputShape.length;let s="";if(r)if(0===a||1===o["util"].sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const t=Yg(a);if(s=`\n          ${t} coords = getOutputCoords();\n        `,1===a)s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=Ry("coords",a);s+=`\n            bool nextRowOutOfBounds =\n              (${t[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${t[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ix(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Nx={kernelName:o["Identity"],backendName:"webgl",kernelFunc:Ix};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sx(t){const{inputs:e,backend:n}=t,{real:r,imag:a}=e,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=Ix({inputs:{x:r},backend:n}),u=n.texData.get(o.dataId);u.complexParentRefCount++;const c=Ix({inputs:{x:a},backend:n}),l=n.texData.get(c.dataId);return l.complexParentRefCount++,i.complexTensorInfos={real:o,imag:c},s}const Cx={kernelName:o["Complex"],backendName:"webgl",kernelFunc:Sx},jx="return (a < 0.) ? b * a : a;",Tx="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ex(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{alpha:s}=r,i=n.makeTensorInfo([],"float32",o["util"].createScalarValue(s,"float32")),u=Object(o["env"])().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ox(Tx,a.shape,i.shape):new wx(jx,a.shape,i.shape),c=n.runWebGLProgram(u,[a,i],a.dtype);return n.disposeIntermediateTensorInfo(i),c}const Ax={kernelName:o["LeakyRelu"],backendName:"webgl",kernelFunc:Ex},$x="return (a < 0.) ? b * a : a;",Rx="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dx(t){const{inputs:e,backend:n}=t,{x:r,alpha:a}=e,s=Object(o["env"])().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ox(Rx,r.shape,a.shape):new wx($x,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}const Fx={kernelName:o["Prelu"],backendName:"webgl",kernelFunc:Dx},_x="if (isnan(x)) return x;",Mx="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n",zx="\n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lx({opSnippet:t,packedOpSnippet:e,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{const{x:i}=a,u=s,c=r||i.dtype;if(u.shouldExecuteOnCPU([i])&&null!=n){const t=u.texData.get(i.dataId),e=n(t.values,c);return u.makeTensorInfo(i.shape,c,e)}const l=Object(o["env"])().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=e;let d;return d=l?new ox(i.shape,e):new Xy(i.shape,t),u.runWebGLProgram(d,[i],c)}}function Px({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:u})=>{const{a:c,b:l}=i,d=u;if(r&&"complex64"===c.dtype){const e=d.texData.get(c.dataId),n=d.texData.get(l.dataId),[r,a]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(e=>{const[n,r]=e,a={dataId:n.dataId,dtype:n.dtype,shape:c.shape},s={dataId:r.dataId,dtype:r.dtype,shape:l.shape},i=new wx(t,c.shape,l.shape);return d.runWebGLProgram(i,[a,s],Object(o["upcastType"])(n.dtype,r.dtype))}),s=Sx({inputs:{real:r,imag:a},backend:d});return d.disposeIntermediateTensorInfo(r),d.disposeIntermediateTensorInfo(a),s}const h=s||Object(o["upcastType"])(c.dtype,l.dtype);if(d.shouldExecuteOnCPU([c,l])&&null!=a){const t=d.texData.get(c.dataId),e=d.texData.get(l.dataId),[n,r]=a(c.shape,l.shape,t.values,e.values,h),s=d.makeTensorInfo(r,h),i=d.texData.get(s.dataId);return i.values=n,s}const p=Object(o["env"])().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=e;let f;return f=p?new Ox(e,c.shape,l.shape,n):new wx(t,c.shape,l.shape),d.runWebGLProgram(f,[c,l],h)}}function Bx(t,e=!1){if("linear"===t)return e?rx:Zy;if("relu"===t)return e?sx:tx;if("elu"===t)return e?ax:Qy;if("relu6"===t)return e?ix:ex;if("prelu"===t)return e?Rx:$x;if("leakyrelu"===t)return e?Tx:jx;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wx{constructor(t,e,n,r=!1,a=!1,s=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const c=r?t[1]:t[2],l=Math.ceil(c/2),d=r?"i * 2, rc.y":"rc.y, i * 2",h=a?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",b="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,b="result = activation(result);");const g=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let y="rc.x",x="rc.x";t[0]<e[0]?y=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(x=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${l}; i++) {\n          int batchA = ${y};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${b}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vx={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class Ux{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=o["backend_util"].assertAndGetBroadcastShape(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gx="return a * b;";function Hx(t){const{inputs:e,backend:n}=t,{a:r,b:a}=e,s=o["backend_util"].upcastType(r.dtype,a.dtype);if("complex64"===r.dtype){const t=n.texData.get(r.dataId),e=n.texData.get(a.dataId),s=new Ux(Vx.REAL,r.shape,a.shape),i=new Ux(Vx.IMAG,r.shape,a.shape),o=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(s,o,"float32"),c=n.runWebGLProgram(i,o,"float32"),l=Sx({inputs:{real:u,imag:c},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),l}if(n.shouldExecuteOnCPU([r,a])){const t=n.texData.get(r.dataId),e=n.texData.get(a.dataId),[i,o]=xy(r.shape,a.shape,t.values,e.values,s),u=n.makeTensorInfo(o,s),c=n.texData.get(u.dataId);return c.values=i,u}let i;return i=Object(o["env"])().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ox(Gx,r.shape,a.shape):new wx(Gx,r.shape,a.shape),n.runWebGLProgram(i,[r,a],s)}const qx={kernelName:o["Multiply"],backendName:"webgl",kernelFunc:Hx};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kx(t,e,n){const r=[ub(t.shape),...cb(t.shape)],a={dtype:t.dtype,shape:r,dataId:t.dataId},s=[ub(e),...cb(e)],i=new Py(s,r),o=!0,u=n.runWebGLProgram(i,[a],t.dtype,null,o);return{dataId:u.dataId,shape:e,dtype:u.dtype}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xx(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{shape:s}=r,i=n,u=o["util"].sizeFromShape(a.shape),c=o["util"].inferFromImplicitShape(s,u),l=o["util"].sizeFromShape(c);o["util"].assert(u===l,()=>`The new shape (${c}) has ${l} elements and the old shape (${a.shape}) has ${u} elements. The new shape and old shape must have the same number of elements.`);const d=i.texData.get(a.dataId);return!d.isPacked||pb(a.shape,c)||null!==d.texture&&pb(d.shape,c)?(i.incRef(a.dataId),{dataId:a.dataId,shape:c,dtype:a.dtype}):Kx(a,c,i)}const Yx={kernelName:o["Reshape"],backendName:"webgl",kernelFunc:Xx};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zx{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=t;this.outputShape=[r,s];const i=4*Math.floor(n/4),u=n%4;let c="sumValue += dot(values, ones);";if(null!=e){const t=1/e;c=`sumValue += dot(values * ${o["util"].isInt(t)?t.toPrecision(2):t}, ones);`}let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===u}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${c}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${c}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jx{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=t;this.outputShape=[r,s];let i="0.0",o="";"prod"===e?i="1.0":"min"===e?(i="1.0 / 1e-20",o="min"):"max"===e&&(i="-1.0 / 1e-20",o="max");let u=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?u="sumValue":"prod"===e?u="prodValue":"all"===e?u="allValue":"any"===e&&(u="anyValue");const c=4*Math.floor(n/4),l=n%4;let d=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,h="vec4";"all"===e?(i="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===e&&(i="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qx(t){const e=[];while(0===e.length||1!==e[e.length-1].outSize){const n=e.length?e[e.length-1].outSize:t[1],r=o["backend_util"].computeOptimalWindowSize(n);e.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return e}function tv(t,e,n,r){const a=Qx(t.shape);let s=t;for(let i=0;i<a.length;i++){const{inSize:o,windowSize:u,outSize:c}=a[i];let l,d;l="mean"===n?0===i?new Zx({windowSize:u,inSize:o,batchSize:t.shape[0],outSize:c},o):new Zx({windowSize:u,inSize:o,batchSize:t.shape[0],outSize:c}):new Jx({windowSize:u,inSize:o,batchSize:t.shape[0],outSize:c},n),d=s,s=r.runWebGLProgram(l,[s],e),d.dataId!==t.dataId&&r.disposeIntermediateTensorInfo(d)}return s}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ev{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[e[s]];this.outputShape=n,this.rank=n.length;const r=Yg(this.rank),a=nv(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}function nv(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let a=0;a<t.length;a++)r[t[a]]=n[a];return r.join()}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rv{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let c=0;c<n.length;c++)n[c]=t[e[c]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=Yg(this.rank),a=$y("rc",this.rank),s=new Array(this.rank);for(let c=0;c<e.length;c++)s[e[c]]=a[c];const i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function av(t,e,n){const r=Object(o["env"])().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rv(t.shape,e):new ev(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sv(t,e,n,r){const a=e,s=t.shape.length,i=o["util"].parseAxisParam(a,t.shape);let u=i;const c=o["backend_util"].getAxesPermutation(u,s),l=null!=c;let d=t;l&&(d=av(t,c,r),u=o["backend_util"].getInnerMostAxes(u.length,s)),o["backend_util"].assertAxesAreInnerMostDims("sum",u,s);const[h,p]=o["backend_util"].computeOutAndReduceShapes(d.shape,u);let f=h;n&&(f=o["backend_util"].expandShapeToKeepDim(h,i));const m=o["util"].sizeFromShape(p),b=o["util"].sizeFromShape(t.shape),g=b/m,y=Xx({inputs:{x:d},attrs:{shape:[g,m]},backend:r}),x=Object(o["sumOutType"])(t.dtype),v=tv(y,x,"sum",r),w=Xx({inputs:{x:v},attrs:{shape:f},backend:r});return r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(v),l&&r.disposeIntermediateTensorInfo(d),w}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iv(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s,keepDims:i}=r;return sv(a,s,i,n)}const ov={kernelName:o["Sum"],backendName:"webgl",kernelFunc:iv};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uv(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{perm:s}=r,i=n,o=a.shape.length,u=new Array(o);for(let l=0;l<u.length;l++)u[l]=a.shape[s[l]];let c;if(i.shouldExecuteOnCPU([a])){const t=i.texData.get(a.dataId),e=t.values,n=Ey(e,a.shape,a.dtype,s,u);c=i.makeTensorInfo(u,a.dtype);const r=i.texData.get(c.dataId);r.values=n}else c=av(a,s,i);return c}const cv={kernelName:o["Transpose"],backendName:"webgl",kernelFunc:uv},lv=1e3;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dv({a:t,b:e,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:u=0,activation:c=null}){const l=t.shape.length,d=e.shape.length,h=n?t.shape[l-2]:t.shape[l-1],p=r?e.shape[d-1]:e.shape[d-2],f=n?t.shape[l-1]:t.shape[l-2],m=r?e.shape[d-2]:e.shape[d-1],b=t.shape.slice(0,-2),g=e.shape.slice(0,-2),y=o["util"].sizeFromShape(b),x=o["util"].sizeFromShape(g),v=y===x||1===y||1===x;o["util"].assert(l>=2&&d>=2&&v,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${b}) and (${g}).`);const w=y>x?t.shape.slice(0,-2):e.shape.slice(0,-2),k=w.concat([f,m]);o["util"].assert(h===p,()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${r} must match.`);const O=n?[y,h,f]:[y,f,h],I=r?[x,m,p]:[x,p,m],N=Xx({inputs:{x:t},backend:a,attrs:{shape:O}}),S=Xx({inputs:{x:e},backend:a,attrs:{shape:I}}),C=[N,S],j=Math.max(y,x),T=n?N.shape[1]:N.shape[2],E=null!=s,A=null!=i,$="leakyrelu"===c,R=null!=c?Bx(c,!0):null,D=E||A||$||null!=R;let F;if((1===f||1===m)&&T>lv&&!1===D){let t=N,e=S;n&&(t=uv({inputs:{x:N},backend:a,attrs:{perm:[0,2,1]}}),C.push(t)),r&&(e=uv({inputs:{x:S},backend:a,attrs:{perm:[0,2,1]}}),C.push(e));const s=1!==m,i=1===m;let o=t;s&&(o=Xx({inputs:{x:t},backend:a,attrs:{shape:[j,T,1]}}),C.push(o));const u=1===m?2:1;let c=e;i&&(c=Xx({inputs:{x:e},backend:a,attrs:{shape:[j,1,T]}}),C.push(c));const l=Hx({inputs:{a:o,b:c},backend:a});F=iv({inputs:{x:l},backend:a,attrs:{axis:u,keepDims:!0}}),C.push(l)}else{const c=Object(o["upcastType"])(t.dtype,e.dtype),l=new Wx(O,I,[j,f,m],n,r,E,R,A,$),d=[N,S];if(null!=s&&d.push(s),A&&d.push(i),$){const t=a.makeTensorInfo([],"float32",o["util"].createScalarValue(u,"float32"));d.push(t),C.push(t)}F=a.runWebGLProgram(l,d,c)}const _=Xx({inputs:{x:F},backend:a,attrs:{shape:k}});C.push(F);for(const o of C)a.disposeIntermediateTensorInfo(o);return _}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hv(t){const{inputs:e,backend:n,attrs:r}=t,{a:a,b:s,bias:i,preluActivationWeights:o}=e,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;return dv({a:a,b:s,transposeA:u,transposeB:c,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:l})}const pv={kernelName:o["_FusedMatMul"],backendName:"webgl",kernelFunc:hv},fv="return abs(x);";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mv(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const t=n.texData.get(r.dataId),e=Iy(t.values);return n.makeTensorInfo(r.shape,r.dtype,e)}let a;return a=Object(o["env"])().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new ox(r.shape,fv):new Xy(r.shape,fv),n.runWebGLProgram(a,[r],r.dtype)}const bv={kernelName:o["Abs"],backendName:"webgl",kernelFunc:mv},gv=Yy+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n",yv=Lx({opSnippet:gv}),xv={kernelName:o["Acos"],backendName:"webgl",kernelFunc:yv},vv=Yy+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));",wv=Lx({opSnippet:vv}),kv={kernelName:o["Acosh"],backendName:"webgl",kernelFunc:wv},Ov="return a + b;",Iv=Px({opSnippet:Ov,packedOpSnippet:Ov,supportsComplex:!0,cpuKernelImpl:ry}),Nv={kernelName:o["Add"],backendName:"webgl",kernelFunc:Iv};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Sv{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((t,e)=>"T"+e);const n=[];this.variableNames.forEach(t=>{n.push(`float v${t} = get${t}AtOutCoords();`)});const r=this.variableNames.map(t=>"v"+t).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cv{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((t,e)=>"T"+e);const n=[];this.variableNames.forEach(t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)});const r=this.variableNames.map(t=>"v"+t).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jv(t){const{inputs:e,backend:n}=t,r=e;if(1===r.length)return Ix({inputs:{x:r[0]},backend:n});if(r.length>Object(o["env"])().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),e=jv({inputs:r.slice(0,t),backend:n}),a=jv({inputs:r.slice(t),backend:n});return jv({inputs:[e,a],backend:n})}const a=r.map(t=>t.dtype).reduce((t,e)=>Object(o["upcastType"])(t,e)),s=r.map(t=>t.shape),i=Object(o["env"])().getBool("WEBGL_PACK"),u=i?new Cv(r[0].shape,s):new Sv(r[0].shape,s);return n.runWebGLProgram(u,r,a)}const Tv={kernelName:o["AddN"],backendName:"webgl",kernelFunc:jv};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ev(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s,keepDims:i}=r,u=a.shape.length,c=o["util"].parseAxisParam(s,a.shape);let l=c;const d=o["backend_util"].getAxesPermutation(l,u);let h=a;null!=d&&(h=uv({inputs:{x:a},backend:n,attrs:{perm:d}}),l=o["backend_util"].getInnerMostAxes(l.length,u)),o["backend_util"].assertAxesAreInnerMostDims("all",l,u);const[p,f]=o["backend_util"].computeOutAndReduceShapes(h.shape,l),m=o["util"].sizeFromShape(f),b=Xx({inputs:{x:h},backend:n,attrs:{shape:[-1,m]}}),g=tv(b,b.dtype,"all",n);let y;if(i){const t=o["backend_util"].expandShapeToKeepDim(p,c);y=Xx({inputs:{x:g},backend:n,attrs:{shape:t}})}else y=Xx({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),y}const Av={kernelName:o["All"],backendName:"webgl",kernelFunc:Ev};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $v(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s,keepDims:i}=r,u=a.shape.length,c=o["util"].parseAxisParam(s,a.shape);let l=c;const d=o["backend_util"].getAxesPermutation(l,u);let h=a;null!=d&&(h=uv({inputs:{x:a},backend:n,attrs:{perm:d}}),l=o["backend_util"].getInnerMostAxes(l.length,u)),o["backend_util"].assertAxesAreInnerMostDims("any",l,u);const[p,f]=o["backend_util"].computeOutAndReduceShapes(h.shape,l),m=o["util"].sizeFromShape(f),b=Xx({inputs:{x:h},backend:n,attrs:{shape:[-1,m]}}),g=tv(b,b.dtype,"any",n);let y;if(i){const t=o["backend_util"].expandShapeToKeepDim(p,c);y=Xx({inputs:{x:g},backend:n,attrs:{shape:t}})}else y=Xx({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),y}const Rv={kernelName:o["Any"],backendName:"webgl",kernelFunc:$v};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dv{constructor(t,e,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const i="max"===e?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fv{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,o["util"].assert(t.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const a=t[t.length-1],s=Math.ceil(a/e);this.outputShape=t.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,u=i.length,c=Yg(u),l=Ry("coords",u);let d,h;if(1===s){h=u+1;const t=Yg(h);d=`\n        ${t} sourceLocR = ${t}(${l.join()}, 0);\n        ++${l[u-1]};\n        ${t} sourceLocG = ${t}(${l.join()}, 0);\n        ++${l[u-2]};\n        ${t} sourceLocA = ${t}(${l.join()}, 0);\n        --${l[u-1]};\n        ${t} sourceLocB = ${t}(${l.join()}, 0);\n        --${l[u-2]};`}else h=u,d=`\n        ${c} sourceLocR = coords;\n        ++${l[u-1]};\n        ${c} sourceLocG = coords;\n        ++${l[u-2]};\n        ${c} sourceLocA = coords;\n        --${l[u-1]};\n        ${c} sourceLocB = coords;\n        --${l[u-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),f="."+p[h-1],m=p.map(t=>"int "+t),b=Ry("sourceLocR",h-1).concat("inIdx.r"),g=Ry("sourceLocG",h-1).concat("inIdx.g"),y=Ry("sourceLocB",h-1).concat("inIdx.b"),x=Ry("sourceLocA",h-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,k=`vec4(\n            getAChannel(${b.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,O=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${O}\n      void main() {\n        ${c} coords = getOutputCoords();\n        bool hasNextCol = ${l[u-1]} < ${i[u-1]-1};\n        bool hasNextRow = ${l[u-2]} < ${i[u-2]-1};\n        ${d}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _v(t,e,n,r=null){let a=e.shape[0],s=e.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);const i=o["backend_util"].computeOptimalWindowSize(s),u={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},c=new Dv(u,n,null==r),l=[e];null!=r&&l.push(r);const d=t.runWebGLProgram(c,l,"int32");if(1===d.shape[1])return d;const h=_v(t,e,n,d);return t.disposeIntermediateTensorInfo(d),h}function Mv(t,e,n,r=null){const a=null!=r?r.shape:e.shape,s=a[a.length-1],i=o["backend_util"].computeOptimalWindowSize(s),u=new Fv(a,i,n,null==r),c=null==r?[e]:[e,r],l=t.runWebGLProgram(u,c,"int32");if(l.shape.length===e.shape.length){const r=Mv(t,e,n,l);return t.disposeIntermediateTensorInfo(l),r}return l}function zv(t,e,n,r){const a=[n];if(o["backend_util"].assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,e.shape.length),!Object(o["env"])().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const n=[],[s,i]=o["backend_util"].computeOutAndReduceShapes(e.shape,a),u=o["util"].sizeFromShape(i),c=Xx({inputs:{x:e},backend:t,attrs:{shape:[-1,u]}});n.push(c);const l=_v(t,c,r);n.push(l);const d=Xx({inputs:{x:l},backend:t,attrs:{shape:s}});return n.forEach(e=>t.disposeIntermediateTensorInfo(e)),d}return Mv(t,e,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lv(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s}=r;let i=o["util"].parseAxisParam(s,a.shape);const u=o["backend_util"].getAxesPermutation(i,a.shape.length);let c=a;const l=[];null!=u&&(c=uv({inputs:{x:a},backend:n,attrs:{perm:u}}),l.push(c),i=o["backend_util"].getInnerMostAxes(i.length,c.shape.length)),o["backend_util"].assertAxesAreInnerMostDims("argMax",[i[0]],c.shape.length);const d=zv(n,c,i[0],"max");return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),d}const Pv={kernelName:o["ArgMax"],backendName:"webgl",kernelFunc:Lv};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bv(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s}=r;let i=o["util"].parseAxisParam(s,a.shape);const u=o["backend_util"].getAxesPermutation(i,a.shape.length);let c=a;const l=[];null!=u&&(c=uv({inputs:{x:a},backend:n,attrs:{perm:u}}),l.push(c),i=o["backend_util"].getInnerMostAxes(i.length,c.shape.length)),o["backend_util"].assertAxesAreInnerMostDims("argMin",[i[0]],c.shape.length);const d=zv(n,c,i[0],"min");return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),d}const Wv={kernelName:o["ArgMin"],backendName:"webgl",kernelFunc:Bv},Vv=Yy+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n",Uv=Lx({opSnippet:Vv}),Gv={kernelName:o["Asin"],backendName:"webgl",kernelFunc:Uv},Hv=Yy+"return log(x + sqrt(x * x + 1.0));",qv=Lx({opSnippet:Hv}),Kv={kernelName:o["Asinh"],backendName:"webgl",kernelFunc:qv},Xv=Yy+"\n  return atan(x);\n",Yv=Lx({opSnippet:Xv}),Zv={kernelName:o["Atan"],backendName:"webgl",kernelFunc:Yv},Jv=Mx+"\n  return atan(a, b);\n",Qv="\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+zx+"\n  return result;\n",tw=Px({opSnippet:Jv,packedOpSnippet:Qv}),ew={kernelName:o["Atan2"],backendName:"webgl",kernelFunc:tw},nw=Yy+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;",rw=Lx({opSnippet:nw}),aw={kernelName:o["Atanh"],backendName:"webgl",kernelFunc:rw};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class sw{constructor(t,e,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const s=t.filterWidth,i=t.strideHeight,o=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,b=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let g="0.0";if(f||(g="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${h}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${l};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${c}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:b:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}const y="max";let x=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(x="avgValue / count");const v=4*Math.floor(s/4),w=s%4,k=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${y}(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${h}, ${p});\n      const float initializationValue = ${g};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${g});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${l};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${v}; wC += 4) {\n            int xC = xCCorner + wC * ${c};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              getValue(batch, xR, xC + 3 * ${c}, d)\n            );\n\n            ${k}\n          }\n\n          int xC = xCCorner + ${v};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              initializationValue\n            );\n\n            ${k}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class iw{constructor(t,e,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const s=t.filterWidth,i=t.strideDepth,o=t.strideHeight,u=t.strideWidth,c=t.dilationDepth,l=t.dilationHeight,d=t.dilationWidth,h=t.effectiveFilterDepth,p=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,b=t.padInfo.top,g=t.padInfo.left;this.outputShape=t.outShape;const y="avg"===e;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${b}, ${g});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${h};\n              wD += ${c}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${l}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}const v="max";let w=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(w="avgValue / count");const k=4*Math.floor(s/4),O=s%4,I=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${v}(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${b}, ${g});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${c}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${k}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${k};\n            if (${1===O}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===O}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===O}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ow(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e;Sb(a,"avgPool");const{filterSize:s,strides:i,pad:u,dimRoundingMode:c}=r,l=1;o["util"].assert(o["backend_util"].eitherStridesOrDilationsAreOne(i,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);const d=o["backend_util"].computePool2DInfo(a.shape,s,i,l,u,c);if(1===d.filterWidth&&1===d.filterHeight&&o["util"].arraysEqual(d.inShape,d.outShape))return Ix({inputs:{x:a},backend:n});const h=new sw(d,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}const uw={kernelName:o["AvgPool"],backendName:"webgl",kernelFunc:ow};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cw(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{filterSize:s,strides:i,pad:u,dimRoundingMode:c,dataFormat:l}=r,d=[1,1,1],h=o["backend_util"].computePool3DInfo(a.shape,s,i,d,u,c,l),p=new iw(h,"avg",!1);return n.runWebGLProgram(p,[a],"float32")}const lw={kernelName:o["AvgPool3D"],backendName:"webgl",kernelFunc:cw};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dw{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,a=t.strideWidth,s=t.dilationHeight,i=t.dilationWidth,o=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=o-1-t.padInfo.top,l=u-1-t.padInfo.left,d=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${c}, ${l});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class hw{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,a=t.strideDepth,s=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterDepth,d=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=l-1-t.padInfo.front,f=d-1-t.padInfo.top,m=h-1-t.padInfo.left,b=1/(e*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${b});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${l};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${h};\n                wC += ${c}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pw(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,input:s}=e,i=s,{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=r,h=[1,1,1],p=o["backend_util"].computePool3DInfo(i.shape,u,c,h,l,d),f=new hw(p);return n.runWebGLProgram(f,[a],i.dtype)}const fw={kernelName:o["AvgPool3DGrad"],backendName:"webgl",kernelFunc:pw};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mw(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,input:s}=e,i=s;Sb([a,s],"avgPoolGrad");const{filterSize:u,strides:c,pad:l}=r,d=o["backend_util"].computePool2DInfo(i.shape,u,c,1,l),h=new dw(d);return n.runWebGLProgram(h,[a],i.dtype)}const bw={kernelName:o["AvgPoolGrad"],backendName:"webgl",kernelFunc:mw};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gw(t){const{inputs:e,backend:n,attrs:r}=t,{a:a,b:s}=e,{transposeA:i,transposeB:o}=r;return dv({a:a,b:s,transposeA:i,transposeB:o,backend:n})}const yw={kernelName:o["BatchMatMul"],backendName:"webgl",kernelFunc:gw};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xw{constructor(t,e,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],o["backend_util"].assertAndGetBroadcastShape(t,e),o["backend_util"].assertAndGetBroadcastShape(t,n);let i="0.0";null!=r&&(o["backend_util"].assertAndGetBroadcastShape(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="1.0";null!=a&&(o["backend_util"].assertAndGetBroadcastShape(t,a),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${u};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vw{constructor(t,e,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],o["backend_util"].assertAndGetBroadcastShape(t,e),o["backend_util"].assertAndGetBroadcastShape(t,n);let i="vec4(0.0)";null!=r&&(o["backend_util"].assertAndGetBroadcastShape(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="vec4(1.0)";null!=a&&(o["backend_util"].assertAndGetBroadcastShape(t,a),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${u};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ww=({inputs:t,backend:e,attrs:n})=>{const{x:r,mean:a,variance:s,offset:i,scale:u}=t;o["util"].assert(a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),o["util"].assert(null==i||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),o["util"].assert(null==u||a.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:c}=n;null==c&&(c=.001);const l=[r,a,s];let d=null;null!=i&&(d=i.shape,l.push(i));let h=null;null!=u&&(h=u.shape,l.push(u));const p=Object(o["env"])().getBool("WEBGL_PACK_NORMALIZATION")?new vw(r.shape,a.shape,s.shape,d,h,c):new xw(r.shape,a.shape,s.shape,d,h,c),f=e.runWebGLProgram(p,l,l[0].dtype);return f},kw={kernelName:o["FusedBatchNorm"],backendName:"webgl",kernelFunc:ww};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Ow{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=Yg(this.rank),n=`uniform int start[${this.rank}];`,r=Nw(this.rank);let a;const s=t.map((t,e)=>`sourceLoc.${Iw[e]} = start[${e}] + coords.${Iw[e]};`);a=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${s.join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${a}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const Iw=["x","y","z","w","u","v"];function Nw(t){if(1===t)return"sourceLoc";if(t<=6)return Iw.slice(0,t).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sw{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=Yg(this.rank),n=Ry("coords",this.rank),r=Ry("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map((t,e)=>`start[${e}]`).join()});`:t.map((t,e)=>`${r[e]} = ${n[e]} + start[${e}];`).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cw(t,e,n,r){const a=r.texData.get(t.dataId),s=r.makeTensorInfo(n,t.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.complexParentRefCount=0,i.refCount=1,i.shape=n,i.dtype=t.dtype;let u=o["slice_util"].computeFlatOffset(e,o["util"].computeStrides(t.shape));a.slice&&(u+=a.slice.flatOffset),i.slice={flatOffset:u,origDataId:a.slice&&a.slice.origDataId||t.dataId};const c=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,c+1),s}function jw(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{begin:s,size:i}=r,[u,c]=o["slice_util"].parseSliceParams(a,s,i);if(o["slice_util"].assertParamsValid(a,u,c),0===o["util"].sizeFromShape(c))return n.makeTensorInfo(c,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const t=n.texData.get(a.dataId),e=Ny(t.values,u,c,a.shape,a.dtype);return n.makeTensorInfo(c,a.dtype,e)}const{isPacked:l}=n.texData.get(a.dataId),d=o["slice_util"].isSliceContinous(a.shape,u,c);if(l||!d){const t=Object(o["env"])().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Sw(c):new Ow(c),e=t.getCustomSetupFunc(u);return n.runWebGLProgram(t,[a],a.dtype,e)}return n.uploadToGPU(a.dataId),Cw(a,u,c,n)}const Tw={kernelName:o["Slice"],backendName:"webgl",kernelFunc:jw},Ew=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{blockShape:s,crops:i}=r;o["util"].assert(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const u=s.reduce((t,e)=>t*e),c=o["backend_util"].getReshaped(a.shape,s,u),l=o["backend_util"].getPermuted(c.length,s.length),d=o["backend_util"].getReshapedPermuted(a.shape,s,u),h=o["backend_util"].getSliceBeginCoords(i,s.length),p=o["backend_util"].getSliceSize(d,i,s.length),f=[],m=Xx({inputs:{x:a},backend:n,attrs:{shape:c}}),b=uv({inputs:{x:m},backend:n,attrs:{perm:l}}),g=Xx({inputs:{x:b},backend:n,attrs:{shape:d}}),y=jw({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return f.push(m),f.push(b),f.push(g),f.forEach(t=>n.disposeIntermediateTensorInfo(t)),y},Aw={kernelName:o["BatchToSpaceND"],backendName:"webgl",kernelFunc:Ew};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $w(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,weights:s}=e,{size:i}=r,o=n.readSync(a.dataId),u=n.readSync(s.dataId),c=ay(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,c)}const Rw={kernelName:o["Bincount"],backendName:"webgl",kernelFunc:$w},Dw="return float(a != b);",Fw=Px({opSnippet:Dw,dtype:"bool"}),_w={kernelName:o["NotEqual"],backendName:"webgl",kernelFunc:Fw};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Mw(t){const{inputs:e,backend:n}=t,{input:r}=e,a=n.texData.get(r.dataId);return Ix({inputs:{x:a.complexTensorInfos.real},backend:n})}const zw={kernelName:o["Real"],backendName:"webgl",kernelFunc:Mw},Lw="return float(int(x));";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pw(t,e){const n=new Xy(t.shape,Lw),r=e.runWebGLProgram(n,[t],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bw(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return Ix({inputs:{x:a},backend:n});const t=o["zeros"](a.shape),e=Bw({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=Sx({inputs:{real:e,imag:t},backend:n});return t.dispose(),n.disposeIntermediateTensorInfo(e),r}if("complex64"===a.dtype){const t=Mw({inputs:{input:a},backend:n}),e=Bw({inputs:{x:t},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(t),e}if(!o["util"].hasEncodingLoss(a.dtype,s)){const t=Ix({inputs:{x:a},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:s}}if("int32"===s)return Pw(a,n);if("bool"===s){const t=n.makeTensorInfo([],"bool",o["util"].getTypedArrayFromDType("bool",1)),e={a:a,b:t},r=Fw({inputs:e,backend:n});return n.disposeIntermediateTensorInfo(t),r}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}const Ww={kernelName:o["Cast"],backendName:"webgl",kernelFunc:Bw},Vw="return ceil(x);",Uw=Lx({opSnippet:Vw,packedOpSnippet:Vw,cpuKernelImpl:iy}),Gw={kernelName:o["Ceil"],backendName:"webgl",kernelFunc:Uw};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Hw{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qw{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kw(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{clipValueMin:s,clipValueMax:i}=r;let u;u=Object(o["env"])().getBool("WEBGL_PACK_CLIP")?new qw(a.shape):new Hw(a.shape);const c=u.getCustomSetupFunc(s,i);return n.runWebGLProgram(u,[a],a.dtype,c)}const Xw={kernelName:o["ClipByValue"],backendName:"webgl",kernelFunc:Kw};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yw{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zw(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}function Jw(t){const{inputs:e,backend:n}=t,{x:r}=e,a=n.texData.get(r.dataId),s=new Yw(r.shape),i=[Zw(r,a.complexTensorInfos.real),Zw(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}const Qw={kernelName:o["ComplexAbs"],backendName:"webgl",kernelFunc:Jw};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tk{constructor(t){this.outputShape=[],this.outputShape=o["backend_util"].computeOutShape(t,1),this.variableNames=t.map((t,e)=>"T"+e);const e=new Array(t.length-1);e[0]=t[0][1];for(let s=1;s<e.length;s++)e[s]=e[s-1]+t[s][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<e.length;s++){const t=e[s-1];n.push(`else if (yC < ${e[s]}) setOutput(getT${s}(yR, yC-${t}));`)}const r=e.length,a=e[e.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ek{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=o["backend_util"].computeOutShape(t,e);const n=this.outputShape,r=n.length,a=Yg(r),s=Ry("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map((t,e)=>"T"+e);const u=new Array(t.length-1);u[0]=t[0][e];for(let o=1;o<u.length;o++)u[o]=u[o-1]+t[o][e];const c=i[e],l=i.slice(-2),d=i.join();let h=`if (${c} < ${u[0]}) {\n        return getChannel(\n            getT0(${d}), vec2(${l.join()}));\n        }`;for(let o=1;o<u.length;o++){const t=u[o-1];h+=`\n        if (${c} < ${u[o]}  && ${c} >= ${u[o-1]}) {\n          return getChannel(\n            getT${o}(${nk(i,c,t)}),\n            vec2(${nk(l,c,t)}));\n        }`}const p=u.length,f=u[u.length-1];h+=`\n        return getChannel(\n          getT${p}(${nk(i,c,f)}),\n          vec2(${nk(l,c,f)}));`,this.userCode=`\n      float getValue(${i.map(t=>"int "+t)}) {\n        ${h}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}function nk(t,e,n){const r=t.indexOf(e),a=t.map((t,e)=>e===r?`${t} - ${n}`:t);return a.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rk(t){const{inputs:e,backend:n}=t,{input:r}=e,a=n.texData.get(r.dataId);return Ix({inputs:{x:a.complexTensorInfos.imag},backend:n})}const ak={kernelName:o["Imag"],backendName:"webgl",kernelFunc:rk};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sk(t,e,n){const r=t[0].dtype;if("complex64"===r){const r=t.map(t=>Mw({inputs:{input:t},backend:n})),a=t.map(t=>rk({inputs:{input:t},backend:n})),s=sk(r,e,n),i=sk(a,e,n),o=Sx({inputs:{real:s,imag:i},backend:n});return r.forEach(t=>n.disposeIntermediateTensorInfo(t)),a.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}if("string"===r){const{tensors2D:a,outShape:s}=ik(t,e,n),i=a.map(t=>({vals:n.readSync(t.dataId),shape:t.shape})),u=1===a[0].shape[0],c=oy(i,s,r,u),l=o["backend_util"].computeOutShape(t.map(t=>t.shape),e),d=n.makeTensorInfo(l,r,c);return a.forEach(t=>n.disposeIntermediateTensorInfo(t)),d}if(t.length>Object(o["env"])().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(t.length/2),a=sk(t.slice(0,r),e,n),s=sk(t.slice(r),e,n),i=sk([a,s],e,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if(Object(o["env"])().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].shape.length>1){const a=new ek(t.map(t=>t.shape),e);return n.runWebGLProgram(a,t,r)}const{tensors2D:a,outShape:s}=ik(t,e,n),i=new tk(a.map(t=>t.shape)),u=n.runWebGLProgram(i,a,r);a.forEach(t=>n.disposeIntermediateTensorInfo(t));const c=Xx({inputs:{x:u},attrs:{shape:s},backend:n});return n.disposeIntermediateTensorInfo(u),c}function ik(t,e,n){const r=o["backend_util"].computeOutShape(t.map(t=>t.shape),e),a=t.map(t=>Xx({inputs:{x:t},attrs:{shape:[-1,o["util"].sizeFromShape(t.shape.slice(e))]},backend:n}));return{tensors2D:a,outShape:r}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ok(t){const{inputs:e,backend:n,attrs:r}=t,{axis:a}=r,s=o["util"].parseAxisParam(a,e[0].shape)[0],i=o["backend_util"].computeOutShape(e.map(t=>t.shape),s);if(0===o["util"].sizeFromShape(i))return n.makeTensorInfo(i,e[0].dtype,[]);const u=e.filter(t=>o["util"].sizeFromShape(t.shape)>0);if(1===u.length)return Ix({inputs:{x:u[0]},backend:n});const c=u.map(t=>t.shape);return o["backend_util"].assertParamsConsistent(c,s),sk(u,s,n)}const uk={kernelName:o["Concat"],backendName:"webgl",kernelFunc:ok};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ck{constructor(t,e=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.padInfo.top,i=t.padInfo.left,o=t.strideHeight,u=t.strideWidth,c=t.dilationHeight,l=t.dilationWidth,d=t.filterHeight,h=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4,m="channelsLast"===t.dataFormat,b=m?1:2,g=m?2:3,y=m?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${b}], coords[${g}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${l};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class lk{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,a=t.strideDepth,s=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,l=t.filterDepth,d=t.filterHeight,h=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${e}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${l}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h}; wC++) {\n              int xC = xCCorner + wC * ${c};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dk{constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:r,inChannels:a,strideWidth:s,strideHeight:i,padInfo:o,outWidth:u,dilationWidth:c,dilationHeight:l,dataFormat:d}=n,{left:h,top:p}=o,f=a*r,m=jb(),b="channelsLast"===d,g=b?0:1,y=b?1:2;let x="";for(let v=0;v<=1;v++)for(let n=0;n<=1;n++)x+=`\n          blockIndex = rc.y + ${n};\n          pos = rc.x + ${v};\n\n          if(blockIndex < ${t[1]} && pos < ${t[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${i} - ${p};\n            d0 = offsetY + ${l} * (pos / ${f});\n\n            if(d0 < ${e[g]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${s}. - ${h}.);\n              d1 = offsetX + ${c} * (int(mod(float(pos), ${f}.) / ${a}.));\n\n              if(d1 < ${e[y]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${a}.));\n\n                if (${b}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*v+n}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*v+n}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hk({x:t,filter:e,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:u=null}){const c=t.shape,l=r.texData.get(t.dataId),d=n.inChannels,h=c[0]*c[1]*c[2],p=n.outChannels,f="channelsLast"===n.dataFormat,m=!1,b=!1;let g;const y=[],x=(1===h||1===p)&&d>lv,v=c[2]%2!==0&&!!l.isPacked;if(!x&&Object(o["env"])().getBool("WEBGL_LAZILY_UNPACK")&&Object(o["env"])().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&v){const d=f?c[0]*c[1]*(c[2]+1):c[0]*c[2]*(c[3]+1),h={dataId:t.dataId,shape:[1,d,n.inChannels],dtype:t.dtype},p=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,o["util"].assert(pb(l.shape,h.shape),()=>`packed reshape ${l.shape} to ${h.shape} isn't free`);const x=Xx({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(x);const v=dv({a:h,b:x,backend:r,transposeA:m,transposeB:b,bias:a,activation:u,preluActivationWeights:s,leakyreluAlpha:i}),w=r.texData.get(v.dataId);o["util"].assert(w.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=p,w.shape=n.outShape,g=Ix({inputs:{x:v},backend:r}),g.shape=n.outShape,y.push(v)}else{const o=f?c[0]*c[1]*c[2]:c[0]*c[2]*c[3],l=Xx({inputs:{x:t},backend:r,attrs:{shape:[1,o,n.inChannels]}}),d=Xx({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=dv({a:l,b:d,transposeA:m,transposeB:b,backend:r,bias:a,activation:u,preluActivationWeights:s,leakyreluAlpha:i});g=Xx({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),y.push(l),y.push(d),y.push(h)}for(const o of y)r.disposeIntermediateTensorInfo(o);return g}function pk({x:t,filter:e,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:u=null}){const{filterWidth:c,filterHeight:l,inChannels:d,outWidth:h,outHeight:p,dataFormat:f}=n,m="channelsLast"===f,b=c*l*d,g=p*h,y=[b,g],x=!0,v=!1,w=[],k=Xx({inputs:{x:t},backend:r,attrs:{shape:t.shape.slice(1)}}),O=Xx({inputs:{x:e},backend:r,attrs:{shape:[1,b,o["util"].sizeFromShape(e.shape)/b]}});w.push(k),w.push(O);const I=new dk(y,k.shape,n),N=r.runWebGLProgram(I,[k],"float32"),S=Xx({inputs:{x:N},backend:r,attrs:{shape:[1,y[0],y[1]]}});w.push(N),w.push(S);const C=null!=a,j=null!=s,T="leakyrelu"===u,E=u?Bx(u,!0):null,A=new Wx(S.shape,O.shape,[1,g,n.outChannels],x,v,C,E,j,T),$=[S,O];if(a&&$.push(a),j&&$.push(s),T){const t=r.makeTensorInfo([],"float32",o["util"].createScalarValue(i,"float32"));$.push(t),w.push(t)}const R=r.runWebGLProgram(A,$,"float32"),D=m?[1,p,h,n.outChannels]:[1,n.outChannels,p,h],F=Xx({inputs:{x:R},backend:r,attrs:{shape:D}});w.push(R);for(const o of w)r.disposeIntermediateTensorInfo(o);return F}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fk(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s}=e,{strides:i,pad:u,dataFormat:c,dilations:l,dimRoundingMode:d}=r,h=o["backend_util"].convertConv2DDataFormat(c),p=o["backend_util"].computeConv2DInfo(a.shape,s.shape,i,l,u,d,!1,h);let f;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(Object(o["env"])().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])f=pk({x:a,filter:s,convInfo:p,backend:n});else{const t=new ck(p);f=n.runWebGLProgram(t,[a,s],"float32")}else f=hk({x:a,filter:s,convInfo:p,backend:n});const m=Xx({inputs:{x:f},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(f),m}const mk={kernelName:o["Conv2D"],backendName:"webgl",kernelFunc:fk};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bk{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,a=t.padInfo.left,s="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class gk{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,a=t.strideWidth,s="channelsLast"===t.dataFormat,i=e-1-t.padInfo.top,o=n-1-t.padInfo.left,u=s?1:2,c=s?2:3,l=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${l}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class yk{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,a=t.padInfo.front,s=t.padInfo.top,i=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${a};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class xk{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,a=t.strideDepth,s=t.strideHeight,i=t.strideWidth,o=e-1-t.padInfo.front,u=n-1-t.padInfo.top,c=r-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${c});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vk(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,dy:s}=e,{strides:i,pad:u,dataFormat:c,dimRoundingMode:l,filterShape:d}=r,h=o["backend_util"].convertConv2DDataFormat(c),p=o["backend_util"].computeConv2DInfo(a.shape,d,i,1,u,l,!1,h),f=new bk(p);return n.runWebGLProgram(f,[a,s],"float32")}const wk={kernelName:o["Conv2DBackpropFilter"],backendName:"webgl",kernelFunc:vk};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kk(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,filter:s}=e,{inputShape:i,strides:u,pad:c,dataFormat:l,dimRoundingMode:d}=r,h=o["backend_util"].convertConv2DDataFormat(l),p=o["backend_util"].computeConv2DInfo(i,s.shape,u,1,c,d,!1,h),f=new gk(p);return n.runWebGLProgram(f,[a,s],"float32")}const Ok={kernelName:o["Conv2DBackpropInput"],backendName:"webgl",kernelFunc:kk};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ik(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s}=e,{strides:i,pad:u,dilations:c}=r,l=o["backend_util"].computeConv3DInfo(a.shape,s.shape,i,c,u),d=new lk(l);return n.runWebGLProgram(d,[a,s],"float32")}const Nk={kernelName:o["Conv3D"],backendName:"webgl",kernelFunc:Ik};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sk(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,dy:s}=e,{strides:i,pad:u,filterShape:c}=r,l=o["backend_util"].computeConv3DInfo(a.shape,c,i,1,u),d=new yk(l);return n.runWebGLProgram(d,[a,s],"float32")}const Ck={kernelName:o["Conv3DBackpropFilterV2"],backendName:"webgl",kernelFunc:Sk};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jk(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,filter:s}=e,{pad:i,strides:u,inputShape:c}=r,l=o["backend_util"].computeConv3DInfo(c,s.shape,u,1,i),d=new xk(l);return n.runWebGLProgram(d,[a,s],"float32")}const Tk={kernelName:o["Conv3DBackpropInputV2"],backendName:"webgl",kernelFunc:jk},Ek=_x+"\n  return cos(x);\n",Ak=Lx({opSnippet:Ek}),$k={kernelName:o["Cos"],backendName:"webgl",kernelFunc:Ak},Rk="\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n",Dk=Lx({opSnippet:Rk}),Fk={kernelName:o["Cosh"],backendName:"webgl",kernelFunc:Dk};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class _k{constructor(t,e,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,u]=t,[c]=e,[l,d]=n;this.outputShape=[c,l,d,u];const h="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,b,g]=l>1?[""+(i-1)/(l-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+p],[y,x,v]=d>1?[""+(o-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+f];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${b};\n        float width_scale = ${x};\n\n        float in_y = ${g};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${h} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mk=t=>{const{inputs:e,backend:n,attrs:r}=t,{image:a,boxes:s,boxInd:i}=e,{cropSize:o,method:u,extrapolationValue:c}=r,l=new _k(a.shape,s.shape,o,u,c);return n.runWebGLProgram(l,[a,s,i],"float32")},zk={kernelName:o["CropAndResize"],backendName:"webgl",kernelFunc:Mk};class Lk{constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const r=t.length,a=e?"0.0":`getX(${Pk(r,"coords")})`,s=t[t.length-1];let i="",o="";e?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?"end + pow2 < "+s:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${Yg(r)} coords = getOutputCoords();\n        int end = ${Bk(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${Bk(r,"coords")} = idx;\n          val += getX(${Pk(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.index&&(this.index=e.getUniformLocation(n,"index")),e.gl.uniform1f(this.index,t)}}}function Pk(t,e){if(1===t)return""+e;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}function Bk(t,e){if(1===t)return""+e;if(2===t)return e+".y";if(3===t)return e+".z";if(4===t)return e+".w";throw Error(`Cumulative sum for rank ${t} is not yet supported`)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wk(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s,exclusive:i,reverse:u}=r,c=a.shape.length,l=o["backend_util"].getAxesPermutation([s],c);let d=a;null!=l&&(d=uv({inputs:{x:a},backend:n,attrs:{perm:l}}));const h=o["backend_util"].getInnerMostAxes(1,c)[0];if(h!==c-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=`+s);const p=a.shape[h];let f=Ix({inputs:{x:d},backend:n});for(let o=0;o<=Math.ceil(Math.log2(p))-1;o++){const t=new Lk(d.shape,!1,u),e=t.getCustomSetupFunc(o),r=f;f=n.runWebGLProgram(t,[f],f.dtype,e),n.disposeIntermediateTensorInfo(r)}if(i){const t=new Lk(d.shape,i,u),e=f;f=n.runWebGLProgram(t,[f],f.dtype),n.disposeIntermediateTensorInfo(e)}if(null!=l){const t=o["backend_util"].getUndoAxesPermutation(l),e=uv({inputs:{x:f},backend:n,attrs:{perm:t}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(d),e}return f}const Vk={kernelName:o["Cumsum"],backendName:"webgl",kernelFunc:Wk};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uk(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,weights:s}=e,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const t=n.readSync(a.dataId),e=n.readSync(s.dataId),r=ay(t,e,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const t=n.bufferSync(a),e=n.bufferSync(s),r=sy(t,e,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+a.shape.length+".")}const Gk={kernelName:o["DenseBincount"],backendName:"webgl",kernelFunc:Uk};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hk{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qk(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{blockSize:s,dataFormat:i}=r;o["util"].assert(s>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+s);const u=a.shape[0],c="NHWC"===i?a.shape[1]:a.shape[2],l="NHWC"===i?a.shape[2]:a.shape[3],d="NHWC"===i?a.shape[3]:a.shape[1],h=c*s,p=l*s,f=d/(s*s),m="NHWC"===i?[u,h,p,f]:[u,f,h,p],b=new Hk(m,s,i);return n.runWebGLProgram(b,[a],a.dtype)}const Kk={kernelName:o["DepthToSpace"],backendName:"webgl",kernelFunc:qk};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xk{constructor(t,e=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.inHeight,i=t.inWidth,o=t.padInfo.top,u=t.padInfo.left,c=t.strideHeight,l=t.strideWidth,d=t.dilationHeight,h=t.dilationWidth,p=t.filterHeight,f=t.filterWidth,m=t.outChannels/t.inChannels;let b="",g="";n&&(b=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,g="result = activation(result);");const y=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${c}, ${l});\n      const ivec2 pads = ivec2(${o}, ${u});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${d};\n\n          if (xR < 0 || xR >= ${s}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${g}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yk{constructor(t,e=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const s=t.inHeight,i=t.inWidth,u=t.padInfo.top,c=t.padInfo.left,l=t.strideHeight,d=t.strideWidth,h=t.dilationHeight,p=t.dilationWidth,f=t.filterHeight,m=t.filterWidth,b=m;let g="int xR; int xC; int xCOffset;";for(let o=0;o<f;o++)for(let t=0;t<m;t++)g+=`\n          vec4 xTexelR${o}C${2*t} = vec4(0.);\n          vec4 wR${o}C${t} = vec4(0.);\n          vec4 xR${o}C${t} = vec4(0.);`;for(let w=0;w<f;w++)for(let t=0;t<b;t++){const e=2*t;if(g+=`\n          xR = xRCorner + ${w*h};\n          xC = xCCorner + ${e*p};\n        `,1===d){if(e<m&&(g+=c%2===1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${w}C${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    xTexelR${w}C${e}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${w}C${e} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${i}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${w}C${e} = vec4(previous.zw, xTexelR${w}C${e}.xy);\n                } else {\n                  xR${w}C${e} = vec4(0, 0, xTexelR${w}C${e}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${s} && xC >= 0 && xC < ${i}) {\n                  xTexelR${w}C${e} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${w}C${e} = vec4(0.);\n                }\n\n                xR${w}C${e} = xTexelR${w}C${e};\n              `,e+1<m)){const t=c%2===0?o["util"].nearestLargerEven(p):p;p%2===0&&c%2===1||p%2!==0&&c%2!==1?(g+=`\n                  xCOffset = xC + ${c%2} + ${t};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${w}C${e+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,p>1&&(g+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${s} &&\n                      xCOffset >= 0 && xCOffset < ${i}) {\n                      xTexelR${w}C${e} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${w}C${e} = vec4(0.);\n                    }\n                  `),g+=`\n                  xR${w}C${e+1} = vec4(\n                    xTexelR${w}C${e}.zw, xTexelR${w}C${e+2}.xy);\n                `):g+=`\n                  xCOffset = xC + ${t};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${w}C${e+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${w}C${e+1} = xTexelR${w}C${e+2};\n                `}}else e<m&&(g+=`\n              if(xR >= 0 && xR < ${s}) {\n            `,c%2===1?(g+=`\n                xCOffset = xC + 1 - ${d};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${w}C${e} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${w}C${e} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${i}) {\n                  xTexelR${w}C${e+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${w}C${e+2} = vec4(0.);\n                }\n\n                xR${w}C${e} = vec4(\n                  xTexelR${w}C${e}.zw, xTexelR${w}C${e+2}.zw);\n              `,e+1<m&&(g+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${d};\n                  if(xCOffset >= 0 && xCOffset < ${i}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${w}C${e+1} = vec4(xTexelR${w}C${e+2}.xy, final.xy);\n                `)):(g+=`\n                if(xC >= 0 && xC < ${i}) {\n                  xTexelR${w}C${e} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${w}C${e} = vec4(0.);\n                }\n\n                xCOffset = xC + ${d};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${w}C${e+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${w}C${e+2} = vec4(0.);\n                }\n\n                xR${w}C${e} = vec4(\n                  xTexelR${w}C${e}.xy, xTexelR${w}C${e+2}.xy);\n              `,e+1<m&&(g+=`\n                  xR${w}C${e+1} = vec4(\n                    xTexelR${w}C${e}.zw, xTexelR${w}C${e+2}.zw);\n                `)),g+="}");e<m&&(g+=`\n            vec4 wTexelR${w}C${e} = getW(${w}, ${e}, d1, q);\n            wR${w}C${e} = vec4(wTexelR${w}C${e}.xz, wTexelR${w}C${e}.xz);\n          `,e+1<m&&(g+=`\n              vec4 wTexelR${w}C${e+1} = getW(${w}, ${e+1}, d1, q);\n              wR${w}C${e+1} =\n                vec4(wTexelR${w}C${e+1}.xz, wTexelR${w}C${e+1}.xz);`))}for(let o=0;o<f;o++)for(let t=0;t<m;t++)g+=`dotProd += xR${o}C${t} * wR${o}C${t};`;let y="",x="";n&&(y=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,x="result = activation(result);");const v=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${l}, ${d});\n      const ivec2 pads = ivec2(${u}, ${c});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${g}\n\n        vec4 result = dotProd;\n        ${v}\n        ${x}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zk(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s}=e,{strides:i,pad:u,dilations:c,dimRoundingMode:l}=r;let d=c;null==d&&(d=[1,1]),o["util"].assert(o["backend_util"].eitherStridesOrDilationsAreOne(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);const h=o["backend_util"].computeConv2DInfo(a.shape,s.shape,i,d,u,l,!0);let p;return p=Object(o["env"])().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new Yk(h):new Xk(h),n.runWebGLProgram(p,[a,s],"float32")}const Jk={kernelName:o["DepthwiseConv2dNative"],backendName:"webgl",kernelFunc:Zk};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qk{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,a=t.padInfo.left,s=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class tO{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,a=t.strideWidth,s=e-1-t.padInfo.top,i=n-1-t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eO(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,dy:s}=e,{strides:i,dilations:u,pad:c,dimRoundingMode:l,filterShape:d}=r,h=o["backend_util"].computeConv2DInfo(a.shape,d,i,u,c,l,!0),p=new Qk(h);return n.runWebGLProgram(p,[a,s],"float32")}const nO={kernelName:o["DepthwiseConv2dNativeBackpropFilter"],backendName:"webgl",kernelFunc:eO};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rO(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,filter:s}=e,{strides:i,dilations:u,pad:c,dimRoundingMode:l,inputShape:d}=r,h=o["backend_util"].computeConv2DInfo(d,s.shape,i,u,c,l,!0),p=new tO(h);return n.runWebGLProgram(p,[a,s],"float32")}const aO={kernelName:o["DepthwiseConv2dNativeBackpropInput"],backendName:"webgl",kernelFunc:rO};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sO{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iO(t){const{inputs:e,backend:n}=t,{x:r}=e,a=[...r.shape,...r.shape],s=o["util"].sizeFromShape(r.shape),i=Xx({inputs:{x:r},backend:n,attrs:{shape:[s]}}),u=new sO(s),c=n.runWebGLProgram(u,[i],i.dtype),l=Xx({inputs:{x:c},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),l}const oO={kernelName:o["Diag"],backendName:"webgl",kernelFunc:iO};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uO{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:c}=t,{top:l,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${l}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${e}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${c};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cO(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s}=e,{strides:i,pad:u,dilations:c}=r,l=o["backend_util"].computeDilation2DInfo(a.shape,s.shape,i,u,"NHWC",c);let d;const h=new uO(l);d=n.runWebGLProgram(h,[a,s],"float32");const p=Xx({inputs:{x:d},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(d),p}const lO={kernelName:o["Dilation2D"],backendName:"webgl",kernelFunc:cO},dO="return (x >= 0.0) ? x : (exp(x) - 1.0);",hO="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",pO=Lx({opSnippet:dO,packedOpSnippet:hO}),fO={kernelName:o["Elu"],backendName:"webgl",kernelFunc:pO},mO="return (b >= 1.0) ? a : a * (b + 1.0);",bO="\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",gO=t=>{const{inputs:e,backend:n}=t,{dy:r,y:a}=e,s=Object(o["env"])().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ox(bO,r.shape,a.shape):new wx(mO,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)},yO={kernelName:o["EluGrad"],backendName:"webgl",kernelFunc:gO},xO="\n  return vec4(equal(a, b));\n",vO="return float(a == b);",wO=Px({opSnippet:vO,packedOpSnippet:xO,dtype:"bool"}),kO={kernelName:o["Equal"],backendName:"webgl",kernelFunc:wO},OO=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${o["backend_util"].ERF_P};\n  float a1 = ${o["backend_util"].ERF_A1};\n  float a2 = ${o["backend_util"].ERF_A2};\n  float a3 = ${o["backend_util"].ERF_A3};\n  float a4 = ${o["backend_util"].ERF_A4};\n  float a5 = ${o["backend_util"].ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,IO=Lx({opSnippet:OO}),NO={kernelName:o["Erf"],backendName:"webgl",kernelFunc:IO},SO="return exp(x);",CO=Lx({opSnippet:SO,packedOpSnippet:SO,cpuKernelImpl:uy}),jO={kernelName:o["Exp"],backendName:"webgl",kernelFunc:CO};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function TO(t){const{inputs:e,attrs:n,backend:r}=t,{dim:a}=n,{input:s}=e,i=s.shape.length,u=s.shape.slice();let c=a;return a<0&&(o["util"].assert(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),c=i+a+1),u.splice(c,0,1),Xx({inputs:{x:s},backend:r,attrs:{shape:u}})}const EO={kernelName:o["ExpandDims"],backendName:"webgl",kernelFunc:TO},AO="return exp(x) - 1.0;",$O=Lx({opSnippet:AO,packedOpSnippet:AO,cpuKernelImpl:cy}),RO={kernelName:o["Expm1"],backendName:"webgl",kernelFunc:$O};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class DO{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const a=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,s=n?r+".0":"1.0";let i;if("real"===t)i="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FO(t,e,n){const r=n.texData.get(t.dataId),a=o["util"].sizeFromShape(t.shape),s=t.shape[t.shape.length-1],i=a/s,u=Xx({inputs:{x:t},backend:n,attrs:{shape:[i,s]}}),c=u.shape,l=new DO("real",c,e),d=new DO("imag",c,e),h=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:c},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:c}],p=n.runWebGLProgram(l,h,"float32"),f=n.runWebGLProgram(d,h,"float32"),m=Sx({inputs:{real:p,imag:f},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f);const b=Xx({inputs:{x:m},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(m),b}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _O(t){const{inputs:e,backend:n}=t,{input:r}=e;return FO(r,!1,n)}const MO={kernelName:o["FFT"],backendName:"webgl",kernelFunc:_O};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zO{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LO(t){const{backend:e,attrs:n}=t,{shape:r,value:a}=n;let{dtype:s}=n;if(s=s||o["util"].inferDtype(a),"string"===s){const t=o["util"].getArrayFromDType(s,o["util"].sizeFromShape(r));return t.fill(a),e.makeTensorInfo(r,s,t)}{const t=new zO(r,a),n=t.getCustomSetupFunc(a);return e.runWebGLProgram(t,[],s,n)}}const PO={kernelName:o["Fill"],backendName:"webgl",kernelFunc:LO};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BO{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WO={kernelName:o["FlipLeftRight"],backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,r=e,a=new BO(n.shape),s=r.runWebGLProgram(a,[n],n.dtype);return s}},VO="return floor(x);",UO=Lx({opSnippet:VO,packedOpSnippet:VO,cpuKernelImpl:ly}),GO={kernelName:o["Floor"],backendName:"webgl",kernelFunc:UO},HO="\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",qO="\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",KO=Px({opSnippet:HO,packedOpSnippet:qO,dtype:"int32"}),XO={kernelName:o["FloorDiv"],backendName:"webgl",kernelFunc:KO};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class YO{constructor(t){this.variableNames=["A"];const e=jb(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZO{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=jb(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JO={kernelName:o["FromPixels"],backendName:"webgl",kernelFunc:tI};let QO;function tI(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:a}=e;const{numChannels:s}=r,i="undefined"!==typeof HTMLVideoElement&&a instanceof HTMLVideoElement,u="undefined"!==typeof HTMLImageElement&&a instanceof HTMLImageElement,c="undefined"!==typeof ImageBitmap&&a instanceof ImageBitmap,[l,d]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],h=[d,l],p=[d,l,s];(u||i||c)&&(null==QO&&(QO=document.createElement("canvas").getContext("2d")),QO.canvas.width=l,QO.canvas.height=d,QO.drawImage(a,0,0,l,d),a=QO.canvas);const f=n.makeTensorInfo(h,"int32");n.texData.get(f.dataId).usage=Im.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(f.dataId),a);const m=Object(o["env"])().getBool("WEBGL_PACK")?new ZO(p):new YO(p),b=n.runWebGLProgram(m,[f],"int32");return n.disposeData(f.dataId),b}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eI(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s,bias:i,preluActivationWeights:u}=e,{strides:c,pad:l,dataFormat:d,dilations:h,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=r,b=o["backend_util"].convertConv2DDataFormat(d),g=o["backend_util"].computeConv2DInfo(a.shape,s.shape,c,h,l,p,!1,b);let y;const x=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(Object(o["env"])().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])y=pk({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:f,preluActivationWeights:u,leakyreluAlpha:m});else{const t=null!=i,e=null!=u,r="leakyrelu"===f,c=f?Bx(f,!1):null,l=new ck(g,t,c,e,r),d=[a,s];if(i&&d.push(i),u&&d.push(u),r){const t=n.makeTensorInfo([],"float32",o["util"].createScalarValue(m,"float32"));d.push(t),x.push(t)}y=n.runWebGLProgram(l,d,"float32")}else y=hk({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:f,preluActivationWeights:u,leakyreluAlpha:m});const v=Xx({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return x.push(y),x.forEach(t=>n.disposeIntermediateTensorInfo(t)),v}const nI={kernelName:o["FusedConv2D"],backendName:"webgl",kernelFunc:eI};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rI(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s,bias:i,preluActivationWeights:u}=e,{strides:c,pad:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r,m=[];let b=d;null==b&&(b=[1,1]),o["util"].assert(o["backend_util"].eitherStridesOrDilationsAreOne(c,b),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${b}'`);const g=o["backend_util"].computeConv2DInfo(a.shape,s.shape,c,b,l,h,!0),y=Object(o["env"])().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,x=p?Bx(p,y):null,v=[a,s],w=null!=i,k=null!=u,O="leakyrelu"===p;if(w&&v.push(i),k&&v.push(u),O){const t=n.makeTensorInfo([],"float32",o["util"].createScalarValue(f,"float32"));v.push(t),m.push(t)}let I;I=y?new Yk(g,w,x,k,O):new Xk(g,w,x,k,O);const N=n.runWebGLProgram(I,v,"float32");return m.forEach(t=>n.disposeIntermediateTensorInfo(t)),N}const aI={kernelName:o["FusedDepthwiseConv2D"],backendName:"webgl",kernelFunc:rI};class sI{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const r=Yg(e.length),a=Yg(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iI(t){const{inputs:e,backend:n}=t,{params:r,indices:a}=e,s=a.shape,i=s[s.length-1],[u,c,l,d]=o["backend_util"].prepareAndValidate(r,a),h=Xx({inputs:{x:a},backend:n,attrs:{shape:[c,i]}}),p=Xx({inputs:{x:r},backend:n,attrs:{shape:[o["util"].sizeFromShape(r.shape)/l,l]}}),f=new sI(i,d,[c,l]),m=n.runWebGLProgram(f,[p,h],p.dtype),b=Xx({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),b}const oI={kernelName:o["GatherNd"],backendName:"webgl",kernelFunc:iI};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uI{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const n=Yg(this.rank),r=cI(t,2);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function cI(t,e){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let a=0;a<t.length;a++)2===a?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(""+n[a]);return r.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lI(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,indices:s}=e,{axis:i,batchDims:u}=r,c=o["util"].parseAxisParam(i,a.shape)[0],l=o["backend_util"].segment_util.collectGatherOpShapeInfo(a,s,c,u),d=o["util"].sizeFromShape(s.shape),h=[],p=Xx({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),f=Xx({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,d/l.batchSize]}});h.push(p),h.push(f);const m=[l.batchSize,l.outerSize,d/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const t=n.bufferSync(f),e=n.bufferSync(p),r=dy(e,t,m);return h.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const b=new uI(p.shape,m),g=n.runWebGLProgram(b,[p,f],p.dtype);h.push(g);const y=Xx({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return h.forEach(t=>n.disposeIntermediateTensorInfo(t)),y}const dI={kernelName:o["GatherV2"],backendName:"webgl",kernelFunc:lI},hI="return float(a > b);",pI="\n  return vec4(greaterThan(a, b));\n",fI=Px({opSnippet:hI,packedOpSnippet:pI,cpuKernelImpl:hy,dtype:"bool"}),mI={kernelName:o["Greater"],backendName:"webgl",kernelFunc:fI},bI="return float(a >= b);",gI="\n  return vec4(greaterThanEqual(a, b));\n",yI=Px({opSnippet:bI,packedOpSnippet:gI,dtype:"bool"}),xI={kernelName:o["GreaterEqual"],backendName:"webgl",kernelFunc:yI};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vI(t){const{inputs:e,backend:n}=t,{input:r}=e;return FO(r,!0,n)}const wI={kernelName:o["IFFT"],backendName:"webgl",kernelFunc:vI},kI="return float(!isnan(x) && !isinf(x));",OI=Lx({opSnippet:kI,dtype:"bool"}),II={kernelName:o["IsFinite"],backendName:"webgl",kernelFunc:OI},NI="return float(isinf(x));",SI=Lx({opSnippet:NI,dtype:"bool"}),CI={kernelName:o["IsInf"],backendName:"webgl",kernelFunc:SI},jI="return float(isnan(x));",TI=Lx({opSnippet:jI,dtype:"bool"}),EI={kernelName:o["IsNan"],backendName:"webgl",kernelFunc:TI},AI="return float(a < b);",$I="\n  return vec4(lessThan(a, b));\n",RI=Px({opSnippet:AI,packedOpSnippet:$I,cpuKernelImpl:py,dtype:"bool"}),DI={kernelName:o["Less"],backendName:"webgl",kernelFunc:RI},FI="return float(a <= b);",_I="\n  return vec4(lessThanEqual(a, b));\n",MI=Px({opSnippet:FI,packedOpSnippet:_I,dtype:"bool"}),zI={kernelName:o["LessEqual"],backendName:"webgl",kernelFunc:MI};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function LI(t){const{backend:e,attrs:n}=t,{start:r,stop:a,num:s}=n,i=fy(r,a,s);return e.makeTensorInfo([i.length],"float32",i)}const PI={kernelName:o["LinSpace"],backendName:"webgl",kernelFunc:LI},BI="if (x < 0.0) return NAN;\n  return log(x);",WI="\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",VI=Lx({opSnippet:BI,packedOpSnippet:WI,cpuKernelImpl:my}),UI={kernelName:o["Log"],backendName:"webgl",kernelFunc:VI},GI="return log(1.0 + x);",HI=Lx({opSnippet:GI}),qI={kernelName:o["Log1p"],backendName:"webgl",kernelFunc:HI},KI="return float(a >= 1.0 && b >= 1.0);",XI="\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",YI=Px({opSnippet:KI,packedOpSnippet:XI,dtype:"bool"}),ZI={kernelName:o["LogicalAnd"],backendName:"webgl",kernelFunc:YI},JI="return float(!(x >= 1.0));",QI=Lx({opSnippet:JI}),tN={kernelName:o["LogicalNot"],backendName:"webgl",kernelFunc:QI},eN="return float(a >= 1.0 || b >= 1.0);",nN="\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",rN=Px({opSnippet:eN,packedOpSnippet:nN,dtype:"bool"}),aN={kernelName:o["LogicalOr"],backendName:"webgl",kernelFunc:rN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class sN{constructor(t,e,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=e,i=t[3]-1;let o;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iN{constructor(t,e,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=e,i=t[3]-1;let o;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oN=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{depthRadius:s,bias:i,alpha:u,beta:c}=r,l=Object(o["env"])().getBool("WEBGL_PACK_NORMALIZATION")?new iN(a.shape,s,i,u,c):new sN(a.shape,s,i,u,c);return n.runWebGLProgram(l,[a],a.dtype)},uN={kernelName:o["LRN"],backendName:"webgl",kernelFunc:oN};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class cN{constructor(t,e,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lN=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:a,y:s,dy:i}=e,{depthRadius:o,bias:u,alpha:c,beta:l}=r,d=new cN(a.shape,o,u,c,l);return n.runWebGLProgram(d,[a,s,i],a.dtype)},dN={kernelName:o["LRNGrad"],backendName:"webgl",kernelFunc:lN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hN(t,e,n,r){const a=o["util"].sizeFromShape(e),s=o["util"].sizeFromShape(t.shape),i=s/a,u=Xx({inputs:{x:t},attrs:{shape:[i,a]},backend:r}),c=tv(u,t.dtype,"max",r),l=Xx({inputs:{x:c},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(u),r.disposeIntermediateTensorInfo(c),l}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pN(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{reductionIndices:s,keepDims:i}=r,u=a.shape.length,c=o["util"].parseAxisParam(s,a.shape);let l=c;const d=o["backend_util"].getAxesPermutation(l,u),h=null!=d,p=n.shouldExecuteOnCPU([a]);let f=a;if(h){if(p){const t=n.texData.get(f.dataId),e=t.values,r=new Array(u);for(let n=0;n<r.length;n++)r[n]=a.shape[d[n]];const s=Ey(e,a.shape,a.dtype,d,r);f=n.makeTensorInfo(r,a.dtype);const i=n.texData.get(f.dataId);i.values=s}else f=av(a,d,n);l=o["backend_util"].getInnerMostAxes(l.length,u)}o["backend_util"].assertAxesAreInnerMostDims("max",l,u);const[m,b]=o["backend_util"].computeOutAndReduceShapes(f.shape,l);let g,y=m;if(i&&(y=o["backend_util"].expandShapeToKeepDim(m,c)),p){const t=n.texData.get(f.dataId),e=t.values,r=by(e,o["util"].sizeFromShape(b),y,a.dtype);g=n.makeTensorInfo(y,a.dtype);const s=n.texData.get(g.dataId);s.values=r}else g=hN(f,b,y,n);return h&&n.disposeIntermediateTensorInfo(f),g}const fN={kernelName:o["Max"],backendName:"webgl",kernelFunc:pN},mN=vx+"\n  return max(a, b);\n",bN="\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+kx+"\n  return result;\n",gN=Px({opSnippet:mN,packedOpSnippet:bN,cpuKernelImpl:gy}),yN={kernelName:o["Maximum"],backendName:"webgl",kernelFunc:gN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xN(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e;Sb(a,"maxPool");const{filterSize:s,strides:i,pad:u,dimRoundingMode:c}=r,l=1;o["util"].assert(o["backend_util"].eitherStridesOrDilationsAreOne(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);const d=o["backend_util"].computePool2DInfo(a.shape,s,i,l,u,c);if(1===d.filterWidth&&1===d.filterHeight&&o["util"].arraysEqual(d.inShape,d.outShape))return Ix({inputs:{x:a},backend:n});const h=new sw(d,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}const vN={kernelName:o["MaxPool"],backendName:"webgl",kernelFunc:xN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wN(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{filterSize:s,strides:i,pad:u,dataFormat:c,dimRoundingMode:l}=r,d=[1,1,1],h=o["backend_util"].computePool3DInfo(a.shape,s,i,d,u,l,c),p=new iw(h,"max",!1);return n.runWebGLProgram(p,[a],a.dtype)}const kN={kernelName:o["MaxPool3D"],backendName:"webgl",kernelFunc:wN};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ON{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,a=t.effectiveFilterHeight,s=t.effectiveFilterWidth,i=a-1-t.padInfo.top,o=s-1-t.padInfo.left,u=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class IN{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,a=t.dilationDepth,s=t.dilationHeight,i=t.dilationWidth,o=t.effectiveFilterDepth,u=t.effectiveFilterHeight,c=t.effectiveFilterWidth,l=o-1-t.padInfo.front,d=u-1-t.padInfo.top,h=c-1-t.padInfo.left,p=o*u*c-1;this.userCode=`\n      const ivec3 pads = ivec3(${l}, ${d}, ${h});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${c};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${c} +\n                  wR * ${c} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NN(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,input:s}=e,i=s,{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=r,h=[1,1,1],p=o["backend_util"].computePool3DInfo(i.shape,u,c,h,l,d),f=new iw(p,"max",!0),m=n.runWebGLProgram(f,[i],i.dtype),b=new IN(p),g=n.runWebGLProgram(b,[a,m],i.dtype);return n.disposeIntermediateTensorInfo(m),g}const SN={kernelName:o["MaxPool3DGrad"],backendName:"webgl",kernelFunc:NN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CN(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,input:s,output:i}=e,u=s;Sb([s,i],"maxPoolGrad");const{filterSize:c,strides:l,pad:d,dimRoundingMode:h}=r,p=o["backend_util"].computePool2DInfo(u.shape,c,l,1,d,h),f=!0,m=new sw(p,"max",f),b=n.runWebGLProgram(m,[u],u.dtype),g=new ON(p),y=n.runWebGLProgram(g,[a,b],u.dtype);return n.disposeIntermediateTensorInfo(b),y}const jN={kernelName:o["MaxPoolGrad"],backendName:"webgl",kernelFunc:CN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TN(t,e,n,r){let a=new sw(n,"max",!1);const s=r.runWebGLProgram(a,[t],"float32");a=new sw(n,"max",!0,!0,e);const i=r.runWebGLProgram(a,[t],"float32");return[s,i]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EN={kernelName:o["MaxPoolWithArgmax"],backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:a,strides:s,pad:i,includeBatchInIndex:u}=e,c=n;o["util"].assert(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const l=[1,1];o["util"].assert(o["backend_util"].eitherStridesOrDilationsAreOne(s,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`);const d=o["backend_util"].computePool2DInfo(r.shape,a,s,l,i),[h,p]=TN(r,u,d,c);return[h,p]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AN(t,e,n,r){const a=o["util"].sizeFromShape(e),s=o["util"].sizeFromShape(t.shape),i=s/a,u=Xx({inputs:{x:t},attrs:{shape:[i,a]},backend:r}),c=tv(u,"float32","mean",r),l=Xx({inputs:{x:c},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(u),r.disposeIntermediateTensorInfo(c),l}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $N={kernelName:o["Mean"],backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{keepDims:a,axis:s}=e,i=n,u=r.shape.length,c=o["util"].parseAxisParam(s,r.shape);let l=c;const d=o["backend_util"].getAxesPermutation(l,u),h=null!=d,p=i.shouldExecuteOnCPU([r]),f=[];let m=r;if(h){if(p){const t=i.texData.get(m.dataId),e=t.values,n=new Array(u);for(let i=0;i<n.length;i++)n[i]=r.shape[d[i]];const a=Ey(e,r.shape,r.dtype,d,n);m=i.makeTensorInfo(n,r.dtype);const s=i.texData.get(m.dataId);s.values=a}else m=av(r,d,i);f.push(m),l=o["backend_util"].getInnerMostAxes(l.length,u)}o["backend_util"].assertAxesAreInnerMostDims("sum",l,u);const[b,g]=o["backend_util"].computeOutAndReduceShapes(m.shape,l);let y=b;a&&(y=o["backend_util"].expandShapeToKeepDim(b,c));const x=AN(m,g,y,i);for(const o of f)i.disposeIntermediateTensorInfo(o);return x}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RN(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s,keepDims:i}=r,u=a.shape.length,c=o["util"].parseAxisParam(s,a.shape);let l=c;const d=o["backend_util"].getAxesPermutation(l,u);let h=a;null!=d&&(h=uv({inputs:{x:a},backend:n,attrs:{perm:d}}),l=o["backend_util"].getInnerMostAxes(l.length,a.shape.length)),o["backend_util"].assertAxesAreInnerMostDims("min",l,u);const[p,f]=o["backend_util"].computeOutAndReduceShapes(h.shape,l),m=o["util"].sizeFromShape(f),b=Xx({inputs:{x:h},backend:n,attrs:{shape:[-1,m]}}),g=tv(b,b.dtype,"min",n);let y;if(i){const t=o["backend_util"].expandShapeToKeepDim(p,c);y=Xx({inputs:{x:g},backend:n,attrs:{shape:t}})}else y=Xx({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),y}const DN={kernelName:o["Min"],backendName:"webgl",kernelFunc:RN},FN=vx+"\n  return min(a, b);\n",_N="\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+kx+"\n  return result;\n",MN=Px({opSnippet:FN,packedOpSnippet:_N,cpuKernelImpl:yy}),zN={kernelName:o["Minimum"],backendName:"webgl",kernelFunc:MN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class LN{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,a=Yg(r),s=e.map(t=>t[0]).join(","),i=e.map((e,n)=>e[0]+t[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PN{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,a=Yg(r),s=e.map(t=>t[0]).join(","),i=e.map((e,n)=>e[0]+t[n]).join(","),o=Ry("rc",r),u=Ry("source",r),c=`${o[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===n?0:1;let h="";if(1===r){const t=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${o[r-1]} += 1;\n        if(${c}) {\n          ${t}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n      `}else{const t=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${o[r-1]} += 1;\n        if(${c}) {\n          ${t}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${t}\n          result[2] = getChannel(getX(${u.join()}), ${l});\n          ${o[r-1]} += 1;\n          if(${c}) {\n            ${t}\n            result[3] = getChannel(getX(${u.join()}), ${l});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BN=({inputs:t,backend:e,attrs:n})=>{const{x:r}=t,{paddings:a,mode:s}=n,i=Object(o["env"])().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new PN(r.shape,a,s):new LN(r.shape,a,s),u=e.runWebGLProgram(i,[r],r.dtype);return u},WN={kernelName:o["MirrorPad"],backendName:"webgl",kernelFunc:BN},VN="if (b == 0.0) return NAN;\n  return mod(a, b);",UN="\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  "+kx+"\n  return result;\n",GN=Px({opSnippet:VN,packedOpSnippet:UN}),HN={kernelName:o["Mod"],backendName:"webgl",kernelFunc:GN};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class qN{constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KN="\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",XN="\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",YN=Px({opSnippet:KN,packedOpSnippet:XN,checkOutOfBounds:!0}),ZN={kernelName:o["RealDiv"],backendName:"webgl",kernelFunc:YN},JN="return a - b;",QN=Px({opSnippet:JN,packedOpSnippet:JN,supportsComplex:!0,cpuKernelImpl:Cy}),tS={kernelName:o["Sub"],backendName:"webgl",kernelFunc:QN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function eS(t){const{inputs:e,backend:n,attrs:r}=t,{logits:a}=e,{dim:s}=r,i=o["util"].parseAxisParam([s],a.shape),u=pN({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),c=o["backend_util"].expandShapeToKeepDim(u.shape,i),l=Xx({inputs:{x:u},backend:n,attrs:{shape:c}}),d=QN({inputs:{a:a,b:l},backend:n}),h=CO({inputs:{x:d},backend:n}),p=iv({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),f=Xx({inputs:{x:p},backend:n,attrs:{shape:c}}),m=YN({inputs:{a:h,b:f},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}const nS={kernelName:o["Softmax"],backendName:"webgl",kernelFunc:eS};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rS(t){const{inputs:e,backend:n,attrs:r}=t,{logits:a}=e,{numSamples:s,seed:i,normalized:o}=r,u=o?a:eS({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),c=u.shape[0],l=u.shape[1],d=new qN(c,l,s),h=d.getCustomSetupFunc(i),p=n.runWebGLProgram(d,[u],"int32",h);return o||n.disposeIntermediateTensorInfo(u),p}const aS={kernelName:o["Multinomial"],backendName:"webgl",kernelFunc:rS},sS="return -x;";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iS(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])){const t=n.texData.get(r.dataId),[e,a]=vy(t.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,e)}let a;return a=Object(o["env"])().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new ox(r.shape,sS):new Xy(r.shape,sS),n.runWebGLProgram(a,[r],r.dtype)}const oS={kernelName:o["Neg"],backendName:"webgl",kernelFunc:iS},uS=o["kernel_impls"].nonMaxSuppressionV3Impl;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cS(t){o["backend_util"].warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:a,scores:s}=e,{maxOutputSize:i,iouThreshold:u,scoreThreshold:c}=r,l=n.readSync(a.dataId),d=n.readSync(s.dataId),{selectedIndices:h}=uS(l,d,i,u,c);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}const lS={kernelName:o["NonMaxSuppressionV3"],backendName:"webgl",kernelFunc:cS},dS=o["kernel_impls"].nonMaxSuppressionV4Impl;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hS(t){o["backend_util"].warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:a,scores:s}=e,{maxOutputSize:i,iouThreshold:u,scoreThreshold:c,padToMaxOutputSize:l}=r,d=n.readSync(a.dataId),h=n.readSync(s.dataId),{selectedIndices:p,validOutputs:f}=dS(d,h,i,u,c,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}const pS={kernelName:o["NonMaxSuppressionV4"],backendName:"webgl",kernelFunc:hS},fS=o["kernel_impls"].nonMaxSuppressionV5Impl;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mS(t){o["backend_util"].warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:a,scores:s}=e,{maxOutputSize:i,iouThreshold:u,scoreThreshold:c,softNmsSigma:l}=r,d=n.readSync(a.dataId),h=n.readSync(s.dataId),p=i,f=u,m=c,b=l,{selectedIndices:g,selectedScores:y}=fS(d,h,p,f,m,b);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}const bS={kernelName:o["NonMaxSuppressionV5"],backendName:"webgl",kernelFunc:mS};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gS{constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yS=t=>{const{inputs:e,backend:n,attrs:r}=t,{indices:a}=e,{depth:s,onValue:i,offValue:u}=r,c=o["util"].sizeFromShape(a.shape),l=new gS(c,s,i,u),d=Xx({inputs:{x:a},backend:n,attrs:{shape:[c]}}),h=n.runWebGLProgram(l,[d],a.dtype);n.disposeIntermediateTensorInfo(d);const p=[...a.shape,s],f=Xx({inputs:{x:h},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(h),f},xS={kernelName:o["OneHot"],backendName:"webgl",kernelFunc:yS};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vS(t){const{inputs:e,backend:n}=t,{x:r}=e;if("complex64"===r.dtype){const t=Mw({inputs:{input:r},backend:n}),e=vS({inputs:{x:t},backend:n}),a=rk({inputs:{input:r},backend:n}),s=vS({inputs:{x:a},backend:n}),i=Sx({inputs:{real:e,imag:s},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return LO({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const wS={kernelName:o["ZerosLike"],backendName:"webgl",kernelFunc:vS};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kS(t){const{inputs:e,backend:n}=t,{x:r}=e;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=Mw({inputs:{input:r},backend:n}),e=kS({inputs:{x:t},backend:n}),a=rk({inputs:{input:r},backend:n}),s=vS({inputs:{x:a},backend:n}),i=Sx({inputs:{real:e,imag:s},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return LO({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:n})}const OS={kernelName:o["OnesLike"],backendName:"webgl",kernelFunc:kS};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IS(t){const{inputs:e,backend:n,attrs:r}=t,{axis:a}=r;if(1===e.length)return TO({inputs:{input:e[0]},backend:n,attrs:{dim:a}});const s=e[0].shape,i=e[0].dtype;e.forEach(t=>{o["util"].assertShapesMatch(s,t.shape,"All tensors passed to stack must have matching shapes"),o["util"].assert(i===t.dtype,()=>"All tensors passed to stack must have matching dtypes")});const u=[],c=e.map(t=>{const e=TO({inputs:{input:t},backend:n,attrs:{dim:a}});return u.push(e),e}),l=ok({inputs:c,backend:n,attrs:{axis:a}});return u.forEach(t=>n.disposeIntermediateTensorInfo(t)),l}const NS={kernelName:o["Pack"],backendName:"webgl",kernelFunc:IS};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SS{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,a=Yg(r),s=e.map(t=>t[0]).join(","),i=e.map((e,n)=>e[0]+t[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CS{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,a=Yg(r),s=e.map(t=>t[0]).join(","),i=e.map((e,n)=>e[0]+t[n]).join(","),o=Ry("rc",r),u=Ry("source",r),c=`${o[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[a+" rc = outputLoc;",`${o[r-1]} += 1;\n       if(${c}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${c}) {`],h=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===r?2:4;f<m;f++)p+=`\n        ${d[f]}\n        if (${h}) {\n          result[${f}] = float(${n});\n        } else {\n          ${a} source = rc - start;\n          result[${f}] = getChannel(getX(${u.join()}), ${l});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jS=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{paddings:s,constantValue:i}=r,u=Object(o["env"])().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new CS(a.shape,s,i):new SS(a.shape,s,i);return n.runWebGLProgram(u,[a],a.dtype)},TS={kernelName:o["PadV2"],backendName:"webgl",kernelFunc:jS},ES="\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",AS="\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  "+kx+"\n  return result;\n",$S=Px({opSnippet:ES,packedOpSnippet:AS}),RS={kernelName:o["Pow"],backendName:"webgl",kernelFunc:$S};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function DS(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s,keepDims:i}=r,u=a.shape.length,c=[],l=o["util"].parseAxisParam(s,a.shape);let d=l;const h=o["backend_util"].getAxesPermutation(d,u);let p,f=a;if(null!=h&&(f=uv({inputs:{x:a},backend:n,attrs:{perm:h}}),d=o["backend_util"].getInnerMostAxes(d.length,u),c.push(f)),o["backend_util"].assertAxesAreInnerMostDims("prod",d,u),n.shouldExecuteOnCPU([f])){const t=n.texData.get(f.dataId).values,{outVals:e,outShape:r,outDtype:a}=wy(f.shape,f.dtype,t,d);p=n.makeTensorInfo(r,a,e)}else{const[t,e]=o["backend_util"].computeOutAndReduceShapes(f.shape,d),r=o["util"].sizeFromShape(e),s=Xx({inputs:{x:f},backend:n,attrs:{shape:[-1,r]}}),i=Object(o["sumOutType"])(a.dtype),u=tv(s,i,"prod",n);p=Xx({inputs:{x:u},backend:n,attrs:{shape:t}}),c.push(s),c.push(u)}if(i){c.push(p);const t=o["backend_util"].expandShapeToKeepDim(p.shape,l);p=Xx({inputs:{x:p},backend:n,attrs:{shape:t}})}return c.forEach(t=>n.disposeIntermediateTensorInfo(t)),p}const FS={kernelName:o["Prod"],backendName:"webgl",kernelFunc:DS},_S=t=>{const{backend:e,attrs:n}=t,{start:r,stop:a,step:s,dtype:i}=n,o=ky(r,a,s,i);return e.makeTensorInfo([o.length],i,o)},MS={kernelName:o["Range"],backendName:"webgl",kernelFunc:_S},zS="return 1.0 / x;",LS=Lx({opSnippet:zS}),PS={kernelName:o["Reciprocal"],backendName:"webgl",kernelFunc:LS},BS=Yy+"\n  return (x < 0.0) ? 0.0 : x;\n",WS="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",VS=Lx({opSnippet:BS,packedOpSnippet:WS}),US={kernelName:o["Relu"],backendName:"webgl",kernelFunc:VS},GS=Yy+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",HS="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",qS=Lx({opSnippet:GS,packedOpSnippet:HS}),KS={kernelName:o["Relu6"],backendName:"webgl",kernelFunc:qS};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class XS{constructor(t,e,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=t;this.outputShape=[s,e,n,u];const c=[r&&e>1?i-1:i,r&&n>1?o-1:o],l=[r&&e>1?e-1:e,r&&n>1?n-1:n];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YS{constructor(t,e,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=t;this.outputShape=[s,e,n,u];const c=[r&&e>1?i-1:i,r&&n>1?o-1:o],l=[r&&e>1?e-1:e,r&&n>1?n-1:n];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]},\n          ${c[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZS(t){const{inputs:e,backend:n,attrs:r}=t,{images:a}=e,{alignCorners:s,halfPixelCenters:i,size:u}=r,[c,l]=u,d=Object(o["env"])().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new YS(a.shape,c,l,s,i):new XS(a.shape,c,l,s,i);return n.runWebGLProgram(d,[a],"float32")}const JS={kernelName:o["ResizeBilinear"],backendName:"webgl",kernelFunc:ZS};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QS{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,a]=e,[,s,i]=t,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],c=o[0]/u[0],l=o[1]/u[1],d=1/c,h=1/l,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tC(t){const{inputs:e,backend:n,attrs:r}=t,{images:a,dy:s}=e,{alignCorners:i}=r,o=new QS(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}const eC={kernelName:o["ResizeBilinearGrad"],backendName:"webgl",kernelFunc:tC};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nC{constructor(t,e,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=t;this.outputShape=[s,e,n,u];const c=[r&&e>1?i-1:i,r&&n>1?o-1:o],l=[r&&e>1?e-1:e,r&&n>1?n-1:n],d=r?"0.5":"0.0";let h;h=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rC(t){const{inputs:e,backend:n,attrs:r}=t,{images:a}=e,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,c]=o,l=new nC(a.shape,u,c,s,i);return n.runWebGLProgram(l,[a],a.dtype)}const aC={kernelName:o["ResizeNearestNeighbor"],backendName:"webgl",kernelFunc:rC};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sC{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,a]=e,[,s,i]=t,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],c=o[0]/u[0],l=o[1]/u[1],d=1/c,h=1/l,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iC(t){const{inputs:e,backend:n,attrs:r}=t,{images:a,dy:s}=e,{alignCorners:i}=r,o=new sC(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}const oC={kernelName:o["ResizeNearestNeighborGrad"],backendName:"webgl",kernelFunc:iC};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uC{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const r=n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`,a=t.map((t,e)=>r(e)).join(","),s=Yg(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cC{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const r=Ry("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=Yg(n);function o(t){return d(t)}function u(t){return t[n-1]="("+t[n-1]+" + 1)",d(t)}function c(t){return t[n-2]="("+t[n-2]+" + 1)",d(t)}function l(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",d(t)}function d(e){const n=t.map((t,n)=>h(n,e)),r=n.join(","),a=n.slice(-2).join(",");return`getChannel(getX(${r}), vec2(${a}))`}function h(n,r){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${r[n]} - 1`:""+r[n]}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o(r.slice())};\n          if(${a}){\n            result.g = ${u(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${c(r.slice())};\n            if(${a}) {\n              result.a = ${l(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lC(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{dims:s}=r,i=a.shape.length,u=o["util"].parseAxisParam(s,a.shape);if(0===i)return Ix({inputs:{x:a},backend:n});const c=Object(o["env"])().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new cC(a.shape,u):new uC(a.shape,u);return n.runWebGLProgram(c,[a],a.dtype)}const dC={kernelName:o["Reverse"],backendName:"webgl",kernelFunc:lC};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hC{constructor(t,e,n,r){this.variableNames=["Image"],this.outputShape=[];const a=t[1],s=t[2],i=Math.sin(e).toFixed(3),u=Math.cos(e).toFixed(3);this.outputShape=t;const[c,l]=o["backend_util"].getImageCenter(r,a,s),d=c.toFixed(3),h=l.toFixed(3);let p="";p="number"===typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${d}) * ${u} - (float(y) - ${h}) * ${i};\n          float coordYFloat = (float(x) - ${d}) * ${i} + (float(y) - ${h}) * ${u};\n          int coordX = int(round(coordXFloat + ${d}));\n          int coordY = int(round(coordYFloat + ${h}));\n          ${p}\n          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${a}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pC={kernelName:o["RotateWithOffset"],backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:a,fillValue:s,center:i}=e,o=n,u=new hC(r.shape,a,s,i),c=o.runWebGLProgram(u,[r],r.dtype);return c}},fC="\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n",mC=Lx({opSnippet:fC}),bC={kernelName:o["Round"],backendName:"webgl",kernelFunc:mC},gC="return inversesqrt(x);",yC=Lx({opSnippet:gC,cpuKernelImpl:Oy}),xC={kernelName:o["Rsqrt"],backendName:"webgl",kernelFunc:yC};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class vC{constructor(t,e,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=Yg(a.length),u=Yg(s.length);let c="";1===n?c="i":2===n&&(c="i, j");const l=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const h=`getUpdates(${d})`,p=e>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${l});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${h};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wC(t){const{inputs:e,backend:n,attrs:r}=t,{indices:a,updates:s}=e,{shape:i}=r,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=o["backend_util"].calculateShapes(s,a,i),p=[h/l,l];if(0===h)return n.makeTensorInfo(i,a.dtype);const f=Xx({inputs:{x:a},backend:n,attrs:{shape:[c,u]}}),m=Xx({inputs:{x:s},backend:n,attrs:{shape:[c,l]}}),b=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new vC(c,u,f.shape.length,m.shape.length,d,p),y=n.runWebGLProgram(g,[m,f,b],m.dtype),x=Xx({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(b),x}const kC={kernelName:o["ScatterNd"],backendName:"webgl",kernelFunc:wC};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OC{constructor(t,e,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<e.length;r++)i.push(""+n[r]),r<t&&s.push(""+n[r]);r=s.join(),a=i.join()}const s=Yg(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IC(t){const{inputs:e,backend:n}=t,{condition:r,t:a,e:s}=e,i=new OC(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],Object(o["upcastType"])(a.dtype,s.dtype))}const NC={kernelName:o["Select"],backendName:"webgl",kernelFunc:IC},SC=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${o["backend_util"].SELU_SCALEALPHA};\n  float scale = ${o["backend_util"].SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`,CC=Lx({opSnippet:SC}),jC={kernelName:o["Selu"],backendName:"webgl",kernelFunc:CC},TC="return 1.0 / (1.0 + exp(-1.0 * x));",EC=Lx({opSnippet:TC}),AC={kernelName:o["Sigmoid"],backendName:"webgl",kernelFunc:EC},$C="\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n",RC=Lx({opSnippet:$C}),DC={kernelName:o["Sign"],backendName:"webgl",kernelFunc:RC},FC=_x+"\n  return sin(x);\n",_C=Lx({opSnippet:FC}),MC={kernelName:o["Sin"],backendName:"webgl",kernelFunc:_C},zC="\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n",LC=Lx({opSnippet:zC}),PC={kernelName:o["Sinh"],backendName:"webgl",kernelFunc:LC},BC="\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n",WC=Lx({opSnippet:BC}),VC={kernelName:o["Softplus"],backendName:"webgl",kernelFunc:WC},UC=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{blockShape:s,paddings:i}=r;o["util"].assert(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const u=s.reduce((t,e)=>t*e),c=[[0,0]];c.push(...i);for(let o=1+s.length;o<a.shape.length;++o)c.push([0,0]);const l=[],d=jS({inputs:{x:a},backend:n,attrs:{paddings:c,constantValue:0}}),h=o["backend_util"].getReshaped(d.shape,s,u,!1),p=o["backend_util"].getPermuted(h.length,s.length,!1),f=o["backend_util"].getReshapedPermuted(d.shape,s,u,!1),m=Xx({inputs:{x:d},backend:n,attrs:{shape:h}}),b=uv({inputs:{x:m},backend:n,attrs:{perm:p}}),g=Xx({inputs:{x:b},backend:n,attrs:{shape:f}});return l.push(d),l.push(m),l.push(b),l.forEach(t=>n.disposeIntermediateTensorInfo(t)),g},GC={kernelName:o["SpaceToBatchND"],backendName:"webgl",kernelFunc:UC};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function HC(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:a,sparseValues:s,defaultValue:i}=e,{outputShape:u}=r,{sliceRank:c,numUpdates:l,strides:d,outputSize:h}=o["backend_util"].calculateShapes(s,a,u),p=!1,f=new vC(l,c,a.shape.length,s.shape.length,d,[h,1],p),m=n.runWebGLProgram(f,[s,a,i],s.dtype),b=Xx({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(m),b}const qC={kernelName:o["SparseToDense"],backendName:"webgl",kernelFunc:HC};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KC(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{numOrSizeSplits:s,axis:i}=r,u=o["util"].parseAxisParam(i,a.shape)[0],c=o["backend_util"].prepareSplitSize(a,s,u),l=a.shape.length,d=new Array(l).fill(0),h=a.shape.slice();return c.map(t=>{const e=[...h];e[u]=t;const r=jw({inputs:{x:a},backend:n,attrs:{begin:d,size:e}});return d[u]+=t,r})}const XC={kernelName:o["SplitV"],backendName:"webgl",kernelFunc:KC},YC="return sqrt(x);",ZC=Lx({opSnippet:YC}),JC={kernelName:o["Sqrt"],backendName:"webgl",kernelFunc:ZC},QC="return x * x;",tj=Lx({opSnippet:QC}),ej={kernelName:o["Square"],backendName:"webgl",kernelFunc:tj},nj="return (a - b) * (a - b);",rj=Px({opSnippet:nj,packedOpSnippet:nj}),aj={kernelName:o["SquaredDifference"],backendName:"webgl",kernelFunc:rj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sj({inputs:t,attrs:e,backend:n}){const{x:r}=t,a=Yy+`\n    return x > 0.0 ? 1.0 : float(${e.alpha});\n  `,s=new Xy(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}const ij={kernelName:o["Step"],backendName:"webgl",kernelFunc:sj};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oj{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=Yg(n.length),s=Yg(n.length);let i="";if(1===r)i="coords * strides + begin";else{let t=0;i=n.map((e,r)=>(t++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${t-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${a} begin = ${a}(${t});\n      ${a} strides = ${a}(${e});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uj(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{begin:s,end:i,strides:u,beginMask:c,endMask:l,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=r,{nonStrided:f,$begin:m,$strides:b,size:g,newShape:y,outShape:x}=o["slice_util"].sliceInfo(a.shape,s,i,u,c,l,d,h,p),v=Xx({inputs:{x:a},backend:n,attrs:{shape:y}});let w;if(f){const t=jw({inputs:{x:v},backend:n,attrs:{begin:m,size:g}});w=Xx({inputs:{x:t},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(t)}else if(x.some(t=>0===t))w=n.makeTensorInfo(x,a.dtype,[]);else{const t=n.shouldExecuteOnCPU([v]);if(t){const t=n.texData.get(v.dataId),e=t.values,r=Object(o["buffer"])(v.shape,v.dtype,e),a=Sy(x,r,b,m);w=n.makeTensorInfo(x,v.dtype,a.values)}else{const t=new oj(m,b,x);w=n.runWebGLProgram(t,[v],v.dtype)}}const k=Xx({inputs:{x:w},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),k}const cj={kernelName:o["StridedSlice"],backendName:"webgl",kernelFunc:uj},lj="return tan(x);",dj=Lx({opSnippet:lj}),hj={kernelName:o["Tan"],backendName:"webgl",kernelFunc:dj},pj="\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n",fj=Lx({opSnippet:pj}),mj={kernelName:o["Tanh"],backendName:"webgl",kernelFunc:fj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class bj{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[s]*e[s];this.outputShape=n,this.rank=n.length;const r=Yg(this.rank),a=gj(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function gj(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let a=0;a<t.length;a++)r.push(`imod(${n[a]}, ${t[a]})`);return r.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yj(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{reps:s}=r;if("string"===a.dtype){const t=n.readSync(a.dataId),e=t.map(t=>o["util"].decodeString(t)),r=Object(o["buffer"])(a.shape,a.dtype,e),i=jy(r,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new bj(a.shape,s),u=n.runWebGLProgram(i,[a],a.dtype);return u}const xj={kernelName:o["Tile"],backendName:"webgl",kernelFunc:yj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vj(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{k:s,sorted:i}=r,o=n.readSync(a.dataId),[u,c]=Ty(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}const wj={kernelName:o["TopK"],backendName:"webgl",kernelFunc:vj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kj(t){const{inputs:e,attrs:n,backend:r}=t,{axis:a}=n,{x:s}=e;Sb(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(s.dataId),{outputValues:o,outputShape:u,indices:c}=Ay(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([c.length],"int32",c)]}const Oj={kernelName:o["Unique"],backendName:"webgl",kernelFunc:kj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ij(t){const{inputs:e,backend:n,attrs:r}=t,{value:a}=e;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a,o=i.shape.length,u=a.shape[s],c=new Array(o-1);let l=0;for(let m=0;m<o;m++)m!==s&&(c[l++]=i.shape[m]);const d=[],h=new Array(o).fill(0),p=i.shape.slice();p[s]=1;const f=new Array(u);for(let m=0;m<f.length;m++){h[s]=m;const t=jw({inputs:{x:i},backend:n,attrs:{begin:h,size:p}}),e=Xx({inputs:{x:t},backend:n,attrs:{shape:c}});f[m]=e,d.push(t)}return d.forEach(t=>n.disposeIntermediateTensorInfo(t)),f}const Nj={kernelName:o["Unpack"],backendName:"webgl",kernelFunc:Ij};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sj{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,a=t.inSize,s=t.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];const o="0.0",u="sumValue",c=4*Math.floor(n/4),l=n%4,d="\n        sumValue += dot(values, segFilter);\n    ";let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${p}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${d}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${d}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cj(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,segmentIds:s}=e,{numSegments:i}=r,u=a.shape.length,c=[];let l=0;const d=o["backend_util"].getAxesPermutation([l],u);let h=a;null!=d&&(h=uv({inputs:{x:a},backend:n,attrs:{perm:d}}),c.push(h),l=o["backend_util"].getInnerMostAxes(1,u)[0]);const p=o["backend_util"].segment_util.computeOutShape(h.shape,l,i),f=o["util"].sizeFromShape([h.shape[l]]),m=Xx({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}});c.push(m);const b=Object(o["sumOutType"])(a.dtype),g=(t,e,r,a,s)=>{const i=t.shape[0],u=t.shape[1],l=o["backend_util"].segment_util.segOpComputeOptimalWindowSize(u,s),d={windowSize:l,inSize:u,batchSize:i,numSegments:s},h=new Sj(d,e),p=n.compileAndRun(h,[t,r],a);if(c.push(p),p.shape[1]===s)return p;const f=_S({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),m=yj({inputs:{x:f},backend:n,attrs:{reps:[u/l]}});c.push(f),c.push(m);const b=g(p,e,m,a,s);return b},y=g(m,"unsortedSegmentSum",s,b,i),x=Xx({inputs:{x:y},backend:n,attrs:{shape:p}});let v=x;if(null!=d){c.push(x);const t=o["backend_util"].getUndoAxesPermutation(d);v=uv({inputs:{x:v},backend:n,attrs:{perm:t}})}return c.forEach(t=>n.disposeIntermediateTensorInfo(t)),v}const jj={kernelName:o["UnsortedSegmentSum"],backendName:"webgl",kernelFunc:Cj},Tj=[uN,dN,pv,bv,xv,kv,Nv,Tv,Av,Rv,Pv,Wv,Gv,Kv,ew,Zv,aw,lw,uw,fw,bw,yw,kw,Aw,Rw,Ww,Gw,Xw,Qw,Cx,uk,wk,Ok,mk,Ck,Tk,Nk,$k,Fk,zk,Vk,Gk,Kk,nO,aO,Jk,oO,lO,fO,yO,kO,NO,jO,EO,RO,MO,PO,WO,GO,XO,JO,nI,aI,oI,dI,mI,xI,Nx,wI,ak,II,CI,EI,Ax,DI,zI,PI,qI,UI,ZI,tN,aN,fN,kN,vN,SN,jN,EN,yN,$N,DN,zN,WN,HN,aS,qx,oS,lS,pS,bS,_w,xS,OS,NS,TS,RS,Fx,FS,MS,zw,ZN,PS,KS,US,Yx,JS,eC,aC,oC,dC,pC,bC,xC,kC,NC,jC,AC,DC,MC,PC,Tw,nS,VC,GC,qC,XC,JC,ej,aj,ij,cj,tS,ov,hj,mj,xj,wj,cv,Oj,Nj,jj,wS];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const Aj of Tj)Object(o["registerKernel"])(Aj);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/** @license See the LICENSE file. */const Ej="2.8.5";
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */o["version_core"]},cef0:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),i=n("a3f7"),o=n("526f"),u=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(t,e){let n=Object(i["a"])(t,"a","greater"),u=Object(i["a"])(e,"b","greater");[n,u]=Object(s["makeTypesMatch"])(n,u),Object(o["a"])(n.shape,u.shape);const c={a:n,b:u};return r["a"].runKernel(a["nb"],c)}const l=Object(u["b"])({greater_:c})},d08e:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t,e){const n=Object(s["a"])(t,"x","reverse"),i={x:n},o={dims:e};return r["a"].runKernel(a["tc"],i,o)}const u=Object(i["b"])({reverse_:o})},d1a8:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","atanh"),n={x:e};return r["a"].runKernel(a["n"],n)}const u=Object(i["b"])({atanh_:o})},d1f4:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("a3f7"),a=n("6ad5"),s=n("54ef"),i=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t,e){const n=Object(r["a"])(t,"x","squeeze");return Object(i["a"])(n,Object(a["P"])(n.shape,e).newShape)}const u=Object(s["b"])({squeeze_:o})},d25f:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("a3f7"),a=n("526f"),s=n("e333"),i=n("ef00"),o=n("f183"),u=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(t,e){const n=Object(r["a"])(t,"a","logicalXor","bool"),u=Object(r["a"])(e,"b","logicalXor","bool");return Object(a["a"])(n.shape,u.shape),Object(s["a"])(Object(o["a"])(t,e),Object(i["a"])(Object(s["a"])(t,e)))}const l=Object(u["b"])({logicalXor_:c})},d303:function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r={};function a(t){return r[t]}},d30a:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","tan"),n={x:e};return r["a"].runKernel(a["Rc"],n)}const u=Object(i["b"])({tan_:o})},d369:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","floor"),n={x:e};return r["a"].runKernel(a["fb"],n)}const u=Object(i["b"])({floor_:o})},d4de:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),i=n("a3f7"),o=n("526f"),u=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(t,e){let n=Object(i["a"])(t,"a","notEqual"),u=Object(i["a"])(e,"b","notEqual");[n,u]=Object(s["makeTypesMatch"])(n,u),Object(o["a"])(n.shape,u.shape);const c={a:n,b:u};return r["a"].runKernel(a["Zb"],c)}const l=Object(u["b"])({notEqual_:c})},d4e4:function(t,e,n){"use strict";n.d(e,"a",(function(){return a})),n.d(e,"b",(function(){return s})),n.d(e,"c",(function(){return i}));var r=n("6125");n("d565");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class a{constructor(t,e,n,a,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=s||Math.random();this.random=r["alea"](i.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;while(!n){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);t=this.mean+this.stdDev*r*i,e=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class s{constructor(t,e,n,s){this.alpha=t,this.beta=1/e,this.dtype=n;const i=s||Math.random();this.randu=r["alea"](i.toString()),this.randn=new a(0,1,n,!1,this.randu()),this.d=t<1?t+2/3:t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,n,r,a,s;while(1){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,t=r*r,e=1-.331*t*t,n=.5*t+this.d*(1-s+Math.log(s)),a=this.randu(),a<e||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(t){return"float32"===this.dtype?t:Math.round(t)}}class i{constructor(t=0,e=1,n,a){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==a&&(a=Math.random()),"number"===typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=r["alea"](a)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},d54d:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("6ad5"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e=0){const n=Object(s["b"])(t,"tensors","stack","string_or_numeric");i["b"](n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&i["b"](e<=n[0].rank,()=>"Axis must be <= rank of the tensor");const o=n,u={axis:e};return r["a"].runKernel(a["cc"],o,u)}const c=Object(o["b"])({stack_:u})},d556:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}]},d565:function(t,e,n){"use strict";n.r(e),n.d(e,"TEST_EPSILON_FLOAT16",(function(){return u})),n.d(e,"expectArraysClose",(function(){return c})),n.d(e,"testEpsilon",(function(){return l})),n.d(e,"expectPromiseToFail",(function(){return h})),n.d(e,"expectArraysEqual",(function(){return p})),n.d(e,"expectNumbersClose",(function(){return f})),n.d(e,"expectValuesInRange",(function(){return b})),n.d(e,"expectArrayBuffersEqual",(function(){return g})),n.d(e,"encodeStrings",(function(){return y}));var r=n("6ae2"),a=n("a3f7"),s=n("6ad5"),i=n("eb7e");
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=.001,u=.1;function c(t,e,n){return null==n&&(n=l()),d(t,e,(t,e)=>m(t,e,n))}function l(){return 32===r["a"].backend.floatPrecision()?o:u}function d(t,e,n){let r=!0;if((Object(s["A"])(t)||Object(s["A"])(e))&&(r=!1),Object(s["A"])(t)&&Object(s["A"])(e)&&(r=!0),r){const n=t.constructor.name,r=e.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: `+r)}if(Array.isArray(t)&&Array.isArray(e)){const n=Object(a["c"])(t),r=Object(a["c"])(e);if(!Object(s["a"])(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const i=Object(s["A"])(t)?t:Object(s["m"])(t),o=Object(s["A"])(e)?e:Object(s["m"])(e);if(i.length!==o.length)throw new Error(`Arrays have different lengths actual: ${i.length} vs expected: ${o.length}.\nActual:   ${i}.\nExpected: ${o}.`);for(let a=0;a<o.length;++a){const t=i[a],e=o[a];if(!n(t,e))throw new Error(`Arrays differ: actual[${a}] = ${t}, expected[${a}] = ${e}.\nActual:   ${i}.\nExpected: ${o}.`)}}function h(t,e){t().then(()=>e.fail(),()=>e())}function p(t,e){const n="string"===typeof e||"number"===typeof e||"boolean"===typeof e?[e]:e;return Object(s["z"])(t)||Object(s["z"])(t[0])||Object(s["z"])(e)||Object(s["z"])(e[0])?d(t,n,(t,e)=>t==e):d(t,e,(t,e)=>m(t,e,0))}function f(t,e,n){if(null==n&&(n=l()),!m(t,e,n))throw new Error(`Numbers differ: actual === ${t}, expected === ${e}`)}function m(t,e,n){return!isFinite(t)&&!isFinite(e)||!(isNaN(t)||isNaN(e)||Math.abs(t-e)>n)}function b(t,e,n){for(let r=0;r<t.length;r++)if(t[r]<e||t[r]>n)throw new Error(`Value out of range:${t[r]} low: ${e}, high: ${n}`)}function g(t,e){expect(new Float32Array(t)).toEqual(new Float32Array(e))}function y(t){for(let e=0;e<t.length;e++){const n=t[e];Array.isArray(n)?y(n):t[e]=Object(i["encodeString"])(n)}return t}},d7b0:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"input","real"),n={input:e};return r["a"].runKernel(a["jc"],n)}const u=Object(i["b"])({real_:o})},dae8:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("6ad5"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e=0){const n=Object(s["a"])(t,"x","expandDims","string_or_numeric");i["b"](e<=n.rank,()=>"Axis must be <= rank of the tensor");const o={input:n},u={dim:e};return r["a"].runKernel(a["ab"],o,u)}const c=Object(o["b"])({expandDims_:u})},db49:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t,e=0){const n=Object(s["a"])(t,"x","argMin"),i={x:n},o={axis:e};return r["a"].runKernel(a["i"],i,o)}const u=Object(i["b"])({argMin_:o})},dbf3:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]},dc14:function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return i}));var r=n("fa11"),a=n("c388"),s=n("4cfc");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class i extends a["a"]{decodeUTF8(){return new o(this)}}class o extends s["a"]{constructor(t){super(),this.upstream=t,this.impl=new u(t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class u extends a["b"]{constructor(t){if(super(),this.upstream=t,Object(r["env"])().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:t}=n(4);this.decoder=new t("utf8")}}summary(){return this.upstream.summary()+" -> Utf8"}async pump(){const e=await this.upstream.next();let n,a;return!e.done&&(n=e.value,a=Object(r["env"])().get("IS_BROWSER")?this.decoder.decode(n,{stream:!0}):this.decoder.write(t.from(n.buffer)),this.outputQueue.push(a),!0)}}}).call(this,n("b639").Buffer)},dc59:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","asinh"),n={x:e};return r["a"].runKernel(a["k"],n)}const u=Object(i["b"])({asinh_:o})},dd7e:function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("6ad5"),o=n("b818"),u=n("54ef"),c=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function l(t,e,n,u,l="NHWC",d=[1,1],h){const p=Object(s["a"])(t,"x","conv2d"),f=Object(s["a"])(e,"filter","conv2d");let m=p,b=!1;3===p.rank&&(b=!0,m=Object(c["a"])(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i["b"](4===m.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`),i["b"](4===f.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+f.rank+"."),null!=h&&i["b"](i["v"](u),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${h} but got pad ${u}.`);const g="NHWC"===l?m.shape[3]:m.shape[1];i["b"](g===f.shape[2],()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${f.shape[2]}.`),i["b"](o["h"](n,d),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`);const y={x:m,filter:f},x={strides:n,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h},v=r["a"].runKernel(a["C"],y,x);return b?Object(c["a"])(v,[v.shape[1],v.shape[2],v.shape[3]]):v}const d=Object(u["b"])({conv2d_:l})},de1a:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t,e,n,i,o=0,u=0,c=0,l=0,d=0){const h=Object(s["a"])(t,"x","stridedSlice"),p={x:h},f={begin:e,end:n,strides:i,beginMask:o,endMask:u,ellipsisMask:c,newAxisMask:l,shrinkAxisMask:d};return r["a"].runKernel(a["Oc"],p,f)}const u=Object(i["b"])({stridedSlice_:o})},deb3:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("6ad5"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e){const n=Object(s["a"])(t,"x","cast");if(!i["B"](e))throw new Error("Failed to cast to unknown dtype "+e);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const o={x:n},u={dtype:e};return r["a"].runKernel(a["w"],o,u)}const c=Object(o["b"])({cast_:u})},df81:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t,e=null,n=!1){const i=Object(s["a"])(t,"x","all","bool"),o={x:i},u={axis:e,keepDims:n};return r["a"].runKernel(a["f"],o,u)}const u=Object(i["b"])({all_:o})},e053:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("deb3"),o=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e=null,n=!1){let o=Object(s["a"])(t,"x","sum");"bool"===o.dtype&&(o=Object(i["a"])(o,"int32"));const u={x:o},c={axis:e,keepDims:n};return r["a"].runKernel(a["Qc"],u,c)}const c=Object(o["b"])({sum_:u})},e101:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("6ad5"),o=n("54ef"),u=n("35c9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(t,e=5,n=1,o=1,c=.5){const l=Object(s["a"])(t,"x","localResponseNormalization");i["b"](4===l.rank||3===l.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${l.rank}.`),i["b"](i["v"](e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let d=l,h=!1;3===l.rank&&(h=!0,d=Object(u["a"])(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const p={x:d},f={depthRadius:e,bias:n,alpha:o,beta:c},m=r["a"].runKernel(a["vb"],p,f);return h?Object(u["a"])(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const l=Object(o["b"])({localResponseNormalization_:c})},e1fd:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),i=n("a3f7"),o=n("526f"),u=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(t,e){let n=Object(i["a"])(t,"a","less"),u=Object(i["a"])(e,"b","less");[n,u]=Object(s["makeTypesMatch"])(n,u),Object(o["a"])(n.shape,u.shape);const c={a:n,b:u};return r["a"].runKernel(a["yb"],c)}const l=Object(u["b"])({less_:c})},e22c:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t,e,n=1,i=0){if(e<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+e);const o=Object(s["a"])(t,"indices","oneHot","int32"),u={indices:o},c={depth:e,onValue:n,offValue:i};return r["a"].runKernel(a["ac"],u,c)}const u=Object(i["b"])({oneHot_:o})},e333:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("526f"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e){const n=Object(s["a"])(t,"a","logicalAnd","bool"),o=Object(s["a"])(e,"b","logicalAnd","bool");Object(i["a"])(n.shape,o.shape);const u={a:n,b:o};return r["a"].runKernel(a["Eb"],u)}const c=Object(o["b"])({logicalAnd_:u})},e3db:function(t,e){var n={}.toString;t.exports=Array.isArray||function(t){return"[object Array]"==n.call(t)}},e89f:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t,e=0){const n=Object(s["a"])(t,"x","argMax"),i={x:n},o={axis:e};return r["a"].runKernel(a["h"],i,o)}const u=Object(i["b"])({argMax_:o})},eaf4:function(t,e,n){"use strict";n.d(e,"a",(function(){return m}));var r=n("a3f7"),a=n("6ad5"),s=n("9748"),i=n("3b28"),o=n("b818"),u=n("9fe6"),c=n("54ef"),l=n("35c9"),d=n("7580");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function h(t,e,n,c,h,m){null==h&&(h=[1,1]),null==m&&(m=1),0===c&&(c="valid");const b=Object(r["a"])(t,"x","maxPool");let g=b,y=!1;3===b.rank&&(y=!0,g=Object(l["a"])(b,[1,b.shape[0],b.shape[1],b.shape[2]])),a["b"](o["h"](m,h),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${m} and dilations '${h}'`);const x=o["e"](g.shape,e,m,h,c),v=[x.dilationHeight,x.dilationWidth];let w;w="same"===c?f([x.filterHeight,x.filterWidth],v):[[0,0],[0,0]];const k=1===v[0]&&1===v[1],[O,I]=p([x.inHeight,x.inWidth],v,w),N=k?c:"valid",S=k?g:Object(d["a"])(g,v,O),C="avg"===n?()=>Object(s["a"])(S,e,m,N):()=>Object(u["a"])(S,e,m,N),j=C(),T=k?j:Object(i["a"])(j,v,I);return y?Object(l["a"])(T,[T.shape[1],T.shape[2],T.shape[3]]):T}function p(t,e,n){const r=n.map(t=>t[0]),a=n.map(t=>t[1]),s=t.concat(r,a),i=e.map((t,e)=>(t-s[e]%t)%t),o=a.map((t,e)=>t+i[e]),u=e.map((t,e)=>[r[e],o[e]]),c=e.map((t,e)=>[0,i[e]]);return[u,c]}function f(t,e){const n=t.map((t,n)=>t+(t-1)*(e[n]-1)),r=n.map(t=>t-1),a=r.map(t=>Math.floor(t/2)),s=r.map((t,e)=>t-a[e]);return r.map((t,e)=>[a[e],s[e]])}const m=Object(c["b"])({pool_:h})},eb7e:function(t,e,n){"use strict";n.r(e),n.d(e,"createScalarValue",(function(){return s})),n.d(e,"toTypedArray",(function(){return o})),n.d(e,"now",(function(){return u})),n.d(e,"fetch",(function(){return c})),n.d(e,"encodeString",(function(){return l})),n.d(e,"decodeString",(function(){return d}));var r=n("b333"),a=n("6ad5");
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(t,e){return"string"===e?l(t):o([t],e)}function i(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}function o(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=a["m"](t)),Object(r["c"])().getBool("DEBUG")&&a["h"](t,e),i(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error("Unknown data type "+e)}function u(){return Object(r["c"])().platform.now()}function c(t,e){return Object(r["c"])().platform.fetch(t,e)}function l(t,e="utf-8"){return e=e||"utf-8",Object(r["c"])().platform.encode(t,e)}function d(t,e="utf-8"){return e=e||"utf-8",Object(r["c"])().platform.decode(t,e)}n.d(e,"shuffle",(function(){return a["M"]})),n.d(e,"clamp",(function(){return a["i"]})),n.d(e,"nearestLargerEven",(function(){return a["H"]})),n.d(e,"sum",(function(){return a["Q"]})),n.d(e,"randUniform",(function(){return a["J"]})),n.d(e,"distSquared",(function(){return a["l"]})),n.d(e,"assert",(function(){return a["b"]})),n.d(e,"assertShapesMatch",(function(){return a["e"]})),n.d(e,"assertNonNull",(function(){return a["d"]})),n.d(e,"flatten",(function(){return a["m"]})),n.d(e,"sizeFromShape",(function(){return a["N"]})),n.d(e,"isScalarShape",(function(){return a["y"]})),n.d(e,"arraysEqual",(function(){return a["a"]})),n.d(e,"isInt",(function(){return a["v"]})),n.d(e,"tanh",(function(){return a["R"]})),n.d(e,"sizeToSquarishShape",(function(){return a["O"]})),n.d(e,"createShuffledIndices",(function(){return a["k"]})),n.d(e,"rightPad",(function(){return a["L"]})),n.d(e,"repeatedTry",(function(){return a["K"]})),n.d(e,"inferFromImplicitShape",(function(){return a["s"]})),n.d(e,"parseAxisParam",(function(){return a["I"]})),n.d(e,"squeezeShape",(function(){return a["P"]})),n.d(e,"getTypedArrayFromDType",(function(){return a["o"]})),n.d(e,"getArrayFromDType",(function(){return a["n"]})),n.d(e,"checkConversionForErrors",(function(){return a["h"]})),n.d(e,"isValidDtype",(function(){return a["B"]})),n.d(e,"hasEncodingLoss",(function(){return a["p"]})),n.d(e,"isTypedArray",(function(){return a["A"]})),n.d(e,"bytesPerElement",(function(){return a["g"]})),n.d(e,"bytesFromStringArray",(function(){return a["f"]})),n.d(e,"isString",(function(){return a["z"]})),n.d(e,"isBoolean",(function(){return a["t"]})),n.d(e,"isNumber",(function(){return a["w"]})),n.d(e,"inferDtype",(function(){return a["r"]})),n.d(e,"isFunction",(function(){return a["u"]})),n.d(e,"nearestDivisor",(function(){return a["G"]})),n.d(e,"computeStrides",(function(){return a["j"]})),n.d(e,"toNestedArray",(function(){return a["S"]})),n.d(e,"makeOnesTypedArray",(function(){return a["D"]})),n.d(e,"makeZerosTypedArray",(function(){return a["F"]})),n.d(e,"makeZerosNestedTypedArray",(function(){return a["E"]})),n.d(e,"assertNonNegativeIntegerDimensions",(function(){return a["c"]})),n.d(e,"locToIndex",(function(){return a["C"]})),n.d(e,"indexToLoc",(function(){return a["q"]})),n.d(e,"isPromise",(function(){return a["x"]}))},ef00:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","logicalNot","bool"),n={x:e};return r["a"].runKernel(a["Fb"],n)}const u=Object(i["b"])({logicalNot_:o})},eff7:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","cos"),n={x:e};return r["a"].runKernel(a["I"],n)}const u=Object(i["b"])({cos_:o})},f011:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},f0a9:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","clone","string_or_numeric"),n={x:e};return r["a"].runKernel(a["qb"],n)}const u=Object(i["b"])({clone_:o})},f0e5:function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n("6ae2"),a=n("c05b"),s=n("76c2"),i=n("a3f7"),o=n("526f"),u=n("deb3"),c=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function l(t,e){let n=Object(i["a"])(t,"a","minimum"),c=Object(i["a"])(e,"b","minimum");[n,c]=Object(s["makeTypesMatch"])(n,c),"bool"===n.dtype&&(n=Object(u["a"])(n,"int32"),c=Object(u["a"])(c,"int32")),Object(o["a"])(n.shape,c.shape);const l={a:n,b:c};return r["a"].runKernel(a["Qb"],l)}const d=Object(c["b"])({minimum_:l})},f183:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("526f"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e){const n=Object(s["a"])(t,"a","logicalOr","bool"),o=Object(s["a"])(e,"b","logicalOr","bool");Object(i["a"])(n.shape,o.shape);const u={a:n,b:o};return r["a"].runKernel(a["Gb"],u)}const c=Object(o["b"])({logicalOr_:u})},f1b5:function(t,e,n){"use strict";n.d(e,"a",(function(){return x})),n.d(e,"b",(function(){return v})),n.d(e,"c",(function(){return w})),n.d(e,"d",(function(){return k})),n.d(e,"e",(function(){return O})),n.d(e,"f",(function(){return I}));var r=n("c04e4"),a=n("a3f7"),s=n("6ad5"),i=n("b9b9"),o=n("cef0"),u=n("bb2d"),c=n("e1fd"),l=n("b21c"),d=n("d4de"),h=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function p(t,e){Object(r["b"])("strict variants of ops have been deprecated and will be removed in future");const n=Object(a["a"])(t,"a","notEqualStrict"),i=Object(a["a"])(e,"b","notEqualStrict");return Object(s["e"])(n.shape,i.shape,"Error in notEqualStrict: "),Object(d["a"])(n,i)}function f(t,e){Object(r["b"])("strict variants of ops have been deprecated and will be removed in future");const n=Object(a["a"])(t,"a","lessStrict"),i=Object(a["a"])(e,"b","lessStrict");return Object(s["e"])(n.shape,i.shape,"Error in lessStrict: "),Object(c["a"])(n,i)}function m(t,e){Object(r["b"])("strict variants of ops have been deprecated and will be removed in future");const n=Object(a["a"])(t,"a","equalStrict"),o=Object(a["a"])(e,"b","equalStrict");return Object(s["e"])(n.shape,o.shape,"Error in equalStrict: "),Object(i["a"])(n,o)}function b(t,e){Object(r["b"])("strict variants of ops have been deprecated and will be removed in future");const n=Object(a["a"])(t,"a","lessEqualStrict"),i=Object(a["a"])(e,"b","lessEqualStrict");return Object(s["e"])(n.shape,i.shape,"Error in lessEqualStrict: "),Object(l["a"])(n,i)}function g(t,e){Object(r["b"])("strict variants of ops have been deprecated and will be removed in future");const n=Object(a["a"])(t,"a","greaterStrict"),i=Object(a["a"])(e,"b","greaterStrict");return Object(s["e"])(n.shape,i.shape,"Error in greaterStrict: "),Object(o["a"])(n,i)}function y(t,e){Object(r["b"])("strict variants of ops have been deprecated and will be removed in future");const n=Object(a["a"])(t,"a","greaterEqualStrict"),i=Object(a["a"])(e,"b","greaterEqualStrict");return Object(s["e"])(n.shape,i.shape,"Error in greaterEqualStrict: "),Object(u["a"])(n,i)}const x=Object(h["b"])({equalStrict_:m}),v=Object(h["b"])({greaterEqualStrict_:y}),w=Object(h["b"])({greaterStrict_:g}),k=Object(h["b"])({lessEqualStrict_:b}),O=Object(h["b"])({lessStrict_:f}),I=Object(h["b"])({notEqualStrict_:p})},f3ae:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("deb3"),o=n("54ef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e=null,n=!1){let o=Object(s["a"])(t,"x","prod");"bool"===o.dtype&&(o=Object(i["a"])(o,"int32"));const u={x:o},c={axis:e,keepDims:n};return r["a"].runKernel(a["hc"],u,c)}const c=Object(o["b"])({prod_:u})},f490:function(t,e,n){"use strict";(function(t,r){
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let a;function s(){if(null==a){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof t)e=t;else if("undefined"!==typeof r)e=r;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}a=e}return a}function i(){const t=s();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}function o(t,e){const n=i();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}n.d(e,"b",(function(){return s})),n.d(e,"a",(function(){return o}))}).call(this,n("c8ba"),n("4362"))},f746:function(t,e,n){"use strict";n.r(e);var r=n("8ae0"),a=n("34d7");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
a["a"].prototype.abs=function(){return this.throwIfDisposed(),Object(r["a"])(this)};var s=n("a374");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.acos=function(){return this.throwIfDisposed(),Object(s["a"])(this)};var i=n("4615");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.acosh=function(){return this.throwIfDisposed(),Object(i["a"])(this)};var o=n("ccb1");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.addStrict=function(t){return this.throwIfDisposed(),Object(o["a"])(this,t)};var u=n("9117");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.add=function(t){return this.throwIfDisposed(),Object(u["a"])(this,t)};var c=n("df81");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.all=function(t,e){return this.throwIfDisposed(),Object(c["a"])(this,t,e)};var l=n("4516");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.any=function(t,e){return this.throwIfDisposed(),Object(l["a"])(this,t,e)};var d=n("e89f");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.argMax=function(t){return this.throwIfDisposed(),Object(d["a"])(this,t)};var h=n("db49");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.argMin=function(t){return this.throwIfDisposed(),Object(h["a"])(this,t)};var p=n("35c9"),f=n("6ad5");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
a["a"].prototype.asScalar=function(){return this.throwIfDisposed(),Object(f["b"])(1===this.size,()=>"The array must have only 1 element."),Object(p["a"])(this,[])};var m=n("deb3");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.asType=function(t){return this.throwIfDisposed(),Object(m["a"])(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
a["a"].prototype.as1D=function(){return this.throwIfDisposed(),Object(p["a"])(this,[this.size])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
a["a"].prototype.as2D=function(t,e){return this.throwIfDisposed(),Object(p["a"])(this,[t,e])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
a["a"].prototype.as3D=function(t,e,n){return this.throwIfDisposed(),Object(p["a"])(this,[t,e,n])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
a["a"].prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),Object(p["a"])(this,[t,e,n,r])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
a["a"].prototype.as5D=function(t,e,n,r,a){return this.throwIfDisposed(),Object(p["a"])(this,[t,e,n,r,a])};var b=n("220f");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.asin=function(){return this.throwIfDisposed(),Object(b["a"])(this)};var g=n("dc59");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.asinh=function(){return this.throwIfDisposed(),Object(g["a"])(this)};var y=n("7e36");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.atan=function(){return this.throwIfDisposed(),Object(y["a"])(this)};var x=n("6002");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.atan2=function(t){return this.throwIfDisposed(),Object(x["a"])(this,t)};var v=n("d1a8");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.atanh=function(){return this.throwIfDisposed(),Object(v["a"])(this)};var w=n("9748");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),Object(w["a"])(this,t,e,n,r)};var k=n("3b28");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),Object(k["a"])(this,t,e)};var O=n("71db");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.batchNorm=function(t,e,n,r,a){return this.throwIfDisposed(),Object(O["a"])(this,t,e,n,r,a)};var I=n("48db");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.broadcastTo=function(t){return this.throwIfDisposed(),Object(I["a"])(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
a["a"].prototype.cast=function(t){return this.throwIfDisposed(),Object(m["a"])(this,t)};var N=n("5960");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.ceil=function(){return this.throwIfDisposed(),Object(N["a"])(this)};var S=n("c08f");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.clipByValue=function(t,e){return this.throwIfDisposed(),Object(S["a"])(this,t,e)};var C=n("649e");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof a["a"]&&(t=[t]),Object(C["a"])([this,...t],e)};var j=n("7675");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.conv1d=function(t,e,n,r,a,s){return this.throwIfDisposed(),Object(j["a"])(this,t,e,n,r,a,s)};var T=n("cd1f");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.conv2dTranspose=function(t,e,n,r,a){return this.throwIfDisposed(),Object(T["a"])(this,t,e,n,r,a)};var E=n("dd7e");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.conv2d=function(t,e,n,r,a,s){return this.throwIfDisposed(),Object(E["a"])(this,t,e,n,r,a,s)};var A=n("eff7");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.cos=function(){return this.throwIfDisposed(),Object(A["a"])(this)};var $=n("c1a2");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.cosh=function(){return this.throwIfDisposed(),Object($["a"])(this)};var R=n("1e68");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),Object(R["a"])(this,t,e,n)};var D=n("364e");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),Object(D["a"])(this,t,e)};var F=n("c04e4"),_=n("838f");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
a["a"].prototype.depthwiseConv2D=function(t,e,n,r,a,s){return Object(F["b"])("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),Object(_["a"])(this,t,e,n,r,a,s)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
a["a"].prototype.depthwiseConv2d=function(t,e,n,r,a,s){return this.throwIfDisposed(),Object(_["a"])(this,t,e,n,r,a,s)};var M=n("c170");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.dilation2d=function(t,e,n,r,a){return this.throwIfDisposed(),Object(M["a"])(this,t,e,n,r,a)};var z=n("011b");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.divNoNan=function(t){return this.throwIfDisposed(),Object(z["a"])(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
a["a"].prototype.divStrict=function(t){return this.throwIfDisposed(),Object(o["b"])(this,t)};var L=n("c77c");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.div=function(t){return this.throwIfDisposed(),Object(L["a"])(this,t)};var P=n("29fc");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.dot=function(t){return this.throwIfDisposed(),Object(P["a"])(this,t)};var B=n("9e38");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.elu=function(){return this.throwIfDisposed(),Object(B["a"])(this)};var W=n("f1b5");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.equalStrict=function(t){return this.throwIfDisposed(),Object(W["a"])(this,t)};var V=n("b9b9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.equal=function(t){return this.throwIfDisposed(),Object(V["a"])(this,t)};var U=n("8e05");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.erf=function(){return this.throwIfDisposed(),Object(U["a"])(this)};var G=n("4f20");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.exp=function(){return this.throwIfDisposed(),Object(G["a"])(this)};var H=n("dae8");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.expandDims=function(t){return this.throwIfDisposed(),Object(H["a"])(this,t)};var q=n("1ba2");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.expm1=function(){return this.throwIfDisposed(),Object(q["a"])(this)};var K=n("1ab7");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.fft=function(){return this.throwIfDisposed(),Object(K["a"])(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
a["a"].prototype.flatten=function(){return this.throwIfDisposed(),Object(p["a"])(this,[this.size])};var X=n("d369");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.floor=function(){return this.throwIfDisposed(),Object(X["a"])(this)};var Y=n("508f");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.floorDiv=function(t){return this.throwIfDisposed(),Object(Y["a"])(this,t)};var Z=n("91a3");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.gather=function(t,e){return this.throwIfDisposed(),Object(Z["a"])(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
a["a"].prototype.greaterEqualStrict=function(t){return this.throwIfDisposed(),Object(W["b"])(this,t)};var J=n("bb2d");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.greaterEqual=function(t){return this.throwIfDisposed(),Object(J["a"])(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
a["a"].prototype.greaterStrict=function(t){return this.throwIfDisposed(),Object(W["c"])(this,t)};var Q=n("cef0");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.greater=function(t){return this.throwIfDisposed(),Object(Q["a"])(this,t)};var tt=n("4c7a");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.ifft=function(){return this.throwIfDisposed(),Object(tt["a"])(this)};var et=n("69dc");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.irfft=function(){return this.throwIfDisposed(),Object(et["a"])(this)};var nt=n("fc0b");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.isFinite=function(){return this.throwIfDisposed(),Object(nt["a"])(this)};var rt=n("5980");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.isInf=function(){return this.throwIfDisposed(),Object(rt["a"])(this)};var at=n("6fef");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.isNaN=function(){return this.throwIfDisposed(),Object(at["a"])(this)};var st=n("6f37");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.leakyRelu=function(t){return this.throwIfDisposed(),Object(st["a"])(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
a["a"].prototype.lessEqualStrict=function(t){return this.throwIfDisposed(),Object(W["d"])(this,t)};var it=n("b21c");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.lessEqual=function(t){return this.throwIfDisposed(),Object(it["a"])(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
a["a"].prototype.lessStrict=function(t){return this.throwIfDisposed(),Object(W["e"])(this,t)};var ot=n("e1fd");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.less=function(t){return this.throwIfDisposed(),Object(ot["a"])(this,t)};var ut=n("e101");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),Object(ut["a"])(this,t,e,n,r)};var ct=n("c314");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.logSigmoid=function(){return this.throwIfDisposed(),Object(ct["a"])(this)};var lt=n("804a");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.logSoftmax=function(t){return this.throwIfDisposed(),Object(lt["a"])(this,t)};var dt=n("afda");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.logSumExp=function(t,e){return this.throwIfDisposed(),Object(dt["a"])(this,t,e)};var ht=n("1359");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.log=function(){return this.throwIfDisposed(),Object(ht["a"])(this)};var pt=n("46b1");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.log1p=function(){return this.throwIfDisposed(),Object(pt["a"])(this)};var ft=n("e333");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.logicalAnd=function(t){return this.throwIfDisposed(),Object(ft["a"])(this,t)};var mt=n("ef00");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.logicalNot=function(){return this.throwIfDisposed(),Object(mt["a"])(this)};var bt=n("f183");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.logicalOr=function(t){return this.throwIfDisposed(),Object(bt["a"])(this,t)};var gt=n("d25f");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.logicalXor=function(t){return this.throwIfDisposed(),Object(gt["a"])(this,t)};var yt=n("487b");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.matMul=function(t,e,n){return this.throwIfDisposed(),Object(yt["a"])(this,t,e,n)};var xt=n("9fe6");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),Object(xt["a"])(this,t,e,n,r)};var vt=n("c021");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.max=function(t,e){return this.throwIfDisposed(),Object(vt["a"])(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
a["a"].prototype.maximumStrict=function(t){return this.throwIfDisposed(),Object(o["c"])(this,t)};var wt=n("09f4");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.maximum=function(t){return this.throwIfDisposed(),Object(wt["a"])(this,t)};var kt=n("122e");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.mean=function(t,e){return this.throwIfDisposed(),Object(kt["a"])(this,t,e)};var Ot=n("ae6d");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.min=function(t,e){return this.throwIfDisposed(),Object(Ot["a"])(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
a["a"].prototype.minimumStrict=function(t){return this.throwIfDisposed(),Object(o["d"])(this,t)};var It=n("f0e5");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.minimum=function(t){return this.throwIfDisposed(),Object(It["a"])(this,t)};var Nt=n("93db");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),Object(Nt["a"])(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
a["a"].prototype.modStrict=function(t){return this.throwIfDisposed(),Object(o["e"])(this,t)};var St=n("4611");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.mod=function(t){return this.throwIfDisposed(),Object(St["a"])(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
a["a"].prototype.mulStrict=function(t){return this.throwIfDisposed(),Object(o["f"])(this,t)};var Ct=n("a5aa");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.mul=function(t){return this.throwIfDisposed(),Object(Ct["a"])(this,t)};var jt=n("3bb7");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.neg=function(){return this.throwIfDisposed(),Object(jt["a"])(this)};var Tt=n("f757");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.norm=function(t,e,n){return this.throwIfDisposed(),Object(Tt["a"])(this,t,e,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
a["a"].prototype.notEqualStrict=function(t){return this.throwIfDisposed(),Object(W["f"])(this,t)};var Et=n("d4de");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.notEqual=function(t){return this.throwIfDisposed(),Object(Et["a"])(this,t)};var At=n("e22c");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),Object(At["a"])(this,t,e,n)};var $t=n("0db5");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.onesLike=function(){return this.throwIfDisposed(),Object($t["a"])(this)};var Rt=n("0eb5");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.pad=function(t,e){return this.throwIfDisposed(),Object(Rt["a"])(this,t,e)};var Dt=n("eaf4");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.pool=function(t,e,n,r,a){return this.throwIfDisposed(),Object(Dt["a"])(this,t,e,n,r,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
a["a"].prototype.powStrict=function(t){return this.throwIfDisposed(),Object(o["g"])(this,t)};var Ft=n("c9f1");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.pow=function(t){return this.throwIfDisposed(),Object(Ft["a"])(this,t)};var _t=n("520f");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.prelu=function(t){return this.throwIfDisposed(),Object(_t["a"])(this,t)};var Mt=n("f3ae");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.prod=function(t,e){return this.throwIfDisposed(),Object(Mt["a"])(this,t,e)};var zt=n("b500");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.reciprocal=function(){return this.throwIfDisposed(),Object(zt["a"])(this)};var Lt=n("917a");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.relu=function(){return this.throwIfDisposed(),Object(Lt["a"])(this)};var Pt=n("46a8");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.relu6=function(){return this.throwIfDisposed(),Object(Pt["a"])(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
a["a"].prototype.reshapeAs=function(t){return this.throwIfDisposed(),Object(p["a"])(this,t.shape)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
a["a"].prototype.reshape=function(t){return this.throwIfDisposed(),Object(p["a"])(this,t)};var Bt=n("73f8");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),Object(Bt["a"])(this,t,e,n)};var Wt=n("0f86");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),Object(Wt["a"])(this,t,e,n)};var Vt=n("d08e");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.reverse=function(t){return this.throwIfDisposed(),Object(Vt["a"])(this,t)};var Ut=n("b61d");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.rfft=function(){return this.throwIfDisposed(),Object(Ut["a"])(this)};var Gt=n("08a9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.round=function(){return this.throwIfDisposed(),Object(Gt["a"])(this)};var Ht=n("5f2a");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.rsqrt=function(){return this.throwIfDisposed(),Object(Ht["a"])(this)};var qt=n("b39e");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.selu=function(){return this.throwIfDisposed(),Object(qt["a"])(this)};var Kt=n("116b");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.separableConv2d=function(t,e,n,r,a,s){return this.throwIfDisposed(),Object(Kt["a"])(this,t,e,n,r,a,s)};var Xt=n("ffb3");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.sigmoid=function(){return this.throwIfDisposed(),Object(Xt["a"])(this)};var Yt=n("1df6");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.sign=function(){return this.throwIfDisposed(),Object(Yt["a"])(this)};var Zt=n("6932");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.sin=function(){return this.throwIfDisposed(),Object(Zt["a"])(this)};var Jt=n("5dc4");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.sinh=function(){return this.throwIfDisposed(),Object(Jt["a"])(this)};var Qt=n("6d3c");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.slice=function(t,e){return this.throwIfDisposed(),Object(Qt["a"])(this,t,e)};var te=n("5f87");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.softmax=function(t){return this.throwIfDisposed(),Object(te["a"])(this,t)};var ee=n("9ffd");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.softplus=function(){return this.throwIfDisposed(),Object(ee["a"])(this)};var ne=n("7580");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Object(ne["a"])(this,t,e)};var re=n("45bb");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.split=function(t,e){return this.throwIfDisposed(),Object(re["a"])(this,t,e)};var ae=n("163a");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.sqrt=function(){return this.throwIfDisposed(),Object(ae["a"])(this)};var se=n("93b2");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.square=function(){return this.throwIfDisposed(),Object(se["a"])(this)};var ie=n("4184");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.squaredDifference=function(t){return this.throwIfDisposed(),Object(ie["a"])(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
a["a"].prototype.squaredDifferenceStrict=function(t){return this.throwIfDisposed(),Object(o["h"])(this,t)};var oe=n("d1f4");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.squeeze=function(t){return this.throwIfDisposed(),Object(oe["a"])(this,t)};var ue=n("d54d");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof a["a"]?[this,t]:[this,...t];return Object(ue["a"])(n,e)};var ce=n("2fb1");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.step=function(t){return this.throwIfDisposed(),Object(ce["a"])(this,t)};var le=n("de1a");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.stridedSlice=function(t,e,n,r,a,s,i,o){return this.throwIfDisposed(),Object(le["a"])(this,t,e,n,r,a,s,i,o)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
a["a"].prototype.subStrict=function(t){return this.throwIfDisposed(),Object(o["i"])(this,t)};var de=n("a009");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.sub=function(t){return this.throwIfDisposed(),Object(de["a"])(this,t)};var he=n("e053");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.sum=function(t,e){return this.throwIfDisposed(),Object(he["a"])(this,t,e)};var pe=n("d30a");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.tan=function(){return this.throwIfDisposed(),Object(pe["a"])(this)};var fe=n("8888");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.tanh=function(){return this.throwIfDisposed(),Object(fe["a"])(this)};var me=n("8d71");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.tile=function(t){return this.throwIfDisposed(),Object(me["a"])(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
a["a"].prototype.toBool=function(){return this.throwIfDisposed(),Object(m["a"])(this,"bool")},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
a["a"].prototype.toFloat=function(){return this.throwIfDisposed(),Object(m["a"])(this,"float32")},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
a["a"].prototype.toInt=function(){return this.throwIfDisposed(),Object(m["a"])(this,"int32")};var be=n("5616");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.topk=function(t,e){return this.throwIfDisposed(),Object(be["a"])(this,t,e)};var ge=n("c912");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.transpose=function(t){return this.throwIfDisposed(),Object(ge["a"])(this,t)};var ye=n("853e");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.unique=function(t){return this.throwIfDisposed(),Object(ye["a"])(this,t)};var xe=n("53f2");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),Object(xe["a"])(this,t,e)};var ve=n("3a44");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.unstack=function(t){return this.throwIfDisposed(),Object(ve["a"])(this,t)};var we=n("6791");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.where=function(t,e){return this.throwIfDisposed(),Object(we["a"])(t,this,e)};var ke=n("a09b");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */a["a"].prototype.zerosLike=function(){return this.throwIfDisposed(),Object(ke["a"])(this)}},f74c:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("34d7"),a=n("a3f7"),s=n("6ad5");
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function i(t,e){const n=Object(a["a"])(t,"x","setdiff1d"),i=Object(a["a"])(e,"y","setdiff1d");s["b"](n.dtype===i.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${i.dtype}).`),s["b"](1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),s["b"](1===i.rank,()=>`y should be 1D tensor, but got y (${i.shape}).`);const o=await n.data(),u=await i.data(),c=new Set(u);let l=0;for(let r=0;r<o.length;r++)c.has(o[r])||l++;const d=new r["b"]([l],n.dtype),h=new r["b"]([l],"int32");for(let r=0,a=0;r<o.length;r++)c.has(o[r])||(d.values[a]=o[r],h.values[a]=r,a++);return[d.toTensor(),h.toTensor()]}const o=i},f757:function(t,e,n){"use strict";n.d(e,"a",(function(){return y}));var r=n("a3f7"),a=n("6ad5"),s=n("8ae0"),i=n("36e5"),o=n("c021"),u=n("ae6d"),c=n("54ef"),l=n("c9f1"),d=n("35c9"),h=n("015f"),p=n("163a"),f=n("93b2"),m=n("e053");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function b(t,e="euclidean",n=null,s=!1){t=Object(r["a"])(t,"x","norm");const o=g(t,e,n);let u=o.shape;if(s){const e=Object(a["I"])(n,t.shape);u=i["e"](o.shape,e)}return Object(d["a"])(o,u)}function g(t,e,n=null){if(0===t.rank)return Object(s["a"])(t);if(1!==t.rank&&null===n)return g(Object(d["a"])(t,[-1]),e,n);if(1===t.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===e)return Object(m["a"])(Object(s["a"])(t),n);if(e===1/0)return Object(o["a"])(Object(s["a"])(t),n);if(e===-1/0)return Object(u["a"])(Object(s["a"])(t),n);if("euclidean"===e||2===e)return Object(p["a"])(Object(m["a"])(Object(l["a"])(Object(s["a"])(t),Object(h["a"])(2,"int32")),n));throw new Error("Error in norm: invalid ord value: "+e)}if(Array.isArray(n)&&2===n.length){if(1===e)return Object(o["a"])(Object(m["a"])(Object(s["a"])(t),n[0]),n[1]-1);if(e===1/0)return Object(o["a"])(Object(m["a"])(Object(s["a"])(t),n[1]),n[0]);if(e===-1/0)return Object(u["a"])(Object(m["a"])(Object(s["a"])(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return Object(p["a"])(Object(m["a"])(Object(f["a"])(t),n));throw new Error("Error in norm: invalid ord value: "+e)}throw new Error("Error in norm: invalid axis: "+n)}const y=Object(c["b"])({norm_:b})},f8bb:function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return I})),n.d(e,"i",(function(){return C})),n.d(e,"c",(function(){return j})),n.d(e,"f",(function(){return T})),n.d(e,"e",(function(){return $})),n.d(e,"d",(function(){return R})),n.d(e,"k",(function(){return F})),n.d(e,"g",(function(){return _})),n.d(e,"h",(function(){return M})),n.d(e,"j",(function(){return z})),n.d(e,"b",(function(){return L}));var r=n("fa11"),a=n("46cc"),s=n("d303"),i=n("526c"),o=n("aeab"),u=n("c8ad"),c=n("5874"),l=n("9489"),d=n("04b8"),h=n("f011"),p=n("d556"),f=n("3d50"),m=n("6e83"),b=n("29d8"),g=n("a80f"),y=n("673d"),x=n("3bfc"),v=n("31bb"),w=n("dbf3"),k=n("113e"),O=n("9e7b");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class I{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[o,u,c,l,d,h,p,g,b,f,y,x,v,w,k,O,m],e=[].concat(...t.map(t=>t.json));this.opMappers=e.reduce((t,e)=>(t[e.tfOpName]=e,t),{})}transformGraph(t,e={}){const n=t.node,r=[],a=[],s=[],o=n.reduce((t,e)=>(t[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?r.push(t[e.name]):"Const"===e.op?a.push(t[e.name]):null!=e.input&&0!==e.input.length||s.push(t[e.name]),t),{});let u=[];const c=[];let l={},d={};null!=e&&(l=this.mapSignatureEntries(e.inputs),d=this.mapSignatureEntries(e.outputs));const h=Object.keys(o);h.forEach(t=>{const e=o[t];e.inputNames.forEach(t=>{const[n]=Object(i["b"])(t);e.inputs.push(o[n]),o[n].children.push(e)})}),0===Object.keys(d).length?h.forEach(t=>{const e=o[t];0===e.children.length&&c.push(e)}):Object.keys(d).forEach(t=>{const[e]=Object(i["b"])(t),n=o[e];null!=n&&(n.signatureKey=d[t],c.push(n))}),Object.keys(l).length>0?Object.keys(l).forEach(t=>{const[e]=Object(i["b"])(t),n=o[e];n&&(n.signatureKey=l[t],u.push(n))}):u=r;let p={};null!=t.library&&null!=t.library.function&&(p=t.library.function.reduce((t,e)=>(t[e.signature.name]=this.mapFunction(e),t),{}));const f={nodes:o,inputs:u,outputs:c,weights:a,placeholders:r,signature:e,functions:p};return s.length>0&&(f.initNodes=s),f}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,n)=>(e[t[n].name]=n,e),{})}mapNode(t){const e=Object(s["a"])(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(t=>t.startsWith("^")?t.substr(1):t),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr};return null!=e.inputs&&(n.inputParams=e.inputs.reduce((t,e)=>(t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce((e,n)=>{const r=n.type;let a=void 0;switch(n.type){case"string":a=C(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=C(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=M(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=M(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=T(t.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=T(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=_(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=_(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=j(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=j(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=L(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=L(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=F(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=F(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=z(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=z(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=$(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=$(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=R(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=R(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=A(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=A(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${t.op}`)}return e[n.name]={value:a,type:r},e},{})),n}mapFunction(t){const e=t.nodeDef,n=[],r=[];let a={};null!=e&&(a=e.reduce((t,e)=>(t[e.name]=this.mapNode(e),"Const"===e.op&&r.push(t[e.name]),t),{}));const s=[],o=[];t.signature.inputArg.forEach(t=>{const[e]=Object(i["b"])(t.name),n={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:E(t.type),type:"dtype"}},children:[]};n.signatureKey=t.name,s.push(n),a[e]=n});const u=Object.keys(a);u.forEach(t=>{const e=a[t];e.inputNames.forEach(t=>{const[n]=Object(i["b"])(t);e.inputs.push(a[n]),a[n].children.push(e)})});const c=t.ret;t.signature.outputArg.forEach(t=>{const[e,n]=Object(i["b"])(c[t.name]),r=a[e];null!=r&&(r.defaultOutput=n,o.push(r))});const l=this.mapArgsToSignature(t);return{nodes:a,inputs:s,outputs:o,weights:r,placeholders:n,signature:l}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((t,e)=>(t[e.name]=this.mapArgToTensorInfo(e),t),{}),outputs:t.signature.outputArg.reduce((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e),{})}}mapArgToTensorInfo(t,e){let n=t.name;return null!=e&&(n=e[n]),{name:n,dtype:t.type}}}function N(e){const n=Object(r["env"])().global;if("undefined"!==typeof n.atob)return n.atob(e);if("undefined"!==typeof t)return new t(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function S(t,e){const n=Array.isArray(t)?String.fromCharCode.apply(null,t):N(t);return e?n:n.toLowerCase()}function C(t,e,n,r=!1){const a=t[e];return null!=a?S(a.s,r):n}function j(t,e,n){const r=t[e];return r?r.b:n}function T(t,e,n){const r=t[e]||{},a=null!=r["i"]?r["i"]:null!=r["f"]?r["f"]:n;return"number"===typeof a?a:parseInt(a,10)}function E(t){switch("string"===typeof t&&(t=a["a"][t]),t){case a["a"].DT_FLOAT:return"float32";case a["a"].DT_INT32:case a["a"].DT_INT64:case a["a"].DT_INT8:case a["a"].DT_UINT8:return"int32";case a["a"].DT_BOOL:return"bool";case a["a"].DT_DOUBLE:return"float32";case a["a"].DT_STRING:return"string";default:return null}}function A(t,e,n){const r=t[e];return r&&r.func?r.func.name:n}function $(t,e,n){const r=t[e];return r&&r.type?E(r.type):n}function R(t,e,n){const r=t[e];return r&&r.list&&r.list.type?r.list.type.map(t=>E(t)):n}function D(t){if(!t.unknownRank)return null!=t.dim?t.dim.map(t=>"number"===typeof t.size?t.size:parseInt(t.size,10)):[]}function F(t,e,n){const r=t[e];return r&&r.shape?D(r.shape):n}function _(t,e,n){const r=t[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(t=>"number"===typeof t?t:parseInt(t,10)):n}function M(t,e,n,r=!1){const a=t[e];return a&&a.list&&a.list.s?a.list.s.map(t=>S(t,r)):n}function z(t,e,n){const r=t[e];return r&&r.list&&r.list.shape?r.list.shape.map(t=>D(t)):n}function L(t,e,n){const r=t[e];return r&&r.list&&r.list.b?r.list.b:n}}).call(this,n("b639").Buffer)},fa11:function(t,e,n){"use strict";n.r(e),n.d(e,"AdadeltaOptimizer",(function(){return je})),n.d(e,"AdagradOptimizer",(function(){return Ee})),n.d(e,"AdamOptimizer",(function(){return Re})),n.d(e,"AdamaxOptimizer",(function(){return _e})),n.d(e,"MomentumOptimizer",(function(){return ze})),n.d(e,"Optimizer",(function(){return Ce})),n.d(e,"RMSPropOptimizer",(function(){return Le})),n.d(e,"SGDOptimizer",(function(){return Me})),n.d(e,"Tensor",(function(){return st["a"]})),n.d(e,"TensorBuffer",(function(){return st["b"]})),n.d(e,"Variable",(function(){return st["c"]})),n.d(e,"Rank",(function(){return Pe["a"]})),n.d(e,"sumOutType",(function(){return Pe["b"]})),n.d(e,"upcastType",(function(){return Pe["c"]})),n.d(e,"abs",(function(){return Be["b"]})),n.d(e,"acos",(function(){return Be["c"]})),n.d(e,"acosh",(function(){return Be["d"]})),n.d(e,"add",(function(){return Be["e"]})),n.d(e,"addN",(function(){return Be["f"]})),n.d(e,"all",(function(){return Be["h"]})),n.d(e,"any",(function(){return Be["i"]})),n.d(e,"argMax",(function(){return Be["j"]})),n.d(e,"argMin",(function(){return Be["k"]})),n.d(e,"asin",(function(){return Be["l"]})),n.d(e,"asinh",(function(){return Be["m"]})),n.d(e,"atan",(function(){return Be["n"]})),n.d(e,"atan2",(function(){return Be["o"]})),n.d(e,"atanh",(function(){return Be["p"]})),n.d(e,"avgPool",(function(){return Be["q"]})),n.d(e,"avgPool3d",(function(){return Be["r"]})),n.d(e,"basicLSTMCell",(function(){return Be["s"]})),n.d(e,"batchToSpaceND",(function(){return Be["x"]})),n.d(e,"batchNorm",(function(){return Be["t"]})),n.d(e,"batchNorm2d",(function(){return Be["u"]})),n.d(e,"batchNorm3d",(function(){return Be["v"]})),n.d(e,"batchNorm4d",(function(){return Be["w"]})),n.d(e,"bincount",(function(){return Be["y"]})),n.d(e,"broadcastTo",(function(){return Be["A"]})),n.d(e,"buffer",(function(){return Be["B"]})),n.d(e,"cast",(function(){return Be["C"]})),n.d(e,"ceil",(function(){return Be["D"]})),n.d(e,"clipByValue",(function(){return Be["E"]})),n.d(e,"clone",(function(){return Be["F"]})),n.d(e,"complex",(function(){return Be["G"]})),n.d(e,"concat",(function(){return Be["H"]})),n.d(e,"concat1d",(function(){return Be["I"]})),n.d(e,"concat2d",(function(){return Be["J"]})),n.d(e,"concat3d",(function(){return Be["K"]})),n.d(e,"concat4d",(function(){return Be["L"]})),n.d(e,"conv1d",(function(){return Be["M"]})),n.d(e,"conv2d",(function(){return Be["N"]})),n.d(e,"conv2dTranspose",(function(){return Be["O"]})),n.d(e,"conv3d",(function(){return Be["P"]})),n.d(e,"conv3dTranspose",(function(){return Be["Q"]})),n.d(e,"cos",(function(){return Be["R"]})),n.d(e,"cosh",(function(){return Be["S"]})),n.d(e,"cumsum",(function(){return Be["U"]})),n.d(e,"denseBincount",(function(){return Be["V"]})),n.d(e,"depthToSpace",(function(){return Be["W"]})),n.d(e,"depthwiseConv2d",(function(){return Be["X"]})),n.d(e,"diag",(function(){return Be["Y"]})),n.d(e,"dilation2d",(function(){return Be["Z"]})),n.d(e,"div",(function(){return Be["ab"]})),n.d(e,"divNoNan",(function(){return Be["bb"]})),n.d(e,"dot",(function(){return Be["db"]})),n.d(e,"elu",(function(){return Be["fb"]})),n.d(e,"equal",(function(){return Be["hb"]})),n.d(e,"erf",(function(){return Be["jb"]})),n.d(e,"exp",(function(){return Be["kb"]})),n.d(e,"expandDims",(function(){return Be["lb"]})),n.d(e,"expm1",(function(){return Be["mb"]})),n.d(e,"eye",(function(){return Be["nb"]})),n.d(e,"fill",(function(){return Be["pb"]})),n.d(e,"floor",(function(){return Be["qb"]})),n.d(e,"floorDiv",(function(){return Be["rb"]})),n.d(e,"gather",(function(){return Be["tb"]})),n.d(e,"greater",(function(){return Be["vb"]})),n.d(e,"greaterEqual",(function(){return Be["wb"]})),n.d(e,"imag",(function(){return Be["Ab"]})),n.d(e,"isFinite",(function(){return Be["Eb"]})),n.d(e,"isInf",(function(){return Be["Fb"]})),n.d(e,"isNaN",(function(){return Be["Gb"]})),n.d(e,"leakyRelu",(function(){return Be["Hb"]})),n.d(e,"less",(function(){return Be["Ib"]})),n.d(e,"lessEqual",(function(){return Be["Jb"]})),n.d(e,"linspace",(function(){return Be["Nb"]})),n.d(e,"localResponseNormalization",(function(){return Be["Ob"]})),n.d(e,"log",(function(){return Be["Pb"]})),n.d(e,"log1p",(function(){return Be["Qb"]})),n.d(e,"logSigmoid",(function(){return Be["Rb"]})),n.d(e,"logSoftmax",(function(){return Be["Sb"]})),n.d(e,"logSumExp",(function(){return Be["Tb"]})),n.d(e,"logicalAnd",(function(){return Be["Ub"]})),n.d(e,"logicalNot",(function(){return Be["Vb"]})),n.d(e,"logicalOr",(function(){return Be["Wb"]})),n.d(e,"logicalXor",(function(){return Be["Xb"]})),n.d(e,"matMul",(function(){return Be["Zb"]})),n.d(e,"max",(function(){return Be["ac"]})),n.d(e,"maxPool",(function(){return Be["bc"]})),n.d(e,"maxPool3d",(function(){return Be["cc"]})),n.d(e,"maxPoolWithArgmax",(function(){return Be["dc"]})),n.d(e,"maximum",(function(){return Be["ec"]})),n.d(e,"mean",(function(){return Be["gc"]})),n.d(e,"min",(function(){return Be["hc"]})),n.d(e,"minimum",(function(){return Be["ic"]})),n.d(e,"mirrorPad",(function(){return Be["kc"]})),n.d(e,"mod",(function(){return Be["lc"]})),n.d(e,"moments",(function(){return Be["nc"]})),n.d(e,"mul",(function(){return Be["pc"]})),n.d(e,"multiRNNCell",(function(){return Be["rc"]})),n.d(e,"multinomial",(function(){return Be["sc"]})),n.d(e,"neg",(function(){return Be["tc"]})),n.d(e,"notEqual",(function(){return Be["vc"]})),n.d(e,"oneHot",(function(){return Be["xc"]})),n.d(e,"ones",(function(){return Be["yc"]})),n.d(e,"onesLike",(function(){return Be["zc"]})),n.d(e,"outerProduct",(function(){return Be["Bc"]})),n.d(e,"pad",(function(){return Be["Cc"]})),n.d(e,"pad1d",(function(){return Be["Dc"]})),n.d(e,"pad2d",(function(){return Be["Ec"]})),n.d(e,"pad3d",(function(){return Be["Fc"]})),n.d(e,"pad4d",(function(){return Be["Gc"]})),n.d(e,"pool",(function(){return Be["Hc"]})),n.d(e,"pow",(function(){return Be["Ic"]})),n.d(e,"prelu",(function(){return Be["Kc"]})),n.d(e,"print",(function(){return Be["Lc"]})),n.d(e,"prod",(function(){return Be["Mc"]})),n.d(e,"rand",(function(){return Be["Nc"]})),n.d(e,"randomGamma",(function(){return Be["Oc"]})),n.d(e,"randomNormal",(function(){return Be["Pc"]})),n.d(e,"randomUniform",(function(){return Be["Qc"]})),n.d(e,"range",(function(){return Be["Rc"]})),n.d(e,"real",(function(){return Be["Sc"]})),n.d(e,"reciprocal",(function(){return Be["Tc"]})),n.d(e,"relu",(function(){return Be["Uc"]})),n.d(e,"relu6",(function(){return Be["Vc"]})),n.d(e,"reshape",(function(){return Be["Wc"]})),n.d(e,"reverse",(function(){return Be["Xc"]})),n.d(e,"reverse1d",(function(){return Be["Yc"]})),n.d(e,"reverse2d",(function(){return Be["Zc"]})),n.d(e,"reverse3d",(function(){return Be["ad"]})),n.d(e,"reverse4d",(function(){return Be["bd"]})),n.d(e,"round",(function(){return Be["dd"]})),n.d(e,"rsqrt",(function(){return Be["ed"]})),n.d(e,"scalar",(function(){return Be["fd"]})),n.d(e,"selu",(function(){return Be["hd"]})),n.d(e,"separableConv2d",(function(){return Be["id"]})),n.d(e,"setdiff1dAsync",(function(){return Be["jd"]})),n.d(e,"sigmoid",(function(){return Be["kd"]})),n.d(e,"sign",(function(){return Be["ld"]})),n.d(e,"sin",(function(){return Be["nd"]})),n.d(e,"sinh",(function(){return Be["od"]})),n.d(e,"slice",(function(){return Be["pd"]})),n.d(e,"slice1d",(function(){return Be["qd"]})),n.d(e,"slice2d",(function(){return Be["rd"]})),n.d(e,"slice3d",(function(){return Be["sd"]})),n.d(e,"slice4d",(function(){return Be["td"]})),n.d(e,"softmax",(function(){return Be["ud"]})),n.d(e,"softplus",(function(){return Be["vd"]})),n.d(e,"spaceToBatchND",(function(){return Be["wd"]})),n.d(e,"fft",(function(){return Be["ob"]})),n.d(e,"ifft",(function(){return Be["zb"]})),n.d(e,"irfft",(function(){return Be["Db"]})),n.d(e,"rfft",(function(){return Be["cd"]})),n.d(e,"split",(function(){return Be["zd"]})),n.d(e,"sqrt",(function(){return Be["Ad"]})),n.d(e,"square",(function(){return Be["Bd"]})),n.d(e,"squaredDifference",(function(){return Be["Cd"]})),n.d(e,"squeeze",(function(){return Be["Ed"]})),n.d(e,"stack",(function(){return Be["Fd"]})),n.d(e,"step",(function(){return Be["Gd"]})),n.d(e,"stridedSlice",(function(){return Be["Hd"]})),n.d(e,"sub",(function(){return Be["Id"]})),n.d(e,"sum",(function(){return Be["Kd"]})),n.d(e,"tan",(function(){return Be["Ld"]})),n.d(e,"tanh",(function(){return Be["Md"]})),n.d(e,"tensor",(function(){return Be["Nd"]})),n.d(e,"tensor1d",(function(){return Be["Od"]})),n.d(e,"tensor2d",(function(){return Be["Pd"]})),n.d(e,"tensor3d",(function(){return Be["Qd"]})),n.d(e,"tensor4d",(function(){return Be["Rd"]})),n.d(e,"tensor5d",(function(){return Be["Sd"]})),n.d(e,"tensor6d",(function(){return Be["Td"]})),n.d(e,"tile",(function(){return Be["Ud"]})),n.d(e,"topk",(function(){return Be["Vd"]})),n.d(e,"truncatedNormal",(function(){return Be["Xd"]})),n.d(e,"unique",(function(){return Be["Yd"]})),n.d(e,"unsortedSegmentSum",(function(){return Be["Zd"]})),n.d(e,"unstack",(function(){return Be["ae"]})),n.d(e,"variable",(function(){return Be["be"]})),n.d(e,"where",(function(){return Be["ce"]})),n.d(e,"whereAsync",(function(){return Be["de"]})),n.d(e,"zeros",(function(){return Be["ee"]})),n.d(e,"zerosLike",(function(){return Be["fe"]})),n.d(e,"booleanMaskAsync",(function(){return Be["z"]})),n.d(e,"equalStrict",(function(){return Be["ib"]})),n.d(e,"greaterEqualStrict",(function(){return Be["xb"]})),n.d(e,"greaterStrict",(function(){return Be["yb"]})),n.d(e,"lessEqualStrict",(function(){return Be["Kb"]})),n.d(e,"lessStrict",(function(){return Be["Lb"]})),n.d(e,"notEqualStrict",(function(){return Be["wc"]})),n.d(e,"addStrict",(function(){return Be["g"]})),n.d(e,"divStrict",(function(){return Be["cb"]})),n.d(e,"maximumStrict",(function(){return Be["fc"]})),n.d(e,"minimumStrict",(function(){return Be["jc"]})),n.d(e,"modStrict",(function(){return Be["mc"]})),n.d(e,"mulStrict",(function(){return Be["qc"]})),n.d(e,"powStrict",(function(){return Be["Jc"]})),n.d(e,"squaredDifferenceStrict",(function(){return Be["Dd"]})),n.d(e,"subStrict",(function(){return Be["Jd"]})),n.d(e,"transpose",(function(){return Be["Wd"]})),n.d(e,"norm",(function(){return Be["uc"]})),n.d(e,"movingAverage",(function(){return Be["oc"]})),n.d(e,"scatterND",(function(){return Be["gd"]})),n.d(e,"sparseToDense",(function(){return Be["xd"]})),n.d(e,"gatherND",(function(){return Be["ub"]})),n.d(e,"dropout",(function(){return Be["eb"]})),n.d(e,"enclosingPowerOfTwo",(function(){return Be["gb"]})),n.d(e,"cosineWindow",(function(){return Be["T"]})),n.d(e,"inTopKAsync",(function(){return Be["Cb"]})),n.d(e,"op",(function(){return Be["Ac"]})),n.d(e,"OP_SCOPE_SUFFIX",(function(){return Be["a"]})),n.d(e,"image",(function(){return Be["Bb"]})),n.d(e,"linalg",(function(){return Be["Mb"]})),n.d(e,"losses",(function(){return Be["Yb"]})),n.d(e,"spectral",(function(){return Be["yd"]})),n.d(e,"fused",(function(){return Be["sb"]})),n.d(e,"signal",(function(){return Be["md"]})),n.d(e,"Reduction",(function(){return We["a"]})),n.d(e,"train",(function(){return Ue})),n.d(e,"enableProdMode",(function(){return ye["g"]})),n.d(e,"enableDebugMode",(function(){return ye["f"]})),n.d(e,"disableDeprecationWarnings",(function(){return ye["c"]})),n.d(e,"deprecationWarn",(function(){return ye["b"]})),n.d(e,"disposeVariables",(function(){return ye["e"]})),n.d(e,"engine",(function(){return ye["h"]})),n.d(e,"memory",(function(){return ye["m"]})),n.d(e,"profile",(function(){return ye["n"]})),n.d(e,"tidy",(function(){return ye["t"]})),n.d(e,"dispose",(function(){return ye["d"]})),n.d(e,"keep",(function(){return ye["l"]})),n.d(e,"time",(function(){return ye["u"]})),n.d(e,"setBackend",(function(){return ye["r"]})),n.d(e,"ready",(function(){return ye["o"]})),n.d(e,"getBackend",(function(){return ye["k"]})),n.d(e,"removeBackend",(function(){return ye["q"]})),n.d(e,"findBackend",(function(){return ye["i"]})),n.d(e,"findBackendFactory",(function(){return ye["j"]})),n.d(e,"registerBackend",(function(){return ye["p"]})),n.d(e,"backend",(function(){return ye["a"]})),n.d(e,"setPlatform",(function(){return ye["s"]})),n.d(e,"getKernel",(function(){return Bt["c"]})),n.d(e,"getGradient",(function(){return Bt["b"]})),n.d(e,"getKernelsForBackend",(function(){return Bt["d"]})),n.d(e,"registerKernel",(function(){return Bt["f"]})),n.d(e,"registerGradient",(function(){return Bt["e"]})),n.d(e,"unregisterKernel",(function(){return Bt["h"]})),n.d(e,"unregisterGradient",(function(){return Bt["g"]})),n.d(e,"copyRegisteredKernels",(function(){return Bt["a"]})),n.d(e,"customGrad",(function(){return Ne["a"]})),n.d(e,"grad",(function(){return Ne["b"]})),n.d(e,"grads",(function(){return Ne["c"]})),n.d(e,"valueAndGrad",(function(){return Ne["d"]})),n.d(e,"valueAndGrads",(function(){return Ne["e"]})),n.d(e,"variableGrads",(function(){return Ne["f"]})),n.d(e,"Environment",(function(){return p["b"]})),n.d(e,"env",(function(){return p["c"]})),n.d(e,"ENV",(function(){return p["a"]})),n.d(e,"version_core",(function(){return ge})),n.d(e,"nextFrame",(function(){return He})),n.d(e,"browser",(function(){return s})),n.d(e,"io",(function(){return r})),n.d(e,"math",(function(){return a})),n.d(e,"serialization",(function(){return u})),n.d(e,"test_util",(function(){return me})),n.d(e,"util",(function(){return be})),n.d(e,"backend_util",(function(){return l})),n.d(e,"tensor_util",(function(){return fe})),n.d(e,"slice_util",(function(){return o})),n.d(e,"gather_util",(function(){return i})),n.d(e,"scatter_util",(function(){return Kt})),n.d(e,"device_util",(function(){return Fn})),n.d(e,"kernel_impls",(function(){return d})),n.d(e,"KernelBackend",(function(){return zn["b"]})),n.d(e,"DataStorage",(function(){return zn["a"]})),n.d(e,"Abs",(function(){return Pt["a"]})),n.d(e,"Acos",(function(){return Pt["b"]})),n.d(e,"Acosh",(function(){return Pt["c"]})),n.d(e,"Add",(function(){return Pt["d"]})),n.d(e,"AddN",(function(){return Pt["e"]})),n.d(e,"All",(function(){return Pt["f"]})),n.d(e,"Any",(function(){return Pt["g"]})),n.d(e,"ArgMax",(function(){return Pt["h"]})),n.d(e,"ArgMin",(function(){return Pt["i"]})),n.d(e,"Asin",(function(){return Pt["j"]})),n.d(e,"Asinh",(function(){return Pt["k"]})),n.d(e,"Atan",(function(){return Pt["l"]})),n.d(e,"Atanh",(function(){return Pt["n"]})),n.d(e,"Atan2",(function(){return Pt["m"]})),n.d(e,"AvgPool",(function(){return Pt["o"]})),n.d(e,"AvgPoolGrad",(function(){return Pt["r"]})),n.d(e,"AvgPool3D",(function(){return Pt["p"]})),n.d(e,"AvgPool3DGrad",(function(){return Pt["q"]})),n.d(e,"BatchMatMul",(function(){return Pt["s"]})),n.d(e,"BatchToSpaceND",(function(){return Pt["t"]})),n.d(e,"Bincount",(function(){return Pt["u"]})),n.d(e,"BroadcastTo",(function(){return Pt["v"]})),n.d(e,"Cast",(function(){return Pt["w"]})),n.d(e,"Ceil",(function(){return Pt["x"]})),n.d(e,"ClipByValue",(function(){return Pt["y"]})),n.d(e,"Complex",(function(){return Pt["z"]})),n.d(e,"ComplexAbs",(function(){return Pt["A"]})),n.d(e,"Concat",(function(){return Pt["B"]})),n.d(e,"Conv2D",(function(){return Pt["C"]})),n.d(e,"Conv2DBackpropFilter",(function(){return Pt["D"]})),n.d(e,"Conv2DBackpropInput",(function(){return Pt["E"]})),n.d(e,"Conv3D",(function(){return Pt["F"]})),n.d(e,"Conv3DBackpropFilterV2",(function(){return Pt["G"]})),n.d(e,"Conv3DBackpropInputV2",(function(){return Pt["H"]})),n.d(e,"Cos",(function(){return Pt["I"]})),n.d(e,"Cosh",(function(){return Pt["J"]})),n.d(e,"Cumsum",(function(){return Pt["L"]})),n.d(e,"CropAndResize",(function(){return Pt["K"]})),n.d(e,"DenseBincount",(function(){return Pt["M"]})),n.d(e,"DepthToSpace",(function(){return Pt["N"]})),n.d(e,"DepthwiseConv2dNative",(function(){return Pt["O"]})),n.d(e,"DepthwiseConv2dNativeBackpropFilter",(function(){return Pt["P"]})),n.d(e,"DepthwiseConv2dNativeBackpropInput",(function(){return Pt["Q"]})),n.d(e,"Diag",(function(){return Pt["R"]})),n.d(e,"Dilation2D",(function(){return Pt["S"]})),n.d(e,"Dilation2DBackpropInput",(function(){return Pt["U"]})),n.d(e,"Dilation2DBackpropFilter",(function(){return Pt["T"]})),n.d(e,"RealDiv",(function(){return Pt["kc"]})),n.d(e,"Elu",(function(){return Pt["V"]})),n.d(e,"EluGrad",(function(){return Pt["W"]})),n.d(e,"Erf",(function(){return Pt["Y"]})),n.d(e,"Equal",(function(){return Pt["X"]})),n.d(e,"Exp",(function(){return Pt["Z"]})),n.d(e,"ExpandDims",(function(){return Pt["ab"]})),n.d(e,"Expm1",(function(){return Pt["bb"]})),n.d(e,"FFT",(function(){return Pt["cb"]})),n.d(e,"Fill",(function(){return Pt["db"]})),n.d(e,"FlipLeftRight",(function(){return Pt["eb"]})),n.d(e,"Floor",(function(){return Pt["fb"]})),n.d(e,"FloorDiv",(function(){return Pt["gb"]})),n.d(e,"FusedBatchNorm",(function(){return Pt["ib"]})),n.d(e,"GatherV2",(function(){return Pt["mb"]})),n.d(e,"GatherNd",(function(){return Pt["lb"]})),n.d(e,"Greater",(function(){return Pt["nb"]})),n.d(e,"GreaterEqual",(function(){return Pt["ob"]})),n.d(e,"Identity",(function(){return Pt["qb"]})),n.d(e,"IFFT",(function(){return Pt["pb"]})),n.d(e,"Imag",(function(){return Pt["rb"]})),n.d(e,"IsFinite",(function(){return Pt["sb"]})),n.d(e,"IsInf",(function(){return Pt["tb"]})),n.d(e,"IsNan",(function(){return Pt["ub"]})),n.d(e,"LeakyRelu",(function(){return Pt["xb"]})),n.d(e,"Less",(function(){return Pt["yb"]})),n.d(e,"LessEqual",(function(){return Pt["zb"]})),n.d(e,"LinSpace",(function(){return Pt["Ab"]})),n.d(e,"Log",(function(){return Pt["Bb"]})),n.d(e,"Log1p",(function(){return Pt["Cb"]})),n.d(e,"LogicalAnd",(function(){return Pt["Eb"]})),n.d(e,"LogicalNot",(function(){return Pt["Fb"]})),n.d(e,"LogicalOr",(function(){return Pt["Gb"]})),n.d(e,"LogSoftmax",(function(){return Pt["Db"]})),n.d(e,"LRN",(function(){return Pt["vb"]})),n.d(e,"LRNGrad",(function(){return Pt["wb"]})),n.d(e,"Max",(function(){return Pt["Hb"]})),n.d(e,"Maximum",(function(){return Pt["Nb"]})),n.d(e,"MaxPool",(function(){return Pt["Ib"]})),n.d(e,"MaxPoolGrad",(function(){return Pt["Lb"]})),n.d(e,"MaxPool3D",(function(){return Pt["Jb"]})),n.d(e,"MaxPool3DGrad",(function(){return Pt["Kb"]})),n.d(e,"MaxPoolWithArgmax",(function(){return Pt["Mb"]})),n.d(e,"Mean",(function(){return Pt["Ob"]})),n.d(e,"Min",(function(){return Pt["Pb"]})),n.d(e,"Minimum",(function(){return Pt["Qb"]})),n.d(e,"MirrorPad",(function(){return Pt["Rb"]})),n.d(e,"Mod",(function(){return Pt["Sb"]})),n.d(e,"Multinomial",(function(){return Pt["Tb"]})),n.d(e,"Multiply",(function(){return Pt["Ub"]})),n.d(e,"Neg",(function(){return Pt["Vb"]})),n.d(e,"NotEqual",(function(){return Pt["Zb"]})),n.d(e,"NonMaxSuppressionV3",(function(){return Pt["Wb"]})),n.d(e,"NonMaxSuppressionV4",(function(){return Pt["Xb"]})),n.d(e,"NonMaxSuppressionV5",(function(){return Pt["Yb"]})),n.d(e,"OnesLike",(function(){return Pt["bc"]})),n.d(e,"OneHot",(function(){return Pt["ac"]})),n.d(e,"Pack",(function(){return Pt["cc"]})),n.d(e,"PadV2",(function(){return Pt["dc"]})),n.d(e,"Pool",(function(){return Pt["ec"]})),n.d(e,"Pow",(function(){return Pt["fc"]})),n.d(e,"Prelu",(function(){return Pt["gc"]})),n.d(e,"Prod",(function(){return Pt["hc"]})),n.d(e,"Range",(function(){return Pt["ic"]})),n.d(e,"Real",(function(){return Pt["jc"]})),n.d(e,"Reciprocal",(function(){return Pt["lc"]})),n.d(e,"Relu",(function(){return Pt["mc"]})),n.d(e,"Reshape",(function(){return Pt["oc"]})),n.d(e,"ResizeNearestNeighbor",(function(){return Pt["rc"]})),n.d(e,"ResizeNearestNeighborGrad",(function(){return Pt["sc"]})),n.d(e,"ResizeBilinear",(function(){return Pt["pc"]})),n.d(e,"ResizeBilinearGrad",(function(){return Pt["qc"]})),n.d(e,"Relu6",(function(){return Pt["nc"]})),n.d(e,"Reverse",(function(){return Pt["tc"]})),n.d(e,"Round",(function(){return Pt["vc"]})),n.d(e,"Rsqrt",(function(){return Pt["wc"]})),n.d(e,"ScatterNd",(function(){return Pt["xc"]})),n.d(e,"Select",(function(){return Pt["yc"]})),n.d(e,"Selu",(function(){return Pt["zc"]})),n.d(e,"Slice",(function(){return Pt["Ec"]})),n.d(e,"Sin",(function(){return Pt["Cc"]})),n.d(e,"Sinh",(function(){return Pt["Dc"]})),n.d(e,"Sign",(function(){return Pt["Bc"]})),n.d(e,"Sigmoid",(function(){return Pt["Ac"]})),n.d(e,"Softplus",(function(){return Pt["Gc"]})),n.d(e,"Sqrt",(function(){return Pt["Kc"]})),n.d(e,"Sum",(function(){return Pt["Qc"]})),n.d(e,"SpaceToBatchND",(function(){return Pt["Hc"]})),n.d(e,"SplitV",(function(){return Pt["Jc"]})),n.d(e,"Softmax",(function(){return Pt["Fc"]})),n.d(e,"SquaredDifference",(function(){return Pt["Mc"]})),n.d(e,"Square",(function(){return Pt["Lc"]})),n.d(e,"Sub",(function(){return Pt["Pc"]})),n.d(e,"SparseToDense",(function(){return Pt["Ic"]})),n.d(e,"StridedSlice",(function(){return Pt["Oc"]})),n.d(e,"Tan",(function(){return Pt["Rc"]})),n.d(e,"Tanh",(function(){return Pt["Sc"]})),n.d(e,"Tile",(function(){return Pt["Tc"]})),n.d(e,"TopK",(function(){return Pt["Uc"]})),n.d(e,"Transpose",(function(){return Pt["Vc"]})),n.d(e,"Unique",(function(){return Pt["Wc"]})),n.d(e,"Unpack",(function(){return Pt["Xc"]})),n.d(e,"UnsortedSegmentSum",(function(){return Pt["Yc"]})),n.d(e,"ZerosLike",(function(){return Pt["Zc"]})),n.d(e,"Step",(function(){return Pt["Nc"]})),n.d(e,"FromPixels",(function(){return Pt["hb"]})),n.d(e,"RotateWithOffset",(function(){return Pt["uc"]})),n.d(e,"_FusedMatMul",(function(){return Pt["ad"]})),n.d(e,"FusedConv2D",(function(){return Pt["jb"]})),n.d(e,"FusedDepthwiseConv2D",(function(){return Pt["kb"]}));var r={};n.r(r),n.d(r,"copyModel",(function(){return J})),n.d(r,"listModels",(function(){return Y})),n.d(r,"moveModel",(function(){return Q})),n.d(r,"removeModel",(function(){return Z})),n.d(r,"browserFiles",(function(){return mt})),n.d(r,"browserHTTPRequest",(function(){return jt})),n.d(r,"concatenateArrayBuffers",(function(){return f["d"]})),n.d(r,"decodeWeights",(function(){return f["e"]})),n.d(r,"encodeWeights",(function(){return f["f"]})),n.d(r,"fromMemory",(function(){return At})),n.d(r,"getLoadHandlers",(function(){return x})),n.d(r,"getModelArtifactsInfoForJSON",(function(){return f["g"]})),n.d(r,"getSaveHandlers",(function(){return y})),n.d(r,"http",(function(){return Ct})),n.d(r,"isHTTPScheme",(function(){return Nt})),n.d(r,"loadWeights",(function(){return xt})),n.d(r,"registerLoadRouter",(function(){return g})),n.d(r,"registerSaveRouter",(function(){return b})),n.d(r,"weightsLoaderFactory",(function(){return vt})),n.d(r,"withSaveHandler",(function(){return $t}));var a={};n.r(a),n.d(a,"confusionMatrix",(function(){return Lt}));var s={};n.r(s),n.d(s,"toPixels",(function(){return Gt})),n.d(s,"fromPixels",(function(){return Ht}));var i={};n.r(i),n.d(i,"prepareAndValidate",(function(){return qt}));var o={};n.r(o),n.d(o,"assertParamsValid",(function(){return Xt})),n.d(o,"maskToAxes",(function(){return Yt})),n.d(o,"computeOutShape",(function(){return Zt})),n.d(o,"stridesWithElidedDims",(function(){return Jt})),n.d(o,"getNormalizedAxes",(function(){return ee})),n.d(o,"startIndicesWithElidedDims",(function(){return ne})),n.d(o,"stopIndicesWithElidedDims",(function(){return re})),n.d(o,"stridesForAxis",(function(){return ae})),n.d(o,"startForAxis",(function(){return se})),n.d(o,"stopForAxis",(function(){return ie})),n.d(o,"isSliceContinous",(function(){return oe})),n.d(o,"computeFlatOffset",(function(){return ue})),n.d(o,"parseSliceParams",(function(){return ce})),n.d(o,"sliceInfo",(function(){return le}));var u={};n.r(u),n.d(u,"Serializable",(function(){return de})),n.d(u,"SerializationMap",(function(){return he})),n.d(u,"registerClass",(function(){return pe}));var c={};n.r(c),n.d(c,"segOpComputeOptimalWindowSize",(function(){return jn})),n.d(c,"computeOutShape",(function(){return Tn})),n.d(c,"collectGatherOpShapeInfo",(function(){return En}));var l={};n.r(l),n.d(l,"axesAreInnerMostDims",(function(){return Ke["b"]})),n.d(l,"combineLocations",(function(){return Ke["c"]})),n.d(l,"computeOutAndReduceShapes",(function(){return Ke["d"]})),n.d(l,"expandShapeToKeepDim",(function(){return Ke["e"]})),n.d(l,"assertAxesAreInnerMostDims",(function(){return Ke["a"]})),n.d(l,"getAxesPermutation",(function(){return Ke["f"]})),n.d(l,"getUndoAxesPermutation",(function(){return Ke["h"]})),n.d(l,"getInnerMostAxes",(function(){return Ke["g"]})),n.d(l,"getBroadcastDims",(function(){return Xe["b"]})),n.d(l,"getReductionAxes",(function(){return Xe["c"]})),n.d(l,"assertAndGetBroadcastShape",(function(){return Xe["a"]})),n.d(l,"assertParamsConsistent",(function(){return Ye})),n.d(l,"computeOutShape",(function(){return Ze})),n.d(l,"computeDilation2DInfo",(function(){return Je["d"]})),n.d(l,"computePool2DInfo",(function(){return Je["e"]})),n.d(l,"computePool3DInfo",(function(){return Je["f"]})),n.d(l,"computeConv2DInfo",(function(){return Je["a"]})),n.d(l,"computeConv3DInfo",(function(){return Je["b"]})),n.d(l,"computeDefaultPad",(function(){return Je["c"]})),n.d(l,"tupleValuesAreOne",(function(){return Je["i"]})),n.d(l,"eitherStridesOrDilationsAreOne",(function(){return Je["h"]})),n.d(l,"convertConv2DDataFormat",(function(){return Je["g"]})),n.d(l,"getFusedDyActivation",(function(){return Qe["c"]})),n.d(l,"getFusedBiasGradient",(function(){return Qe["b"]})),n.d(l,"applyActivation",(function(){return Qe["a"]})),n.d(l,"shouldFuse",(function(){return Qe["d"]})),n.d(l,"PARALLELIZE_THRESHOLD",(function(){return tn})),n.d(l,"computeOptimalWindowSize",(function(){return en})),n.d(l,"slice_util",(function(){return o})),n.d(l,"upcastType",(function(){return Pe["c"]})),n.d(l,"getImageCenter",(function(){return nn})),n.d(l,"getReshaped",(function(){return rn})),n.d(l,"getPermuted",(function(){return an})),n.d(l,"getReshapedPermuted",(function(){return sn})),n.d(l,"getSliceBeginCoords",(function(){return on})),n.d(l,"getSliceSize",(function(){return un})),n.d(l,"prepareAndValidate",(function(){return qt})),n.d(l,"validateUpdateShape",(function(){return Kt["validateUpdateShape"]})),n.d(l,"validateInput",(function(){return Kt["validateInput"]})),n.d(l,"calculateShapes",(function(){return Kt["calculateShapes"]})),n.d(l,"SELU_SCALEALPHA",(function(){return cn})),n.d(l,"SELU_SCALE",(function(){return ln})),n.d(l,"ERF_P",(function(){return dn})),n.d(l,"ERF_A1",(function(){return hn})),n.d(l,"ERF_A2",(function(){return pn})),n.d(l,"ERF_A3",(function(){return fn})),n.d(l,"ERF_A4",(function(){return mn})),n.d(l,"ERF_A5",(function(){return bn})),n.d(l,"warn",(function(){return gn})),n.d(l,"log",(function(){return yn})),n.d(l,"mergeRealAndImagArrays",(function(){return xn})),n.d(l,"splitRealAndImagArrays",(function(){return vn})),n.d(l,"complexWithEvenIndex",(function(){return wn})),n.d(l,"complexWithOddIndex",(function(){return kn})),n.d(l,"getComplexWithIndex",(function(){return On})),n.d(l,"assignToTypedArray",(function(){return In})),n.d(l,"exponents",(function(){return Nn})),n.d(l,"exponent",(function(){return Sn})),n.d(l,"prepareSplitSize",(function(){return Cn})),n.d(l,"segment_util",(function(){return c})),n.d(l,"castTensor",(function(){return An})),n.d(l,"reshapeTensor",(function(){return $n})),n.d(l,"fromUint8ToStringArray",(function(){return Rn})),n.d(l,"fromStringArrayToUint8",(function(){return Dn}));var d={};n.r(d),n.d(d,"nonMaxSuppressionV3Impl",(function(){return _n["a"]})),n.d(d,"nonMaxSuppressionV4Impl",(function(){return _n["b"]})),n.d(d,"nonMaxSuppressionV5Impl",(function(){return _n["c"]})),n.d(d,"whereImpl",(function(){return Mn["a"]}));var h=n("6ae2"),p=(n("29a8"),n("b333")),f=n("350f");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class m{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==m.instance&&(m.instance=new m),m.instance}static registerSaveRouter(t){m.getInstance().saveRouters.push(t)}static registerLoadRouter(t){m.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return m.getHandlers(t,"save")}static getLoadHandlers(t,e){return m.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[],a="load"===e?m.getInstance().loadRouters:m.getInstance().saveRouters;return a.forEach(e=>{const a=e(t,n);null!==a&&r.push(a)}),r}}const b=t=>m.registerSaveRouter(t),g=t=>m.registerLoadRouter(t),y=t=>m.getSaveHandlers(t),x=(t,e)=>m.getLoadHandlers(t,e)
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */,v="tensorflowjs",w=1,k="models_store",O="model_info_store";function I(){if(!Object(p["c"])().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"===typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function N(t){const e=t.result;e.createObjectStore(k,{keyPath:"modelPath"}),e.createObjectStore(O,{keyPath:"modelPath"})}class S{constructor(t){if(this.indexedDB=I(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((t,n)=>{const r=this.indexedDB.open(v,w);r.onupgradeneeded=()=>N(r),r.onsuccess=()=>{const a=r.result;if(null==e){const e=a.transaction(k,"readonly"),r=e.objectStore(k),s=r.get(this.modelPath);s.onsuccess=()=>{if(null==s.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(s.result.modelArtifacts)},s.onerror=t=>(a.close(),n(s.error)),e.oncomplete=()=>a.close()}else{const r=Object(f["g"])(e),s=a.transaction(O,"readwrite");let i=s.objectStore(O);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=a.transaction(k,"readwrite");const o=u.objectStore(k),c=o.put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});c.onsuccess=()=>t({modelArtifactsInfo:r}),c.onerror=t=>{i=s.objectStore(O);const e=i.delete(this.modelPath);e.onsuccess=()=>(a.close(),n(c.error)),e.onerror=t=>(a.close(),n(c.error))}},o.onerror=t=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=t=>n(r.error)})}}S.URL_SCHEME="indexeddb://";const C=t=>Object(p["c"])().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(S.URL_SCHEME)?j(t.slice(S.URL_SCHEME.length)):null;function j(t){return new S(t)}function T(t){return t.startsWith(S.URL_SCHEME)?t.slice(S.URL_SCHEME.length):t}m.registerSaveRouter(C),m.registerLoadRouter(C);class E{constructor(){this.indexedDB=I()}async listModels(){return new Promise((t,e)=>{const n=this.indexedDB.open(v,w);n.onupgradeneeded=()=>N(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(O,"readonly"),s=a.objectStore(O),i=s.getAll();i.onsuccess=()=>{const e={};for(const t of i.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},i.onerror=t=>(r.close(),e(i.error)),a.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)})}async removeModel(t){return t=T(t),new Promise((e,n)=>{const r=this.indexedDB.open(v,w);r.onupgradeneeded=()=>N(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(O,"readwrite"),i=s.objectStore(O),o=i.get(t);let u;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const r=i.delete(t),s=()=>{u=a.transaction(k,"readwrite");const r=u.objectStore(k),s=r.delete(t);s.onsuccess=()=>e(o.result.modelArtifactsInfo),s.onerror=t=>n(o.error)};r.onsuccess=s,r.onerror=t=>(s(),a.close(),n(o.error))}},o.onerror=t=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=t=>n(r.error)})}}var A=n("6ad5");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $="/",R="tensorflowjs_models",D="info",F="model_topology",_="weight_specs",M="weight_data",z="model_metadata";function L(t){return{info:[R,t,D].join($),topology:[R,t,F].join($),weightSpecs:[R,t,_].join($),weightData:[R,t,M].join($),modelMetadata:[R,t,z].join($)}}function P(t){const e=t.split($);if(e.length<3)throw new Error("Invalid key format: "+t);return e.slice(1,e.length-1).join($)}function B(t){return t.startsWith(W.URL_SCHEME)?t.slice(W.URL_SCHEME.length):t}class W{constructor(t){if(!Object(p["c"])().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=L(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(t.modelTopology),r=JSON.stringify(t.weightSpecs),a=Object(f["g"])(t);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,Object(f["a"])(t.weightData));const e={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};return null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(e)),{modelArtifactsInfo:a}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const t=JSON.parse(a);e.format=t["format"],e.generatedBy=t["generatedBy"],e.convertedBy=t["convertedBy"],null!=t["signature"]&&(e.signature=t["signature"]),null!=t["userDefinedMetadata"]&&(e.userDefinedMetadata=t["userDefinedMetadata"]),null!=t["modelInitializer"]&&(e.modelInitializer=t["modelInitializer"])}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=Object(f["b"])(s),e}}W.URL_SCHEME="localstorage://";const V=t=>Object(p["c"])().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(W.URL_SCHEME)?U(t.slice(W.URL_SCHEME.length)):null;function U(t){return new W(t)}m.registerSaveRouter(V),m.registerLoadRouter(V);class G{constructor(){Object(A["b"])(Object(p["c"])().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),Object(A["b"])("undefined"===typeof window||"undefined"!==typeof window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=R+$,n=$+D;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);if(a.startsWith(e)&&a.endsWith(n)){const e=P(a);t[e]=JSON.parse(this.LS.getItem(a))}}return t}async removeModel(t){t=B(t);const e=L(t);if(null==this.LS.getItem(e.info))throw new Error(`Cannot find model at path '${t}'`);const n=JSON.parse(this.LS.getItem(e.info));return this.LS.removeItem(e.info),this.LS.removeItem(e.topology),this.LS.removeItem(e.weightSpecs),this.LS.removeItem(e.weightData),n}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H="://";class q{constructor(){this.managers={}}static getInstance(){return null==q.instance&&(q.instance=new q),q.instance}static registerManager(t,e){Object(A["b"])(null!=t,()=>"scheme must not be undefined or null."),t.endsWith(H)&&(t=t.slice(0,t.indexOf(H))),Object(A["b"])(t.length>0,()=>"scheme must not be an empty string.");const n=q.getInstance();Object(A["b"])(null==n.managers[t],()=>`A model store manager is already registered for scheme '${t}'.`),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}function K(t){if(-1===t.indexOf(H))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+q.getSchemes().join(","));return{scheme:t.split(H)[0],path:t.split(H)[1]}}async function X(t,e,n=!1){Object(A["b"])(t!==e,()=>`Old path and new path are the same: '${t}'`);const r=m.getLoadHandlers(t);Object(A["b"])(r.length>0,()=>`Copying failed because no load handler is found for source URL ${t}.`),Object(A["b"])(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${t}.`);const a=r[0],s=m.getSaveHandlers(e);Object(A["b"])(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),Object(A["b"])(s.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${e}.`);const i=s[0],o=K(t).scheme,u=K(t).path,c=o===K(t).scheme,l=await a.load();n&&c&&await q.getManager(o).removeModel(u);const d=await i.save(l);return n&&!c&&await q.getManager(o).removeModel(u),d.modelArtifactsInfo}async function Y(){const t=q.getSchemes(),e={};for(const n of t){const t=await q.getManager(n).listModels();for(const r in t){const a=n+H+r;e[a]=t[r]}}return e}async function Z(t){const e=K(t),n=q.getManager(e.scheme);return n.removeModel(e.path)}async function J(t,e){const n=!1;return X(t,e,n)}async function Q(t,e){const n=!0;return X(t,e,n)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tt{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Browser's encoder only supports utf-8, but got "+e);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(Object(p["c"])().get("IS_BROWSER")){Object(p["c"])().setPlatform("browser",new tt);try{q.registerManager(W.URL_SCHEME,new G)}catch(_s){}try{q.registerManager(S.URL_SCHEME,new E)}catch(_s){}}n("4b05");var et=n("043e"),nt=n("deb3"),rt=n("f0a9"),at=n("7568"),st=n("34d7");
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(h["b"])();const it={buffer:et["a"],cast:nt["a"],clone:rt["a"],print:at["a"]};Object(st["e"])(it);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const ot="model",ut=".json",ct=".weights.bin";function lt(t){return new Promise(t=>setTimeout(t)).then(t)}class dt{constructor(t){if(!Object(p["c"])().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(dt.URL_SCHEME)&&(t=t.slice(dt.URL_SCHEME.length)),null!=t&&0!==t.length||(t=ot),this.modelTopologyFileName=t+ut,this.weightDataFileName=t+ct}async save(t){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n};null!=t.signature&&(r.signature=t.signature),null!=t.userDefinedMetadata&&(r.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(r.modelInitializer=t.modelInitializer);const a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(s.download=this.modelTopologyFileName,s.href=a,await lt(()=>s.dispatchEvent(new MouseEvent("click"))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await lt(()=>t.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Object(f["g"])(t)}}}}dt.URL_SCHEME="downloads://";class ht{constructor(t){if(null==t||t.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+t);this.files=t}async load(){const t=this.files[0],e=this.files.slice(1);return new Promise((n,r)=>{const a=new FileReader;a.onload=a=>{const s=JSON.parse(a.target.result),i=s.modelTopology;if(null==i)return void r(new Error("modelTopology field is missing from file "+t.name));0===e.length&&n({modelTopology:i});const o=s.weightsManifest;if(null==o)return void r(new Error("weightManifest field is missing from file "+t.name));let u;try{u=this.checkManifestAndWeightFiles(o,e)}catch(_s){return void r(_s)}const c=[],l=[],d=[];o.forEach(t=>{t.paths.forEach(t=>{l.push(t),d.push(null)}),c.push(...t.weights)}),o.forEach(t=>{t.paths.forEach(t=>{const e=new FileReader;e.onload=e=>{const r=e.target.result,a=l.indexOf(t);if(d[a]=r,-1===d.indexOf(null)){const t={modelTopology:i,weightSpecs:c,weightData:Object(f["d"])(d),format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy};null!=s.signature&&(t.signature=s.signature),null!=s.userDefinedMetadata&&(t.userDefinedMetadata=s.userDefinedMetadata),null!=s.modelInitializer&&(t.modelInitializer=s.modelInitializer),n(t)}},e.onerror=e=>r(`Failed to weights data from file of path '${t}'.`),e.readAsArrayBuffer(u[t])})})},a.onerror=e=>r(`Failed to read model topology and weights manifest JSON from file '${t.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),a.readAsText(t)})}checkManifestAndWeightFiles(t,e){const n=[],r=e.map(t=>Object(f["c"])(t.name)),a={};for(const s of t)s.paths.forEach(t=>{const s=Object(f["c"])(t);if(-1!==n.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(n.push(s),-1===r.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);a[t]=e[r.indexOf(s)]});if(n.length!==e.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${e.length}).`);return a}}const pt=t=>Object(p["c"])().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(dt.URL_SCHEME)?ft(t.slice(dt.URL_SCHEME.length)):null;function ft(t="model"){return new dt(t)}function mt(t){return new ht(t)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bt(t,e,n,r){i(t),n=null==n?0:n,r=null==r?1:r,o(n,r);let a=0;const s=s=>(s.then(s=>{const i=n+ ++a/t.length*(r-n);return e(i),s}),s);function i(t){Object(A["b"])(null!=t&&Array.isArray(t)&&t.length>0,()=>"promises must be a none empty array")}function o(t,e){Object(A["b"])(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but got startFraction "+t),Object(A["b"])(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but got endFraction "+e),Object(A["b"])(e>=t,()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction `+e)}return Promise.all(t.map(s))}m.registerSaveRouter(pt);var gt=n("9847");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function yt(t,e){null==e&&(e={});const n=null==e.fetchFunc?Object(p["c"])().platform.fetch:e.fetchFunc,r=t.map(t=>n(t,e.requestInit,{isBinary:!0})),a=0,s=.5,i=null==e.onProgress?await Promise.all(r):await bt(r,e.onProgress,a,s),o=i.map(t=>t.arrayBuffer()),u=.5,c=1,l=null==e.onProgress?await Promise.all(o):await bt(o,e.onProgress,u,c);return l}async function xt(t,e="",n,r){const a=t=>yt(t,{requestInit:r}),s=vt(a);return s(t,e,n)}function vt(t){return async(e,n="",r)=>{const a=e.map(()=>!1),s={},i=null!=r?r.map(()=>!1):[],o=[];if(e.forEach((t,e)=>{let n=0;t.weights.forEach(t=>{const u="quantization"in t?t.quantization.dtype:t.dtype,c=gt["a"][u]*A["N"](t.shape),l=()=>{a[e]=!0,null==s[e]&&(s[e]=[]),s[e].push({manifestEntry:t,groupOffset:n,sizeBytes:c})};null!=r?r.forEach((e,n)=>{e===t.name&&(l(),i[n]=!0)}):l(),o.push(t.name),n+=c})}),!i.every(t=>t)){const t=r.filter((t,e)=>!i[e]);throw new Error("Could not find weights in manifest with names: "+t.join(", ")+". \nManifest JSON has weights with names: "+o.join(", ")+".")}const u=a.reduce((t,e,n)=>(e&&t.push(n),t),[]),c=[];u.forEach(t=>{e[t].paths.forEach(t=>{const e=n+(n.endsWith("/")?"":"/")+t;c.push(e)})});const l=await t(c),d={};let h=0;return u.forEach(t=>{const n=e[t].paths.length;let r=0;for(let e=0;e<n;e++)r+=l[h+e].byteLength;const a=new ArrayBuffer(r),i=new Uint8Array(a);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(l[h+e]);i.set(t,o),o+=t.byteLength}const u=s[t];u.forEach(t=>{const e=a.slice(t.groupOffset,t.groupOffset+t.sizeBytes),n=Object(f["e"])(e,[t.manifestEntry]);for(const r in n)d[r]=n[r]}),h+=n}),d}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wt="application/octet-stream",kt="application/json";class Ot{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(Object(A["b"])("function"===typeof e.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=Object(p["c"])().platform.fetch,Object(A["b"])(null!=t&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&Object(A["b"])(2===t.length,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n};null!=t.signature&&(r.signature=t.signature),null!=t.userDefinedMetadata&&(r.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(r.modelInitializer=t.modelInitializer),e.body.append("model.json",new Blob([JSON.stringify(r)],{type:kt}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:wt}),"model.weights.bin");const a=await this.fetch(this.path,e);if(a.ok)return{modelArtifactsInfo:Object(f["g"])(t),responses:[a]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+a.status+".")}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code `+t.status+". Please verify this URL points to the model JSON of the model to load.");let e;try{e=await t.json()}catch(p){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=e.modelTopology,r=e.weightsManifest,a=e.generatedBy,s=e.convertedBy,i=e.format,o=e.signature,u=e.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let c,l;if(null!=r){const t=await this.loadWeights(r);[c,l]=t}const d={modelTopology:n,weightSpecs:c,weightData:l,generatedBy:a,convertedBy:s,format:i};null!=o&&(d.signature=o),null!=u&&(d.userDefinedMetadata=u);const h=e.modelInitializer;return h&&(d.modelInitializer=h),d}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=It(e),a=this.weightPathPrefix||n,s=[];for(const c of t)s.push(...c.weights);const i=[],o=[];for(const c of t)for(const t of c.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(t)):i.push(a+t+r);this.weightUrlConverter&&i.push(...await Promise.all(o));const u=await yt(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[s,Object(f["d"])(u)]}}function It(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),r=t.substring(0,e),a=n>e?t.substring(n):"";return[r+"/",a]}function Nt(t){return null!=t.match(Ot.URL_SCHEME_REGEX)}Ot.URL_SCHEME_REGEX=/^https?:\/\//;const St=(t,e)=>{if("undefined"===typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every(t=>Nt(t)):Nt(t),n)return Ct(t,e)}return null};function Ct(t,e){return new Ot(t,e)}function jt(t,e){return Ct(t,e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */m.registerSaveRouter(St),m.registerLoadRouter(St);class Tt{constructor(t){this.modelArtifacts=t}async load(){return this.modelArtifacts}}class Et{constructor(t){this.saveHandler=t}async save(t){return this.saveHandler(t)}}function At(t,e,n,r){if(1===arguments.length){const e=null!=t.modelTopology||null!=t.weightSpecs;return e?new Tt(t):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Tt({modelTopology:t}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Tt({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:r})}function $t(t){return new Et(t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Rt=n("a3f7"),Dt=n("487b"),Ft=n("e22c"),_t=n("54ef"),Mt=n("c912");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zt(t,e,n){const r=Object(Rt["a"])(t,"labels","confusionMatrix"),a=Object(Rt["a"])(e,"predictions","confusionMatrix");A["b"](null==n||n>0&&Number.isInteger(n),()=>"If provided, numClasses must be a positive integer, but got "+n),A["b"](1===r.rank,()=>"Expected the rank of labels to be 1, but got "+r.rank),A["b"](1===a.rank,()=>"Expected the rank of predictions to be 1, but got "+a.rank),A["b"](r.shape[0]===a.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`),A["b"](n>0&&Number.isInteger(n),()=>"numClasses is required to be a positive integer, but got "+n);const s=Object(Ft["a"])(Object(nt["a"])(r,"int32"),n),i=Object(Ft["a"])(Object(nt["a"])(a,"int32"),n),o=Object(Mt["a"])(s),u=Object(Dt["a"])(o,i);return Object(nt["a"])(u,"int32")}const Lt=Object(_t["b"])({confusionMatrix_:zt});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Pt=n("c05b"),Bt=n("73b8"),Wt=n("05bb");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let Vt;function Ut(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&t instanceof ImageData)r=!0;else if("undefined"!==typeof HTMLVideoElement&&t instanceof HTMLVideoElement)a=!0;else if("undefined"!==typeof HTMLImageElement&&t instanceof HTMLImageElement)s=!0;else if(null!=t.getContext)i=!0;else{if(!("undefined"!==typeof ImageBitmap&&t instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+t.constructor.name);o=!0}if(a){const e=2;if(a&&t.readyState<e)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}const u=Object(Bt["c"])(Pt["hb"],h["a"].backendName);if(null!=u){const n={pixels:t},r={numChannels:e};return h["a"].runKernel(Pt["hb"],n,r)}const[c,l]=a?[t.videoWidth,t.videoHeight]:[t.width,t.height];let d,p;if(i?d=t.getContext("2d").getImageData(0,0,c,l).data:r||n?d=t.data:(s||a||o)&&(null==Vt&&(Vt=document.createElement("canvas").getContext("2d")),Vt.canvas.width=c,Vt.canvas.height=l,Vt.drawImage(t,0,0,c,l),d=Vt.getImageData(0,0,c,l).data),4===e)p=new Int32Array(d);else{const t=c*l;p=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)p[n*e+t]=d[4*n+t]}const f=[l,c,e];return Object(Wt["a"])(p,f,"int32")}async function Gt(t,e){let n=Object(Rt["a"])(t,"img","toPixels");if(!(t instanceof st["a"])){const t=n;n=Object(nt["a"])(t,"int32"),t.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+s);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let c=0;c<r*a;++c){const t=[0,0,0,255];for(let r=0;r<s;r++){const e=i[c*s+r];if("float32"===n.dtype){if(e<0||e>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${e}.`)}else if("int32"===n.dtype&&(e<0||e>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${e}.`);1===s?(t[0]=e*o,t[1]=e*o,t[2]=e*o):t[r]=e*o}const e=4*c;u[e+0]=Math.round(t[0]),u[e+1]=Math.round(t[1]),u[e+2]=Math.round(t[2]),u[e+3]=Math.round(t[3])}if(null!=e){e.width=a,e.height=r;const t=e.getContext("2d"),n=new ImageData(u,a,r);t.putImageData(n,0,0)}return n!==t&&n.dispose(),u}const Ht=Object(_t["b"])({fromPixels_:Ut});function qt(t,e){const n=t.shape.length,r=e.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[r-1]} vs. ${n}`);if(0===Object(A["N"])(t.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const a=e.shape,s=a[a.length-1];let i=1;for(let d=0;d<a.length-1;++d)i*=a[d];const o=t.shape,u=a.slice();u.pop();let c=1;for(let d=s;d<n;++d)c*=o[d],u.push(o[d]);const l=[...Object(A["j"])(t.shape).map(t=>t/c),1].slice(0,s);return[u,i,c,l]}var Kt=n("a34f");
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xt(t,e,n){const r=t.shape.length;A["b"](r===e.length,()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`),A["b"](r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let a=0;a<r;++a)A["b"](e[a]+n[a]<=t.shape[a],()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${e[a]+n[a]}) would overflow input.shape[${a}] (${t.shape[a]})`)}function Yt(t){const e=[];let n=0;while(t>0)1&t&&e.push(n),t/=2,n++;return e}function Zt(t,e,n){const r=[];for(let a=0;a<t.length;a++)r[a]=Math.ceil((e[a]-t[a])/n[a]);return r}function Jt(t,e,n,r){const a=[...t];for(let s=a.length;s<r.length;s++)a.push(1);for(let s=0;s<n;s++)0===s?a[e]=1:(a.splice(e,0,1),a.pop());return a}function Qt(t,e,n){return n<=t?n:n-(e-1)}function te(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function ee(t,e,n,r,a,s,i,o,u){const c=t.length;let l=new Array(c),d=new Array(c),h=new Array(c);if(e.length&&n>0){const u=e[0],c=n+1;l=ne(i,u,c,r,t),d=re(o,u,c,a,t),h=Jt(s,u,c,t)}else for(let p=0;p<c;p++)l[p]=se(i,r,s,t,p,u),d[p]=ie(o,a,s,t,p,u),h[p]=ae(s,p,u);return{begin:l,end:d,strides:h}}function ne(t,e,n,r,a){const s=[...a],i=te(n,e);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=0;else{const a=Qt(e,n,o);let i=r[a];t&1<<a&&(i=0),s[o]=i}return s}function re(t,e,n,r,a){const s=[...a],i=te(n,e);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=Number.MAX_SAFE_INTEGER;else{const a=Qt(e,n,o);let i=r[a];t&1<<a&&(i=Number.MAX_SAFE_INTEGER),s[o]=i}for(let o=0;o<s.length;o++){const t=a[o];s[o]<0&&(s[o]+=t),s[o]=A["i"](0,s[o],a[o])}return s}function ae(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function se(t,e,n,r,a,s){let i=e[a];const o=n[a]||1;(t&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return i<0&&(i+=u),i=A["i"](0,i,u-1),i}function ie(t,e,n,r,a,s){let i=e[a];const o=n[a]||1;(t&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return i<0&&(i+=u),i=o>0?A["i"](0,i,u):A["i"](-1,i,u-1),i}function oe(t,e,n){let r=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(let a=r+1;a<n.length;a++)if(e[a]>0||n[a]!==t[a])return!1;return!0}function ue(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function ce(t,e,n){let r;const a=t.shape.length;let s;return r="number"===typeof e?[e,...new Array(a-1).fill(0)]:e.length<a?e.concat(new Array(a-e.length).fill(0)):e.slice(),r.forEach(t=>{A["b"](-1!==t,()=>"slice() does not support negative begin indexing.")}),s=null==n?new Array(a).fill(-1):"number"===typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,s=s.map((e,n)=>e>=0?e:(A["b"](-1===e,()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`),t.shape[n]-r[n])),[r,s]}function le(t,e,n,r,a,s,i,o,u){let c=e.slice(),l=n.slice(),d=r;null==r&&(d=new Array(c.length));const h=Yt(i);if(h.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==u)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const p=t.length-c.length,f=Yt(o),m=t.slice();f.forEach(t=>{c[t]=0,l[t]=1,m.splice(t,0,1)});const{begin:b,end:g,strides:y}=ee(m,h,p,c,l,d,a,s,i);c=b,l=g,d=y;const x=Yt(u);x.forEach(t=>{l[t]=c[t]+1,d[t]=1});const v=Zt(c,l,d),w=v.filter((t,e)=>-1===x.indexOf(e)),k=d.every(t=>1===t);return{nonStrided:k,$begin:c,$end:l,$strides:d,size:v,newShape:m,outShape:w}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class de{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class he{constructor(){this.classNameMap={}}static getMap(){return null==he.instance&&(he.instance=new he),he.instance}static register(t){he.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function pe(t){Object(A["b"])(null!=t.className,()=>"Class being registered does not have the static className property defined."),Object(A["b"])("string"===typeof t.className,()=>"className is required to be a string, but got type "+typeof t.className),Object(A["b"])(t.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),he.register(t)}var fe=n("76c2"),me=n("d565"),be=n("eb7e");
/** @license See the LICENSE file. */
const ge="2.8.5";var ye=n("c04e4"),xe=n("9117"),ve=n("c77c"),we=n("a5aa"),ke=n("163a"),Oe=n("93b2"),Ie=n("a09b"),Ne=n("538e"),Se=n("015f");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Ce extends de{minimize(t,e=!1,n){const{value:r,grads:a}=this.computeGradients(t,n);if(null!=n){const t=n.map(t=>({name:t.name,tensor:a[t.name]}));this.applyGradients(t)}else this.applyGradients(a);return Object(ye["d"])(a),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return Object(Ne["f"])(t,e)}dispose(){null!=this.iterations_&&Object(ye["d"])(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Object(Se["a"])(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Ce,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class je extends Ce{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=h["a"].backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);e.forEach((e,n)=>{const r=h["a"].registeredVariables[e],a=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:e+"/accum_grad",variable:Object(ye["t"])(()=>Object(Ie["a"])(r).variable(a))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:e+"/accum_var",variable:Object(ye["t"])(()=>Object(Ie["a"])(r).variable(a))});const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;Object(ye["t"])(()=>{const t=Object(xe["a"])(Object(we["a"])(i,this.rho),Object(we["a"])(Object(Oe["a"])(s),1-this.rho)),e=Object(we["a"])(Object(ve["a"])(Object(ke["a"])(Object(xe["a"])(o,this.epsilon)),Object(ke["a"])(Object(xe["a"])(i,this.epsilon))),s),n=Object(xe["a"])(Object(we["a"])(o,this.rho),Object(we["a"])(Object(Oe["a"])(e),1-this.rho));i.assign(t),o.assign(n);const a=Object(xe["a"])(Object(we["a"])(e,-this.learningRate),r);r.assign(a)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Object(ye["d"])(this.accumulatedGrads.map(t=>t.variable)),Object(ye["d"])(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=t.length/2,n=!1;this.accumulatedGrads=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)})),this.accumulatedUpdates=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e["learningRate"],e["rho"],e["epsilon"])}}je.className="Adadelta",pe(je);var Te=n("46b8");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ee extends Ce{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);e.forEach((e,n)=>{const r=h["a"].registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:e+"/accumulator",variable:Object(ye["t"])(()=>Object(Te["a"])(r.shape,this.initialAccumulatorValue).variable(t))}}const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const s=this.accumulatedGrads[n].variable;Object(ye["t"])(()=>{const t=Object(xe["a"])(s,Object(Oe["a"])(a));s.assign(t);const e=Object(xe["a"])(Object(we["a"])(Object(ve["a"])(a,Object(ke["a"])(Object(xe["a"])(t,h["a"].backend.epsilon()))),-this.learningRate),r);r.assign(e)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Object(ye["d"])(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulatedGrads=t.map(t=>({originalName:t.name,variable:t.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e["learningRate"],e["initialAccumulatorValue"])}}Ee.className="Adagrad",pe(Ee);var Ae=n("c9f1"),$e=n("a009");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Re extends Ce{constructor(t,e,n,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Object(ye["t"])(()=>{this.accBeta1=Object(Se["a"])(e).variable(),this.accBeta2=Object(Se["a"])(n).variable()}),null==r&&(this.epsilon=h["a"].backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);Object(ye["t"])(()=>{const n=Object($e["a"])(1,this.accBeta1),r=Object($e["a"])(1,this.accBeta2);e.forEach((e,a)=>{const s=h["a"].registeredVariables[e],i=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:e+"/m",variable:Object(ye["t"])(()=>Object(Ie["a"])(s).variable(i))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:e+"/v",variable:Object(ye["t"])(()=>Object(Ie["a"])(s).variable(i))});const o=Array.isArray(t)?t[a].tensor:t[e];if(null==o)return;const u=this.accumulatedFirstMoment[a].variable,c=this.accumulatedSecondMoment[a].variable,l=Object(xe["a"])(Object(we["a"])(u,this.beta1),Object(we["a"])(o,1-this.beta1)),d=Object(xe["a"])(Object(we["a"])(c,this.beta2),Object(we["a"])(Object(Oe["a"])(o),1-this.beta2)),p=Object(ve["a"])(l,n),f=Object(ve["a"])(d,r);u.assign(l),c.assign(d);const m=Object(xe["a"])(Object(we["a"])(Object(ve["a"])(p,Object(xe["a"])(Object(ke["a"])(f),this.epsilon)),-this.learningRate),s);s.assign(m)}),this.accBeta1.assign(Object(we["a"])(this.accBeta1,this.beta1)),this.accBeta2.assign(Object(we["a"])(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Object(ye["d"])(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedSecondMoment&&Object(ye["d"])(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t),Object(ye["t"])(()=>{this.accBeta1.assign(Object(Ae["a"])(this.beta1,this.iterations_+1)),this.accBeta2.assign(Object(Ae["a"])(this.beta2,this.iterations_+1))});const e=t.length/2,n=!1;this.accumulatedFirstMoment=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)})),this.accumulatedSecondMoment=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e["learningRate"],e["beta1"],e["beta2"],e["epsilon"])}}Re.className="Adam",pe(Re);var De=n("8ae0"),Fe=n("09f4");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class _e extends Ce{constructor(t,e,n,r=null,a=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Object(ye["t"])(()=>{this.iteration=Object(Se["a"])(0).variable(),this.accBeta1=Object(Se["a"])(e).variable()}),null==r&&(this.epsilon=h["a"].backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);Object(ye["t"])(()=>{const n=Object($e["a"])(1,this.accBeta1),r=Object(ve["a"])(-this.learningRate,Object(xe["a"])(Object(we["a"])(this.iteration,this.decay),1));e.forEach((e,a)=>{const s=h["a"].registeredVariables[e],i=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:e+"/m",variable:Object(Ie["a"])(s).variable(i)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:e+"/v",variable:Object(Ie["a"])(s).variable(i)});const o=Array.isArray(t)?t[a].tensor:t[e];if(null==o)return;const u=this.accumulatedFirstMoment[a].variable,c=this.accumulatedWeightedInfNorm[a].variable,l=Object(xe["a"])(Object(we["a"])(u,this.beta1),Object(we["a"])(o,1-this.beta1)),d=Object(we["a"])(c,this.beta2),p=Object(De["a"])(o),f=Object(Fe["a"])(d,p);u.assign(l),c.assign(f);const m=Object(xe["a"])(Object(we["a"])(Object(ve["a"])(r,n),Object(ve["a"])(l,Object(xe["a"])(f,this.epsilon))),s);s.assign(m)}),this.iteration.assign(Object(xe["a"])(this.iteration,1)),this.accBeta1.assign(Object(we["a"])(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Object(ye["d"])(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedWeightedInfNorm&&Object(ye["d"])(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e["learningRate"],e["beta1"],e["beta2"],e["epsilon"],e["decay"])}}_e.className="Adamax",pe(_e);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Me extends Ce{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);e.forEach((e,n)=>{const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const a=h["a"].registeredVariables[e];Object(ye["t"])(()=>{const t=Object(xe["a"])(Object(we["a"])(this.c,r),a);a.assign(t)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=Object(ye["l"])(Object(Se["a"])(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(t=await this.extractIterations(t),0!==t.length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e["learningRate"])}}Me.className="SGD",pe(Me);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ze extends Me{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=Object(Se["a"])(this.momentum)}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);e.forEach((e,n)=>{const r=h["a"].registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:e+"/momentum",variable:Object(ye["t"])(()=>Object(Ie["a"])(r).variable(t))}}const a=this.accumulations[n].variable,s=Array.isArray(t)?t[n].tensor:t[e];null!=s&&Object(ye["t"])(()=>{let t;const e=Object(xe["a"])(Object(we["a"])(this.m,a),s);t=this.useNesterov?Object(xe["a"])(Object(we["a"])(this.c,Object(xe["a"])(s,Object(we["a"])(e,this.m))),r):Object(xe["a"])(Object(we["a"])(this.c,e),r),a.assign(e),r.assign(t)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Object(ye["d"])(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulations=t.map(t=>({originalName:t.name,variable:t.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e["learningRate"],e["momentum"],e["useNesterov"])}}ze.className="Momentum",pe(ze);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Le extends Ce{constructor(t,e=.9,n=0,r=null,a=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=h["a"].backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);e.forEach((e,n)=>{const r=h["a"].registeredVariables[e],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:e+"/rms",variable:Object(ye["t"])(()=>Object(Ie["a"])(r).variable(a))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:e+"/momentum",variable:Object(ye["t"])(()=>Object(Ie["a"])(r).variable(a))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:e+"/mg",variable:Object(ye["t"])(()=>Object(Ie["a"])(r).variable(a))});const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Object(ye["t"])(()=>{const t=Object(xe["a"])(Object(we["a"])(i,this.decay),Object(we["a"])(Object(Oe["a"])(s),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,a=Object(xe["a"])(Object(we["a"])(e,this.decay),Object(we["a"])(s,1-this.decay)),u=Object(ve["a"])(Object(we["a"])(s,this.learningRate),Object(ke["a"])(Object($e["a"])(t,Object(xe["a"])(Object(Oe["a"])(a),this.epsilon)))),c=Object(xe["a"])(Object(we["a"])(o,this.momentum),u);i.assign(t),e.assign(a),o.assign(c);const l=Object($e["a"])(r,c);r.assign(l)}else{const t=Object(xe["a"])(Object(we["a"])(i,this.decay),Object(we["a"])(Object(Oe["a"])(s),1-this.decay)),e=Object(xe["a"])(Object(we["a"])(o,this.momentum),Object(ve["a"])(Object(we["a"])(s,this.learningRate),Object(ke["a"])(Object(xe["a"])(t,this.epsilon))));i.assign(t),o.assign(e);const n=Object($e["a"])(r,e);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Object(ye["d"])(this.accumulatedMeanSquares.map(t=>t.variable)),null!=this.accumulatedMeanGrads&&this.centered&&Object(ye["d"])(this.accumulatedMeanGrads.map(t=>t.variable)),null!=this.accumulatedMoments&&Object(ye["d"])(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)})),this.accumulatedMoments=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map(t=>({originalName:t.name,variable:t.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e["learningRate"],e["decay"],e["momentum"],e["epsilon"],e["centered"])}}Le.className="RMSProp",pe(Le);var Pe=n("23bf"),Be=n("132b"),We=n("57e0");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Ve{static sgd(t){return new Me(t)}static momentum(t,e,n=!1){return new ze(t,e,n)}static rmsprop(t,e=.9,n=0,r=null,a=!1){return new Le(t,e,n,r,a)}static adam(t=.001,e=.9,n=.999,r=null){return new Re(t,e,n,r)}static adadelta(t=.001,e=.95,n=null){return new je(t,e,n)}static adamax(t=.002,e=.9,n=.999,r=null,a=0){return new _e(t,e,n,r,a)}static adagrad(t,e=.1){return new Ee(t,e)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ue={sgd:Ve.sgd,momentum:Ve.momentum,adadelta:Ve.adadelta,adagrad:Ve.adagrad,rmsprop:Ve.rmsprop,adamax:Ve.adamax,adam:Ve.adam},Ge=(()=>"undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:t=>t())();
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function He(){return new Promise(t=>Ge(()=>t()))}var qe=n("5a2c"),Ke=n("36e5"),Xe=n("526f");
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ye(t,e){const n=t[0].length;t.forEach((t,e)=>{A["b"](t.length===n,()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`)}),A["b"](e>=0&&e<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=t[0];t.forEach((t,a)=>{for(let s=0;s<n;s++)A["b"](s===e||t[s]===r[s],()=>`Error in concat${n}D: Shape of tensors[${a}] (${t}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`)})}function Ze(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}var Je=n("b818"),Qe=n("4749");
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const tn=30;function en(t){return t<=tn?t:Object(A["G"])(t,Math.floor(Math.sqrt(t)))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nn(t,e,n){const r=n*("number"===typeof t?t:t[0]),a=e*("number"===typeof t?t:t[1]);return[r,a]}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rn(t,e,n,r=!0){let a=[];if(r)a=a.concat(e.slice(0)),a.push(t[0]/n),a=a.concat(t.slice(1));else{a=a.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)a=a.concat([t[r+1]/e[r],e[r]]);a=a.concat(t.slice(n+1))}return a}function an(t,e,n=!0){const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<t;++r)r>=2*e+1||r%2===1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function sn(t,e,n,r=!0){const a=[];r?a.push(t[0]/n):a.push(t[0]*n);for(let s=1;s<t.length;++s)s<=e.length?r?a.push(e[s-1]*t[s]):a.push(t[s]/e[s-1]):a.push(t[s]);return a}function on(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function un(t,e,n){const r=t.slice(0,1);for(let a=0;a<n;++a)r.push(t[a+1]-e[a][0]-e[a][1]);return r}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cn=1.7580993408473768,ln=1.0507009873554805,dn=.3275911,hn=.254829592,pn=-.284496736,fn=1.421413741,mn=-1.453152027,bn=1.061405429;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gn(...t){Object(p["c"])().getBool("IS_TEST")||console.warn(...t)}function yn(...t){Object(p["c"])().getBool("IS_TEST")||console.log(...t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xn(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function vn(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function wn(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let a=0;a<t.length;a+=4)n[Math.floor(a/4)]=t[a],r[Math.floor(a/4)]=t[a+1];return{real:n,imag:r}}function kn(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let a=2;a<t.length;a+=4)n[Math.floor(a/4)]=t[a],r[Math.floor(a/4)]=t[a+1];return{real:n,imag:r}}function On(t,e){const n=t[2*e],r=t[2*e+1];return{real:n,imag:r}}function In(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function Nn(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let a=0;a<Math.ceil(t/2);a++){const s=(e?2:-2)*Math.PI*(a/t);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Sn(t,e,n){const r=(n?2:-2)*Math.PI*(t/e),a=Math.cos(r),s=Math.sin(r);return{real:a,imag:s}}function Cn(t,e,n=0){let r=[];if("number"===typeof e)Object(A["b"])(t.shape[n]%e===0,()=>"Number of splits must evenly divide the axis."),r=new Array(e).fill(t.shape[n]/e);else{const a=e.reduce((t,e)=>(-1===e&&(t+=1),t),0);Object(A["b"])(a<=1,()=>"There should be only one negative value in split array.");const s=e.indexOf(-1);if(-1!==s){const r=e.reduce((t,e)=>e>0?t+e:t);e[s]=t.shape[n]-r}Object(A["b"])(t.shape[n]===e.reduce((t,e)=>t+e),()=>"The sum of sizes must match the size of the axis dimension."),r=e}return r}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jn(t,e){let n,r=!1;t<=tn?(n=t,r=!0):n=Object(A["G"])(t,Math.floor(Math.sqrt(t)));while(!r)n>e||n===t?r=!0:n=Object(A["G"])(t,n+1);return n}function Tn(t,e,n){const r=[],a=t.length;for(let s=0;s<a;s++)s!==e?r.push(t[s]):r.push(n);return r}function En(t,e,n,r){const a=e.shape.length,s=t.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let d=0;d<r;++d)if(t.shape[d]!==e.shape[d])throw new Error(`x.shape[${d}]: ${t.shape[d]} should be equal to indices.shape[${d}]: ${e.shape[d]}.`);const i=t.shape[n],o=[];let u=1,c=1,l=1;for(let d=0;d<r;++d)o.push(t.shape[d]),u*=t.shape[d];for(let d=r;d<n;d++)o.push(t.shape[d]),c*=t.shape[d];for(let d=r;d<a;d++)o.push(e.shape[d]);for(let d=n+1;d<s;d++)o.push(t.shape[d]),l*=t.shape[d];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:i,outputShape:o}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function An(t,e,n){if("complex64"===e){if("complex64"===t.dtype)return t.clone();const e=Object(qe["a"])(t.shape),r=Object(nt["a"])(t,"float32"),a=n.complex(r,e);return e.dispose(),r.dispose(),a}if(!Object(A["p"])(t.dtype,e))return h["a"].makeTensorFromDataId(t.dataId,t.shape,e);if("complex64"===t.dtype){const r=n.real(t),a=Object(nt["a"])(r,e);return r.dispose(),a}if("int32"===e)return n.int(t);if("bool"===e){const e=Object(Se["a"])(0,t.dtype),r=n.notEqual(t,e);return e.dispose(),r}throw new Error(`Error in Cast: failed to cast ${t.dtype} to ${e}`)}function $n(t,e){return h["a"].makeTensorFromDataId(t.dataId,e,t.dtype)}function Rn(t){try{return t.map(t=>Object(be["decodeString"])(t))}catch(_s){throw new Error("Failed to decode encoded string bytes into utf-8, error: "+_s)}}function Dn(t){return t.map(t=>Object(be["encodeString"])(t))}var Fn=n("7ed6"),_n=n("8389"),Mn=n("0280"),zn=n("8b87"),Ln=n("2fb1");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Pn={kernelName:Pt["a"],inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(we["a"])(t,Object(Ln["a"])(Object(nt["a"])(n,"float32"),-1))}}};var Bn=n("3bb7");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wn={kernelName:Pt["b"],inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(Oe["a"])(Object(nt["a"])(n,"float32")),r=Object(ke["a"])(Object($e["a"])(Object(Se["a"])(1),e));return Object(Bn["a"])(Object(ve["a"])(t,r))}}}},Vn={kernelName:Pt["c"],inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(ke["a"])(Object($e["a"])(Object(Oe["a"])(Object(nt["a"])(n,"float32")),1));return Object(ve["a"])(t,e)}}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Un=n("35c9"),Gn=n("e053");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Hn={kernelName:Pt["d"],inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Xe["a"](n.shape,r.shape),s=()=>{let e=t;const r=Xe["c"](n.shape,a);return r.length>0&&(e=Object(Gn["a"])(e,r)),Object(Un["a"])(e,n.shape)},i=()=>{let e=t;const n=Xe["c"](r.shape,a);return n.length>0&&(e=Object(Gn["a"])(e,n)),Object(Un["a"])(e,r.shape)};return{a:s,b:i}}},qn={kernelName:Pt["e"],saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach((e,r)=>{n[r]=()=>t.clone()}),n}},Kn={kernelName:Pt["h"],inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Ie["a"])(n)}}},Xn={kernelName:Pt["i"],inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Ie["a"])(n)}}},Yn={kernelName:Pt["j"],inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ve["a"])(t,Object(ke["a"])(Object($e["a"])(Object(Se["a"])(1),Object(Oe["a"])(Object(nt["a"])(n,"float32")))))}}},Zn={kernelName:Pt["k"],inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(ke["a"])(Object(xe["a"])(Object(Se["a"])(1),Object(Oe["a"])(Object(nt["a"])(n,"float32"))));return Object(ve["a"])(t,e)}}}},Jn={kernelName:Pt["m"],inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(Xe["a"])(n.shape,r.shape),s=()=>{const e=Object(xe["a"])(Object(Oe["a"])(n),Object(Oe["a"])(r));let s=Object(we["a"])(t,Object(ve["a"])(r,e));const i=Object(Xe["c"])(n.shape,a);return i.length>0&&(s=Object(Gn["a"])(s,i)),Object(Un["a"])(s,n.shape)},i=()=>{const e=Object(xe["a"])(Object(Oe["a"])(n),Object(Oe["a"])(r));let s=Object(Bn["a"])(Object(we["a"])(t,Object(ve["a"])(n,e)));const i=Object(Xe["c"])(r.shape,a);return i.length>0&&(s=Object(Gn["a"])(s,i)),Object(Un["a"])(s,r.shape)};return{a:s,b:i}}},Qn={kernelName:Pt["l"],inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ve["a"])(t,Object(xe["a"])(Object(Oe["a"])(Object(nt["a"])(n,"float32")),1))}}},tr={kernelName:Pt["n"],inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ve["a"])(t,Object($e["a"])(Object(Se["a"])(1),Object(Oe["a"])(Object(nt["a"])(n,"float32"))))}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function er(t,e,n,r,a=[1,1,1],s,i){const o=Object(Rt["a"])(t,"dy","avgPool3dGrad"),u=Object(Rt["a"])(e,"input","avgPool3dGrad");let c=o,l=u,d=!1;4===u.rank&&(d=!0,c=Object(Un["a"])(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),l=Object(Un["a"])(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),A["b"](5===c.rank,()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+c.rank+"."),A["b"](5===l.rank,()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+l.rank+"."),A["b"](Je["h"](r,a),()=>`Error in avgPool3dGrad: Either strides or dilations must be 1. Got strides ${r} and dilations '${a}'`),null!=i&&A["b"](A["v"](s),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);const p={dy:c,input:l},f={filterSize:n,strides:r,dilations:a,pad:s,dimRoundingMode:i},m=h["a"].runKernel(Pt["q"],p,f);return d?Object(Un["a"])(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}const nr=Object(_t["b"])({avgPool3dGrad_:er}),rr={kernelName:Pt["p"],inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:a,strides:s,dilations:i,pad:o,dimRoundingMode:u}=n,c=null==i?[1,1,1]:i;return{x:()=>nr(t,r,a,s,c,o,u)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ar(t,e,n,r,a){const s=Object(Rt["a"])(t,"dy","avgPoolGrad"),i=Object(Rt["a"])(e,"input","avgPoolGrad");A["b"](i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let o=i,u=s,c=!1;3===i.rank&&(c=!0,o=Object(Un["a"])(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=Object(Un["a"])(s,[1,s.shape[0],s.shape[1],s.shape[2]])),A["b"](4===u.rank,()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+u.rank+"."),A["b"](4===o.rank,()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+o.rank+".");const l={dy:u,input:o},d={filterSize:n,strides:r,pad:a},p=h["a"].runKernel(Pt["r"],l,d);return c?Object(Un["a"])(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const sr=Object(_t["b"])({avgPoolGrad_:ar}),ir={kernelName:Pt["o"],inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:a,strides:s,pad:i}=n;return{x:()=>sr(t,r,a,s,i)}}},or={kernelName:Pt["s"],inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[r,a]=e,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>Object(Dt["a"])(t,a,!1,!1),b:()=>Object(Dt["a"])(t,r,!0,!1)}:s&&!i?{a:()=>Object(Dt["a"])(a,t,!1,!0),b:()=>Object(Dt["a"])(r,t,!1,!1)}:{a:()=>Object(Dt["a"])(a,t,!0,!0),b:()=>Object(Dt["a"])(t,r,!0,!0)}:{a:()=>Object(Dt["a"])(t,a,!1,!0),b:()=>Object(Dt["a"])(r,t,!0,!1)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ur=n("7580");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cr={kernelName:Pt["t"],gradFunc:(t,e,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>Object(ur["a"])(t,r,a)}}},lr={kernelName:Pt["v"],gradFunc:(t,e,n)=>{const r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let u=a.length-1;u>=0;u--)if(a[u]===s[u])i[u]=1;else if(1!==a[u])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);const o=[];for(let u=0;u<i.length;u++)i[u]>1&&o.push(u);return{x:()=>Object(Gn["a"])(t,o,!0)}}},dr={kernelName:Pt["w"],gradFunc:t=>({x:()=>t.clone()})},hr={kernelName:Pt["x"],gradFunc:t=>({x:()=>Object(Ie["a"])(t)})};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var pr=n("bb2d"),fr=n("b21c"),mr=n("e333"),br=n("6791");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const gr={kernelName:Pt["y"],inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Object(br["a"])(Object(mr["a"])(Object(pr["a"])(r,a),Object(fr["a"])(r,s)),t,Object(Ie["a"])(t))}}},yr={kernelName:Pt["A"],inputsToSave:["x"],gradFunc:Pn.gradFunc};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var xr=n("45bb");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vr={kernelName:Pt["B"],saveAllInputs:!0,gradFunc:(t,e,n)=>{const r=e.map(t=>t.shape),{axis:a}=n,s=Object(A["I"])(a,e[0].shape)[0],i=r.map(t=>t[s]),o=Object(xr["a"])(t,i,s);return o.map(t=>()=>t)}};var wr=n("0f6f"),kr=n("73d3");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Or={kernelName:Pt["C"],inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,a]=e,{dilations:s,strides:i,pad:o,dataFormat:u}=n;return A["b"](Je["i"](s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Object(kr["a"])(r.shape,t,a,i,o,u),filter:()=>Object(wr["a"])(r,t,a.shape,i,o,u)}}};var Ir=n("dd7e");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nr={kernelName:Pt["E"],inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[r,a]=e,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>Object(Ir["a"])(t,a,s,i,o,1,u),filter:()=>Object(wr["a"])(t,r,a.shape,s,i,o,u)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sr(t,e,n,r,a){let s=t;4===t.rank&&(s=Object(Un["a"])(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let i=e;4===i.rank&&(i=Object(Un["a"])(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),A["b"](5===s.rank,()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+s.shape+"."),A["b"](5===i.rank,()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+i.shape+"."),A["b"](5===n.length,()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+n+"."),A["b"](s.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`),A["b"](i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);const o={x:s,dy:i},u={strides:r,pad:a,filterShape:n};return h["a"].runKernel(Pt["G"],o,u)}const Cr=Object(_t["b"])({conv3DBackpropFilter_:Sr});var jr=n("99d0");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tr={kernelName:Pt["F"],inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:a,pad:s}=n;A["b"](Object(Je["i"])(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[i,o]=e;return{x:()=>Object(jr["a"])(i.shape,t,o,a,s),filter:()=>Cr(i,t,o.shape,a,s)}}};var Er=n("6932");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ar={kernelName:Pt["I"],inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(we["a"])(Object(Bn["a"])(Object(Er["a"])(Object(nt["a"])(n,"float32"))),t)}}};var $r=n("5dc4");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rr={kernelName:Pt["J"],inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(we["a"])(Object($r["a"])(Object(nt["a"])(n,"float32")),t)}}};var Dr=n("1e68");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fr={kernelName:Pt["L"],inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{const e=Object(Ke["f"])([a],r.rank);let n=Object(Dr["a"])(t,a,s,!i);return null!=e&&(n=Object(Mt["a"])(n,e)),n}}}};var _r=n("6926"),Mr=n("8cb0");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const zr={kernelName:Pt["O"],inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;A["b"](Je["i"](o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[u,c]=e;return A["b"](4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),A["b"](4===c.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),A["b"](u.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),A["b"](Je["h"](a,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`),null!=i&&A["b"](A["v"](s),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`),{x:()=>Object(Mr["a"])(u.shape,t,c,a,s,r,i),filter:()=>Object(_r["a"])(u,t,c.shape,a,s,r,i)}}},Lr={kernelName:Pt["S"],inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,a]=e,s={x:r,filter:a,dy:t},i={x:r,filter:a,dy:t};return{x:()=>h["a"].runKernel(Pt["U"],s,n),filter:()=>h["a"].runKernel(Pt["T"],i,n)}}},Pr={kernelName:Pt["V"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,r={dy:t,y:n};return{x:()=>h["a"].runKernel(Pt["W"],r)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Br=n("4f20");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wr={kernelName:Pt["Y"],inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Object(we["a"])(Object(Br["a"])(Object(Bn["a"])(Object(Oe["a"])(n))),2/Math.sqrt(Math.PI));return{x:()=>Object(we["a"])(t,r)}}},Vr={kernelName:Pt["Z"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(we["a"])(t,n)}}},Ur={kernelName:Pt["ab"],inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>Object(Un["a"])(t,n.shape)}}},Gr={kernelName:Pt["bb"],inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(we["a"])(t,Object(Br["a"])(n))}}},Hr={kernelName:Pt["fb"],gradFunc:t=>({x:()=>Object(Ie["a"])(t)})},qr={kernelName:Pt["gb"],inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(Xe["a"])(n.shape,r.shape),s=()=>{const e=Object(ve["a"])(t,Object(nt["a"])(r,"float32")),s=Object(Xe["c"])(n.shape,a);return s.length>0?Object(Un["a"])(Object(Gn["a"])(e,s),n.shape):e},i=()=>{let e=Object(we["a"])(t,Object(nt["a"])(n,"float32"));const s=Object(Xe["c"])(r.shape,a);s.length>0&&(e=Object(Un["a"])(Object(Gn["a"])(e,s),r.shape));const i=Object(Oe["a"])(r);return Object(Bn["a"])(Object(ve["a"])(e,Object(nt["a"])(i,"float32")))};return{a:s,b:i}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Kr=n("5f2a"),Xr=n("8d71");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Yr={kernelName:Pt["ib"],inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:r}=n,[a,s,i,o]=e,u=null==o?Object(Se["a"])(1):o,c=Object(Xe["c"])(s.shape,a.shape),l=[];if(1===s.rank){for(let t=0;t<a.shape.length-1;++t)l.push(a.shape[t]);l.push(1)}const d=Object($e["a"])(a,s),h=Object(we["a"])(t,u),p=Object(Kr["a"])(Object(xe["a"])(i,Object(Se["a"])(r))),f=Object(we["a"])(Object(we["a"])(Object(we["a"])(p,p),p),Object(Se["a"])(-.5)),m=()=>1===s.rank?Object(Un["a"])(Object(we["a"])(Object(we["a"])(t,Object(Xr["a"])(Object(Un["a"])(p,[1,1,1,s.shape[0]]),l)),u),a.shape):Object(Un["a"])(Object(we["a"])(Object(we["a"])(t,p),u),a.shape),b=()=>{let t=Object(we["a"])(Object(we["a"])(p,Object(Se["a"])(-1)),h);return 1===s.rank&&(t=Object(Gn["a"])(t,c)),Object(Un["a"])(t,s.shape)},g=()=>{let t=Object(we["a"])(Object(we["a"])(f,d),h);return 1===s.rank&&(t=Object(Gn["a"])(t,c)),Object(Un["a"])(t,s.shape)},y=()=>{const e=Object(we["a"])(d,p);let n=Object(we["a"])(t,e);return 1===s.rank&&(n=Object(Gn["a"])(n,c)),Object(Un["a"])(n,s.shape)},x=()=>{let e=t;return 1===s.rank&&(e=Object(Gn["a"])(e,c)),Object(Un["a"])(e,s.shape)};return{x:m,mean:b,variance:g,scale:y,offset:x}}};var Zr=n("53f2");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jr={kernelName:Pt["mb"],inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[r,a]=e,{axis:s}=n,i=Object(A["I"])(s,r.shape)[0],o=()=>{const e=r.shape,n=a.size,o=e.slice(0,i),u=o.length,c=e.slice(s,e.length).slice(1),l=c.length,d=Qr(0,u),h=Qr(u+1,u+1+l),p=ta([o,[n],c]),f=Object(Un["a"])(t,p),m=Object(Un["a"])(a,[n]),b=ta([[u],d,h]),g=Object(Mt["a"])(f,b);let y=Object(Zr["a"])(g,m,r.shape[i]);const x=Object(Ke["h"])(b);return y=Object(Mt["a"])(y,x),y};return{x:o,indices:()=>a}}};function Qr(t,e){const n=[];for(let r=t;r<e;++r)n.push(r);return n}function ta(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ea={kernelName:Pt["ob"],inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Object(Ie["a"])(n),b:()=>Object(Ie["a"])(r)}}},na={kernelName:Pt["qb"],gradFunc:t=>({x:()=>Object(nt["a"])(t,"float32")})},ra={kernelName:Pt["sb"],gradFunc:t=>({x:()=>Object(Ie["a"])(t)})},aa={kernelName:Pt["tb"],gradFunc:t=>({x:()=>Object(Ie["a"])(t)})},sa={kernelName:Pt["ub"],gradFunc:t=>({x:()=>Object(Ie["a"])(t)})};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ia=n("cef0");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oa={kernelName:Pt["xb"],inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{alpha:a}=n,s=Object(ia["a"])(r,0);return{x:()=>Object(br["a"])(s,t,Object(we["a"])(t,a))}}},ua={kernelName:Pt["Cb"],inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ve["a"])(t,Object(xe["a"])(n,1))}}},ca={kernelName:Pt["Bb"],inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ve["a"])(t,Object(nt["a"])(n,"float32"))}}},la={kernelName:Pt["Db"],inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{axis:a}=n;return{logits:()=>{const e=!0,n=Object(Br["a"])(r);return Object($e["a"])(t,Object(we["a"])(Object(Gn["a"])(t,a,e),n))}}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function da(t,e,n,r=5,a=1,s=1,i=.5){const o={x:t,y:e,dy:n},u={depthRadius:r,bias:a,alpha:s,beta:i};return h["a"].runKernel(Pt["wb"],o,u)}const ha=Object(_t["b"])({localResponseNormalizationBackprop_:da}),pa={kernelName:Pt["vb"],inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,a]=e,{depthRadius:s,bias:i,alpha:o,beta:u}=n;return{x:()=>ha(r,a,t,s,i,o,u)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var fa=n("b9b9");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ma(t,e,n,r){return e.rank<n.rank&&(e=Object(Un["a"])(e,Ke["e"](e.shape,r))),t.rank<n.rank&&(t=Object(Un["a"])(t,Ke["e"](t.shape,r))),{x:()=>{const r=Object(we["a"])(t,Object(nt["a"])(Object(fa["a"])(n,e),t.dtype));return r}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ba={kernelName:Pt["Hb"],inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{reductionIndices:a}=r,s=e[0],i=e[1],o=A["I"](a,s.shape),u=ma(t,i,s,o);return{x:()=>u["x"]()}}};var ga=n("e1fd");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ya={kernelName:Pt["Nb"],inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=()=>Object(we["a"])(t,Object(nt["a"])(Object(pr["a"])(n,r),"float32")),s=()=>Object(we["a"])(t,Object(nt["a"])(Object(ga["a"])(n,r),"float32"));return{a:a,b:s}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xa(t,e,n,r,a,s=[1,1,1],i,o){const u=Object(Rt["a"])(t,"dy","maxPool3dGrad"),c=Object(Rt["a"])(e,"input","maxPool3dGrad"),l=Object(Rt["a"])(n,"output","maxPool3dGrad");let d=u,p=c,f=l,m=!1;4===c.rank&&(m=!0,d=Object(Un["a"])(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=Object(Un["a"])(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),f=Object(Un["a"])(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),A["b"](5===d.rank,()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+d.rank+"."),A["b"](5===p.rank,()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+p.rank+"."),A["b"](5===f.rank,()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+f.rank+"."),A["b"](Je["h"](a,s),()=>`Error in maxPool3dGrad: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`),null!=o&&A["b"](A["v"](i),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`);const b={dy:d,input:p,output:f},g={filterSize:r,strides:a,dilations:s,pad:i,dimRoundingMode:o},y=h["a"].runKernel(Pt["Kb"],b,g);return m?Object(Un["a"])(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}const va=Object(_t["b"])({maxPool3dGrad_:xa}),wa={kernelName:Pt["Jb"],inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,a]=e,{filterSize:s,strides:i,dilations:o,pad:u,dimRoundingMode:c}=n,l=null==o?[1,1,1]:o;return{x:()=>va(t,r,a,s,i,l,u,c)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ka(t,e,n,r,a,s,i){const o=Object(Rt["a"])(t,"dy","maxPoolGrad"),u=Object(Rt["a"])(e,"input","maxPoolGrad"),c=Object(Rt["a"])(n,"output","maxPoolGrad");A["b"](u.rank===o.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`),A["b"](4===o.rank,()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+o.rank+"."),A["b"](4===u.rank,()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+u.rank+"."),null!=i&&A["b"](A["v"](s),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);const l={dy:o,input:u,output:c},d={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return h["a"].runKernel(Pt["Lb"],l,d)}const Oa=Object(_t["b"])({maxPoolGrad_:ka}),Ia={kernelName:Pt["Ib"],inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,a]=e,{filterSize:s,strides:i,pad:o}=n;return{x:()=>Oa(t,r,a,s,i,o)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Na=n("c22a");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sa={kernelName:Pt["Ob"],inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:a}=n,s=A["I"](a,r.shape),i=Object(Ke["d"])(r.shape,s),o=i[1],u=A["N"](o),c=()=>{const e=r.shape.slice();s.forEach(t=>{e[t]=1});const n=Object(Un["a"])(t,e),a=Object(ve["a"])(Object(we["a"])(n,Object(Na["a"])(r.shape,"float32")),u);return a};return{x:c}}},Ca={kernelName:Pt["Pb"],inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{axis:a}=r,[s,i]=e,o=A["I"](a,s.shape),u=ma(t,i,s,o);return{x:()=>u["x"]()}}},ja={kernelName:Pt["Qb"],inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=()=>Object(we["a"])(t,Object(nt["a"])(Object(fr["a"])(n,r),"float32")),s=()=>Object(we["a"])(t,Object(nt["a"])(Object(ia["a"])(n,r),"float32"));return{a:a,b:s}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ta=n("6d3c");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ea={kernelName:Pt["Rb"],inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:a}=n,s=a.map(t=>t[0]);return{x:()=>Object(Ta["a"])(t,s,r.shape)}}};var Aa=n("d369");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $a={kernelName:Pt["Sb"],inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(Xe["a"])(n.shape,r.shape),s=()=>{const e=Object(Xe["c"])(n.shape,a);return e.length>0?Object(Un["a"])(Object(Gn["a"])(t,e),n.shape):t},i=()=>{const e=Object(we["a"])(t,Object(Bn["a"])(Object(Aa["a"])(Object(ve["a"])(n,r)))),s=Object(Xe["c"])(r.shape,a);return s.length>0?Object(Un["a"])(Object(Gn["a"])(e,s),r.shape):e};return{a:s,b:i}}},Ra={kernelName:Pt["Ub"],inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(Xe["a"])(n.shape,r.shape),s=()=>{const e=Object(we["a"])(t,Object(nt["a"])(r,"float32")),s=Object(Xe["c"])(n.shape,a);return s.length>0?Object(Un["a"])(Object(Gn["a"])(e,s),n.shape):e},i=()=>{const e=Object(we["a"])(t,Object(nt["a"])(n,"float32")),s=Object(Xe["c"])(r.shape,a);return s.length>0?Object(Un["a"])(Object(Gn["a"])(e,s),r.shape):e};return{a:s,b:i}}},Da={kernelName:Pt["Vb"],gradFunc:t=>({x:()=>Object(Bn["a"])(t)})},Fa={kernelName:Pt["ac"],inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>Object(qe["a"])(n.shape,"float32")}}},_a={kernelName:Pt["bc"],gradFunc:t=>({x:()=>Object(Ie["a"])(t)})};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ma=n("3a44");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const za={kernelName:Pt["cc"],saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:r}=n,a=Object(Ma["a"])(t,r);return a.map(t=>()=>t)}},La={kernelName:Pt["dc"],inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:a}=n,s=a.map(t=>t[0]);return{x:()=>Object(Ta["a"])(t,s,r.shape)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Pa=n("1359");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ba={kernelName:Pt["fc"],inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,r,a]=e,s=n,i=r,o=Xe["a"](s.shape,i.shape),u=()=>{const e=Object(nt["a"])(i,"float32");let n=Object(we["a"])(t,Object(we["a"])(e,Object(Ae["a"])(s,Object($e["a"])(e,Object(Se["a"])(1)))));const r=Xe["c"](s.shape,o);return r.length>0&&(n=Object(Gn["a"])(n,r)),Object(Un["a"])(n,s.shape)},c=()=>{const e=Object(ia["a"])(s,0),n=Object(br["a"])(e,Object(Pa["a"])(s),Object(Ie["a"])(s));let r=Object(we["a"])(t,Object(we["a"])(a,n));const u=Xe["c"](i.shape,o);return u.length>0&&(r=Object(Gn["a"])(r,u)),Object(Un["a"])(r,i.shape)};return{a:u,b:c}}},Wa={kernelName:Pt["gc"],inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(ia["a"])(n,0);return{x:()=>Object(br["a"])(a,t,Object(we["a"])(t,r)),alpha:()=>{let e=Object(br["a"])(a,Object(Ie["a"])(t),Object(we["a"])(t,n));const s=Object(Xe["c"])(r.shape,t.shape);return s.length>0&&(e=Object(Gn["a"])(e,s)),Object(Un["a"])(e,r.shape)}}}},Va={kernelName:Pt["kc"],inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Xe["a"](n.shape,r.shape),s=()=>{const e=Object(ve["a"])(t,Object(nt["a"])(r,"float32")),s=Xe["c"](n.shape,a);return s.length>0?Object(Un["a"])(Object(Gn["a"])(e,s),n.shape):e},i=()=>{let e=Object(we["a"])(t,Object(nt["a"])(n,"float32"));const s=Xe["c"](r.shape,a);s.length>0&&(e=Object(Un["a"])(Object(Gn["a"])(e,s),r.shape));const i=Object(Oe["a"])(r);return Object(Bn["a"])(Object(ve["a"])(e,Object(nt["a"])(i,"float32")))};return{a:s,b:i}}},Ua={kernelName:Pt["lc"],inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ve["a"])(t,Object(Bn["a"])(Object(Oe["a"])(n)))}}},Ga={kernelName:Pt["nc"],inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Object(we["a"])(Object(fr["a"])(n,6),Object(Ln["a"])(n));return{x:()=>Object(we["a"])(t,Object(nt["a"])(r,"float32"))}}},Ha={kernelName:Pt["mc"],inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(we["a"])(t,Object(nt["a"])(Object(Ln["a"])(n),"float32"))}}},qa={kernelName:Pt["oc"],inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Un["a"])(t,n.shape)}}},Ka={kernelName:Pt["pc"],inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,a={dy:t,images:r},s=()=>h["a"].runKernel(Pt["qc"],a,n);return{images:s}}},Xa={kernelName:Pt["rc"],inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,a={dy:t,images:r},s=()=>h["a"].runKernel(Pt["sc"],a,n);return{images:s}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ya=n("d08e");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Za={kernelName:Pt["tc"],gradFunc:(t,e,n)=>{const{dims:r}=n,a=Object(A["I"])(r,t.shape);return{x:()=>Object(Ya["a"])(t,a)}}},Ja={kernelName:Pt["vc"],gradFunc:t=>({x:()=>Object(Ie["a"])(t)})},Qa={kernelName:Pt["wc"],inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(Bn["a"])(Object(ve["a"])(t,Object(we["a"])(Object(Ae["a"])(n,1.5),2)))}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ts=n("ef00");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const es={kernelName:Pt["yc"],inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>Object(nt["a"])(Object(Ie["a"])(n),"float32"),t:()=>Object(we["a"])(t,Object(nt["a"])(n,t.dtype)),e:()=>Object(we["a"])(t,Object(nt["a"])(Object(ts["a"])(n),t.dtype))}}},ns={kernelName:Pt["zc"],inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(ia["a"])(n,Object(Se["a"])(0)),r=Object(Se["a"])(cn),a=Object(Se["a"])(ln),s=Object(we["a"])(t,a),i=Object(we["a"])(Object(we["a"])(t,r),Object(Br["a"])(Object(nt["a"])(n,"float32")));return Object(br["a"])(e,s,i)}}}},rs={kernelName:Pt["Ac"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(we["a"])(t,Object(we["a"])(n,Object($e["a"])(Object(Se["a"])(1),n)))}}},as={kernelName:Pt["Bc"],gradFunc:t=>({x:()=>Object(Ie["a"])(t)})};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ss=n("eff7");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const is={kernelName:Pt["Cc"],inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(we["a"])(Object(ss["a"])(Object(nt["a"])(n,"float32")),t)}}};var os=n("c1a2");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const us={kernelName:Pt["Dc"],inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(we["a"])(Object(os["a"])(Object(nt["a"])(n,"float32")),t)}}};var cs=n("0eb5");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ls={kernelName:Pt["Ec"],inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{begin:a,size:s}=n,i=r.shape,[o,u]=ce(r,a,s),c=[];for(let l=0;l<t.rank;l++)c.push([o[l],i[l]-o[l]-u[l]]);return{x:()=>Object(cs["a"])(t,c)}}},ds={kernelName:Pt["Fc"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{dim:a}=n,s=!0,i=Object(we["a"])(t,r);return{logits:()=>Object($e["a"])(i,Object(we["a"])(Object(Gn["a"])(i,[a],s),r))}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var hs=n("ffb3");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ps={kernelName:Pt["Gc"],inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(we["a"])(t,Object(hs["a"])(n))}}};var fs=n("3b28");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ms={kernelName:Pt["Hc"],gradFunc:(t,e,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>Object(fs["a"])(t,r,a)}}};var bs=n("649e");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gs={kernelName:Pt["Jc"],gradFunc:(t,e,n)=>{const{axis:r}=n;return{x:()=>Object(bs["a"])(t,r)}}},ys={kernelName:Pt["Kc"],inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ve["a"])(t,Object(we["a"])(Object(ke["a"])(Object(nt["a"])(n,"float32")),2))}}},xs={kernelName:Pt["Lc"],inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(we["a"])(t,Object(we["a"])(Object(nt["a"])(n,"float32"),2))}}},vs={kernelName:Pt["Mc"],inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(Se["a"])(2),s=()=>Object(we["a"])(t,Object(we["a"])(a,Object($e["a"])(n,r))),i=()=>Object(we["a"])(t,Object(we["a"])(a,Object($e["a"])(r,n)));return{a:s,b:i}}},ws={kernelName:Pt["Nc"],gradFunc:t=>({x:()=>Object(Ie["a"])(t)})},ks={kernelName:Pt["Pc"],inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Xe["a"](n.shape,r.shape),s=()=>{let e=t;const r=Xe["c"](n.shape,a);return r.length>0&&(e=Object(Gn["a"])(e,r)),Object(Un["a"])(e,n.shape)},i=()=>{let e=t;const n=Xe["c"](r.shape,a);return n.length>0&&(e=Object(Gn["a"])(e,n)),Object(Un["a"])(Object(Bn["a"])(e),r.shape)};return{a:s,b:i}}},Os={kernelName:Pt["Qc"],inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,a=r.shape.slice(),{axis:s}=n,i=Object(A["I"])(s,r.shape);i.forEach(t=>{a[t]=1});const o=Object(Un["a"])(t,a),u=Object(we["a"])(o,Object(Na["a"])(r.shape,"float32"));return{x:()=>u}}},Is={kernelName:Pt["Rc"],inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ve["a"])(t,Object(Oe["a"])(Object(ss["a"])(n)))}}},Ns={kernelName:Pt["Sc"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(we["a"])(Object($e["a"])(Object(Se["a"])(1),Object(Oe["a"])(n)),t)}}},Ss={kernelName:Pt["Tc"],inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{reps:a}=n,s=()=>{let e=Object(Ie["a"])(r);if(1===r.rank)for(let n=0;n<a[0];++n)e=Object(xe["a"])(e,Object(Ta["a"])(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)e=Object(xe["a"])(e,Object(Ta["a"])(t,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)e=Object(xe["a"])(e,Object(Ta["a"])(t,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+r.rank+" tensors yet.");for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)e=Object(xe["a"])(e,Object(Ta["a"])(t,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e};return{x:s}}},Cs={kernelName:Pt["Vc"],gradFunc:(t,e,n)=>{const r=n,{perm:a}=r,s=Ke["h"](a);return{x:()=>Object(Mt["a"])(t,s)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var js=n("d54d");
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ts={kernelName:Pt["Xc"],gradFunc:(t,e,n)=>{const r=n,{axis:a}=r;return{value:()=>Object(js["a"])(t,a)}}};var Es=n("dae8"),As=n("91a3");
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const $s={kernelName:Pt["Yc"],inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e,r=()=>Rs(t,n);return{x:r}}};function Rs(t,e){const n=Object(Fe["a"])(e,Object(Ie["a"])(e)),r=Object(As["a"])(t,n);let a=Object(pr["a"])(e,Object(Se["a"])(0,"int32"));const s=r.rank-a.rank;for(let o=0;o<s;++o)a=Object(Es["a"])(a,o+1);a=Object(mr["a"])(a,Object(Na["a"])(r.shape,"bool"));const i=Object(Ie["a"])(r);return Object(br["a"])(a,r,i)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ds={kernelName:Pt["Zc"],gradFunc:t=>({x:()=>Object(Ie["a"])(t)})},Fs=[Pn,Wn,Vn,Hn,qn,Kn,Xn,Yn,Zn,Jn,Qn,tr,rr,ir,or,cr,lr,dr,hr,gr,yr,vr,Nr,Or,Tr,Ar,Rr,Fr,zr,Lr,Va,Pr,Wr,Vr,Ur,Gr,qr,Hr,Yr,Jr,ea,na,ra,aa,sa,oa,ua,ca,la,pa,ba,ba,ya,wa,Ia,Sa,Ca,ja,Ea,$a,Ra,Da,Fa,_a,za,La,La,Ba,Wa,Ua,Ga,Ha,qa,Ka,Xa,Za,Ja,Qa,es,ns,rs,as,is,us,ls,ds,ps,ms,ms,gs,gs,ys,vs,xs,ws,ks,Os,Is,Ns,Ss,Cs,Ts,$s,Ds];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const Ms of Fs)Object(Bt["e"])(Ms);n("f746");
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},fc0b:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","isFinite"),n={x:e};return r["a"].runKernel(a["sb"],n)}const u=Object(i["b"])({isFinite_:o})},ffb3:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("6ae2"),a=n("c05b"),s=n("a3f7"),i=n("54ef");
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){const e=Object(s["a"])(t,"x","sigmoid"),n={x:e};return r["a"].runKernel(a["Ac"],n)}const u=Object(i["b"])({sigmoid_:o})}}]);
//# sourceMappingURL=chunk-636d0d18.17715298.js.map